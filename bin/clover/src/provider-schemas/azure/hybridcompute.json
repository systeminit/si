{
  "swagger": "2.0",
  "info": {
    "title": "Azure hybridcompute",
    "version": "2025-01-13",
    "description": "Azure hybridcompute service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/validateLicense": {
      "post": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_ValidateLicense",
        "description": "The operation to validate a license.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute License properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Describes the tenant id."
                    },
                    "licenseType": {
                      "description": "The type of the license resource.",
                      "type": "string",
                      "enum": [
                        "ESU"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseType",
                        "modelAsString": true
                      }
                    },
                    "licenseDetails": {
                      "description": "Describes the properties of a License.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "Activated",
                            "Deactivated"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseState",
                            "modelAsString": true
                          },
                          "description": "Describes the state of the license."
                        },
                        "target": {
                          "type": "string",
                          "enum": [
                            "Windows Server 2012",
                            "Windows Server 2012 R2"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseTarget",
                            "modelAsString": true
                          },
                          "description": "Describes the license target server."
                        },
                        "edition": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Datacenter"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseEdition",
                            "modelAsString": true
                          },
                          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pCore",
                            "vCore"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseCoreType",
                            "modelAsString": true
                          },
                          "description": "Describes the license core type (pCore or vCore)."
                        },
                        "processors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of processors."
                        },
                        "assignedLicenses": {
                          "readOnly": true,
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of assigned licenses."
                        },
                        "immutableId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Describes the immutable id."
                        },
                        "volumeLicenseDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "programYear": {
                                "type": "string",
                                "description": "Describes the program year the volume license is for.",
                                "enum": [
                                  "Year 1",
                                  "Year 2",
                                  "Year 3"
                                ],
                                "x-ms-enum": {
                                  "name": "ProgramYear",
                                  "modelAsString": true
                                }
                              },
                              "invoiceId": {
                                "type": "string",
                                "description": "The invoice id for the volume license."
                              }
                            }
                          },
                          "description": "A list of volume license details."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a license in a hybrid machine."
            },
            "description": "Parameters supplied to the license validation operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Resource",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute License properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Describes the tenant id."
                    },
                    "licenseType": {
                      "description": "The type of the license resource.",
                      "type": "string",
                      "enum": [
                        "ESU"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseType",
                        "modelAsString": true
                      }
                    },
                    "licenseDetails": {
                      "description": "Describes the properties of a License.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "Activated",
                            "Deactivated"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseState",
                            "modelAsString": true
                          },
                          "description": "Describes the state of the license."
                        },
                        "target": {
                          "type": "string",
                          "enum": [
                            "Windows Server 2012",
                            "Windows Server 2012 R2"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseTarget",
                            "modelAsString": true
                          },
                          "description": "Describes the license target server."
                        },
                        "edition": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Datacenter"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseEdition",
                            "modelAsString": true
                          },
                          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pCore",
                            "vCore"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseCoreType",
                            "modelAsString": true
                          },
                          "description": "Describes the license core type (pCore or vCore)."
                        },
                        "processors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of processors."
                        },
                        "assignedLicenses": {
                          "readOnly": true,
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of assigned licenses."
                        },
                        "immutableId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Describes the immutable id."
                        },
                        "volumeLicenseDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "programYear": {
                                "type": "string",
                                "description": "Describes the program year the volume license is for.",
                                "enum": [
                                  "Year 1",
                                  "Year 2",
                                  "Year 3"
                                ],
                                "x-ms-enum": {
                                  "name": "ProgramYear",
                                  "modelAsString": true
                                }
                              },
                              "invoiceId": {
                                "type": "string",
                                "description": "The invoice id for the volume license."
                              }
                            }
                          },
                          "description": "A list of volume license details."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a license in a hybrid machine."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/licenses/{licenseName}": {
      "put": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_CreateOrUpdate",
        "description": "The operation to create or update a license.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "licenseName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the license.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute License properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Describes the tenant id."
                    },
                    "licenseType": {
                      "description": "The type of the license resource.",
                      "type": "string",
                      "enum": [
                        "ESU"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseType",
                        "modelAsString": true
                      }
                    },
                    "licenseDetails": {
                      "description": "Describes the properties of a License.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "Activated",
                            "Deactivated"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseState",
                            "modelAsString": true
                          },
                          "description": "Describes the state of the license."
                        },
                        "target": {
                          "type": "string",
                          "enum": [
                            "Windows Server 2012",
                            "Windows Server 2012 R2"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseTarget",
                            "modelAsString": true
                          },
                          "description": "Describes the license target server."
                        },
                        "edition": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Datacenter"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseEdition",
                            "modelAsString": true
                          },
                          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pCore",
                            "vCore"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseCoreType",
                            "modelAsString": true
                          },
                          "description": "Describes the license core type (pCore or vCore)."
                        },
                        "processors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of processors."
                        },
                        "assignedLicenses": {
                          "readOnly": true,
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of assigned licenses."
                        },
                        "immutableId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Describes the immutable id."
                        },
                        "volumeLicenseDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "programYear": {
                                "type": "string",
                                "description": "Describes the program year the volume license is for.",
                                "enum": [
                                  "Year 1",
                                  "Year 2",
                                  "Year 3"
                                ],
                                "x-ms-enum": {
                                  "name": "ProgramYear",
                                  "modelAsString": true
                                }
                              },
                              "invoiceId": {
                                "type": "string",
                                "description": "The invoice id for the volume license."
                              }
                            }
                          },
                          "description": "A list of volume license details."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a license in a hybrid machine."
            },
            "description": "Parameters supplied to the Create license operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Resource",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute License properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Describes the tenant id."
                    },
                    "licenseType": {
                      "description": "The type of the license resource.",
                      "type": "string",
                      "enum": [
                        "ESU"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseType",
                        "modelAsString": true
                      }
                    },
                    "licenseDetails": {
                      "description": "Describes the properties of a License.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "Activated",
                            "Deactivated"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseState",
                            "modelAsString": true
                          },
                          "description": "Describes the state of the license."
                        },
                        "target": {
                          "type": "string",
                          "enum": [
                            "Windows Server 2012",
                            "Windows Server 2012 R2"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseTarget",
                            "modelAsString": true
                          },
                          "description": "Describes the license target server."
                        },
                        "edition": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Datacenter"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseEdition",
                            "modelAsString": true
                          },
                          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pCore",
                            "vCore"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseCoreType",
                            "modelAsString": true
                          },
                          "description": "Describes the license core type (pCore or vCore)."
                        },
                        "processors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of processors."
                        },
                        "assignedLicenses": {
                          "readOnly": true,
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of assigned licenses."
                        },
                        "immutableId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Describes the immutable id."
                        },
                        "volumeLicenseDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "programYear": {
                                "type": "string",
                                "description": "Describes the program year the volume license is for.",
                                "enum": [
                                  "Year 1",
                                  "Year 2",
                                  "Year 3"
                                ],
                                "x-ms-enum": {
                                  "name": "ProgramYear",
                                  "modelAsString": true
                                }
                              },
                              "invoiceId": {
                                "type": "string",
                                "description": "The invoice id for the volume license."
                              }
                            }
                          },
                          "description": "A list of volume license details."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a license in a hybrid machine."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_Update",
        "description": "The operation to update a license.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "licenseName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the license.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "License Update properties",
                  "type": "object",
                  "properties": {
                    "licenseType": {
                      "description": "The type of the license resource.",
                      "type": "string",
                      "enum": [
                        "ESU"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseType",
                        "modelAsString": true
                      }
                    },
                    "licenseDetails": {
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "Activated",
                            "Deactivated"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseState",
                            "modelAsString": true
                          },
                          "description": "Describes the state of the license."
                        },
                        "target": {
                          "type": "string",
                          "enum": [
                            "Windows Server 2012",
                            "Windows Server 2012 R2"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseTarget",
                            "modelAsString": true
                          },
                          "description": "Describes the license target server."
                        },
                        "edition": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Datacenter"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseEdition",
                            "modelAsString": true
                          },
                          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pCore",
                            "vCore"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseCoreType",
                            "modelAsString": true
                          },
                          "description": "Describes the license core type (pCore or vCore)."
                        },
                        "processors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of processors."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a License Update."
            },
            "description": "Parameters supplied to the Update license operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute License properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Describes the tenant id."
                    },
                    "licenseType": {
                      "description": "The type of the license resource.",
                      "type": "string",
                      "enum": [
                        "ESU"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseType",
                        "modelAsString": true
                      }
                    },
                    "licenseDetails": {
                      "description": "Describes the properties of a License.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "Activated",
                            "Deactivated"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseState",
                            "modelAsString": true
                          },
                          "description": "Describes the state of the license."
                        },
                        "target": {
                          "type": "string",
                          "enum": [
                            "Windows Server 2012",
                            "Windows Server 2012 R2"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseTarget",
                            "modelAsString": true
                          },
                          "description": "Describes the license target server."
                        },
                        "edition": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Datacenter"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseEdition",
                            "modelAsString": true
                          },
                          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pCore",
                            "vCore"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseCoreType",
                            "modelAsString": true
                          },
                          "description": "Describes the license core type (pCore or vCore)."
                        },
                        "processors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of processors."
                        },
                        "assignedLicenses": {
                          "readOnly": true,
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of assigned licenses."
                        },
                        "immutableId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Describes the immutable id."
                        },
                        "volumeLicenseDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "programYear": {
                                "type": "string",
                                "description": "Describes the program year the volume license is for.",
                                "enum": [
                                  "Year 1",
                                  "Year 2",
                                  "Year 3"
                                ],
                                "x-ms-enum": {
                                  "name": "ProgramYear",
                                  "modelAsString": true
                                }
                              },
                              "invoiceId": {
                                "type": "string",
                                "description": "The invoice id for the volume license."
                              }
                            }
                          },
                          "description": "A list of volume license details."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a license in a hybrid machine."
            }
          }
        }
      },
      "get": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_Get",
        "description": "Retrieves information about the view of a license.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "licenseName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the license.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute License properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Describes the tenant id."
                    },
                    "licenseType": {
                      "description": "The type of the license resource.",
                      "type": "string",
                      "enum": [
                        "ESU"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseType",
                        "modelAsString": true
                      }
                    },
                    "licenseDetails": {
                      "description": "Describes the properties of a License.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "Activated",
                            "Deactivated"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseState",
                            "modelAsString": true
                          },
                          "description": "Describes the state of the license."
                        },
                        "target": {
                          "type": "string",
                          "enum": [
                            "Windows Server 2012",
                            "Windows Server 2012 R2"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseTarget",
                            "modelAsString": true
                          },
                          "description": "Describes the license target server."
                        },
                        "edition": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Datacenter"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseEdition",
                            "modelAsString": true
                          },
                          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pCore",
                            "vCore"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseCoreType",
                            "modelAsString": true
                          },
                          "description": "Describes the license core type (pCore or vCore)."
                        },
                        "processors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of processors."
                        },
                        "assignedLicenses": {
                          "readOnly": true,
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of assigned licenses."
                        },
                        "immutableId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Describes the immutable id."
                        },
                        "volumeLicenseDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "programYear": {
                                "type": "string",
                                "description": "Describes the program year the volume license is for.",
                                "enum": [
                                  "Year 1",
                                  "Year 2",
                                  "Year 3"
                                ],
                                "x-ms-enum": {
                                  "name": "ProgramYear",
                                  "modelAsString": true
                                }
                              },
                              "invoiceId": {
                                "type": "string",
                                "description": "The invoice id for the volume license."
                              }
                            }
                          },
                          "description": "A list of volume license details."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a license in a hybrid machine."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_Delete",
        "description": "The operation to delete a license.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "licenseName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the license.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/licenses": {
      "get": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_ListByResourceGroup",
        "description": "The operation to get all licenses of a non-Azure machine",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Hybrid Compute License properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state, which only appears in the response.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Accepted",
                              "Canceled",
                              "Deleted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Describes the tenant id."
                          },
                          "licenseType": {
                            "description": "The type of the license resource.",
                            "type": "string",
                            "enum": [
                              "ESU"
                            ],
                            "x-ms-enum": {
                              "name": "LicenseType",
                              "modelAsString": true
                            }
                          },
                          "licenseDetails": {
                            "description": "Describes the properties of a License.",
                            "type": "object",
                            "properties": {
                              "state": {
                                "type": "string",
                                "enum": [
                                  "Activated",
                                  "Deactivated"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseState",
                                  "modelAsString": true
                                },
                                "description": "Describes the state of the license."
                              },
                              "target": {
                                "type": "string",
                                "enum": [
                                  "Windows Server 2012",
                                  "Windows Server 2012 R2"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseTarget",
                                  "modelAsString": true
                                },
                                "description": "Describes the license target server."
                              },
                              "edition": {
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Datacenter"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseEdition",
                                  "modelAsString": true
                                },
                                "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "pCore",
                                  "vCore"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseCoreType",
                                  "modelAsString": true
                                },
                                "description": "Describes the license core type (pCore or vCore)."
                              },
                              "processors": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Describes the number of processors."
                              },
                              "assignedLicenses": {
                                "readOnly": true,
                                "type": "integer",
                                "format": "int32",
                                "description": "Describes the number of assigned licenses."
                              },
                              "immutableId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Describes the immutable id."
                              },
                              "volumeLicenseDetails": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "programYear": {
                                      "type": "string",
                                      "description": "Describes the program year the volume license is for.",
                                      "enum": [
                                        "Year 1",
                                        "Year 2",
                                        "Year 3"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ProgramYear",
                                        "modelAsString": true
                                      }
                                    },
                                    "invoiceId": {
                                      "type": "string",
                                      "description": "The invoice id for the volume license."
                                    }
                                  }
                                },
                                "description": "A list of volume license details."
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "Describes a license in a hybrid machine."
                  },
                  "description": "The list of licenses."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of Machines. Call ListNext() with this URI to fetch the next page of license profile."
                }
              },
              "required": [
                "value"
              ],
              "description": "The List license operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/licenses": {
      "get": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_ListBySubscription",
        "description": "The operation to get all licenses of a non-Azure machine",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Hybrid Compute License properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state, which only appears in the response.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Accepted",
                              "Canceled",
                              "Deleted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Describes the tenant id."
                          },
                          "licenseType": {
                            "description": "The type of the license resource.",
                            "type": "string",
                            "enum": [
                              "ESU"
                            ],
                            "x-ms-enum": {
                              "name": "LicenseType",
                              "modelAsString": true
                            }
                          },
                          "licenseDetails": {
                            "description": "Describes the properties of a License.",
                            "type": "object",
                            "properties": {
                              "state": {
                                "type": "string",
                                "enum": [
                                  "Activated",
                                  "Deactivated"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseState",
                                  "modelAsString": true
                                },
                                "description": "Describes the state of the license."
                              },
                              "target": {
                                "type": "string",
                                "enum": [
                                  "Windows Server 2012",
                                  "Windows Server 2012 R2"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseTarget",
                                  "modelAsString": true
                                },
                                "description": "Describes the license target server."
                              },
                              "edition": {
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Datacenter"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseEdition",
                                  "modelAsString": true
                                },
                                "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "pCore",
                                  "vCore"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseCoreType",
                                  "modelAsString": true
                                },
                                "description": "Describes the license core type (pCore or vCore)."
                              },
                              "processors": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Describes the number of processors."
                              },
                              "assignedLicenses": {
                                "readOnly": true,
                                "type": "integer",
                                "format": "int32",
                                "description": "Describes the number of assigned licenses."
                              },
                              "immutableId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Describes the immutable id."
                              },
                              "volumeLicenseDetails": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "programYear": {
                                      "type": "string",
                                      "description": "Describes the program year the volume license is for.",
                                      "enum": [
                                        "Year 1",
                                        "Year 2",
                                        "Year 3"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ProgramYear",
                                        "modelAsString": true
                                      }
                                    },
                                    "invoiceId": {
                                      "type": "string",
                                      "description": "The invoice id for the volume license."
                                    }
                                  }
                                },
                                "description": "A list of volume license details."
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "Describes a license in a hybrid machine."
                  },
                  "description": "The list of licenses."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of Machines. Call ListNext() with this URI to fetch the next page of license profile."
                }
              },
              "required": [
                "value"
              ],
              "description": "The List license operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}": {
      "put": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_CreateOrUpdate",
        "description": "The operation to create or update a hybrid machine. Please note some properties can be set only during machine creation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Machine"
            },
            "description": "Parameters supplied to the Create hybrid machine operation."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_Update",
        "description": "The operation to update a hybrid machine.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineUpdate"
            },
            "description": "Parameters supplied to the Update hybrid machine operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_Delete",
        "description": "The operation to delete a hybrid machine.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_Get",
        "description": "Retrieves information about the model view or the instance view of a hybrid machine.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The expand expression to apply on the operation.",
            "enum": [
              "instanceView"
            ],
            "x-ms-enum": {
              "name": "InstanceViewTypes",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles/{licenseProfileName}": {
      "put": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_CreateOrUpdate",
        "description": "The operation to create or update a license profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "licenseProfileName",
            "in": "path",
            "description": "The name of the license profile.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "enum": [
              "default"
            ],
            "x-ms-parameter-location": "method",
            "x-ms-enum": {
              "name": "LicenseProfileName",
              "modelAsString": false
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            },
            "description": "Parameters supplied to the Create or Update license profile operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Resource",
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            },
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_Update",
        "description": "The operation to update a license profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "licenseProfileName",
            "in": "path",
            "description": "The name of the license profile.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "enum": [
              "default"
            ],
            "x-ms-parameter-location": "method",
            "x-ms-enum": {
              "name": "LicenseProfileName",
              "modelAsString": false
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "softwareAssurance": {
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "softwareAssuranceCustomer": {
                          "type": "boolean",
                          "description": "Specifies if this machine is licensed as part of a Software Assurance agreement."
                        }
                      }
                    },
                    "esuProfile": {
                      "x-ms-client-flatten": true,
                      "description": "Hybrid Compute ESU Profile Update properties",
                      "type": "object",
                      "properties": {
                        "assignedLicense": {
                          "type": "string",
                          "description": "The resource id of the license."
                        }
                      }
                    },
                    "productProfile": {
                      "x-ms-client-flatten": true,
                      "description": "Hybrid Compute Product Profile Update properties",
                      "type": "object",
                      "properties": {
                        "subscriptionStatus": {
                          "description": "Indicates the subscription status of the product.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseProfileSubscriptionStatusUpdate",
                            "modelAsString": true
                          }
                        },
                        "productType": {
                          "description": "Indicates the product type of the license.",
                          "type": "string",
                          "enum": [
                            "WindowsServer",
                            "WindowsIoTEnterprise"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseProfileProductType",
                            "modelAsString": true
                          }
                        },
                        "productFeatures": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Product feature name."
                              },
                              "subscriptionStatus": {
                                "description": "Indicates the new status of the product feature.",
                                "type": "string",
                                "enum": [
                                  "Enable",
                                  "Disable"
                                ],
                                "x-ms-enum": {
                                  "name": "LicenseProfileSubscriptionStatusUpdate",
                                  "modelAsString": true
                                }
                              }
                            },
                            "description": "Product Feature"
                          },
                          "description": "The list of product feature updates.",
                          "x-ms-identifiers": []
                        }
                      }
                    }
                  },
                  "description": "Describe the Update properties of a license profile."
                }
              },
              "description": "Describes a License Profile Update."
            },
            "description": "Parameters supplied to the Update license profile operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_Get",
        "description": "Retrieves information about the view of a license profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "licenseProfileName",
            "in": "path",
            "description": "The name of the license profile.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "enum": [
              "default"
            ],
            "x-ms-parameter-location": "method",
            "x-ms-enum": {
              "name": "LicenseProfileName",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_Delete",
        "description": "The operation to delete a license profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "licenseProfileName",
            "in": "path",
            "description": "The name of the license profile.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "enum": [
              "default"
            ],
            "x-ms-parameter-location": "method",
            "x-ms-enum": {
              "name": "LicenseProfileName",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles": {
      "get": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_List",
        "description": "The operation to get all license profiles of a non-Azure machine",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenseProfilesListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{name}/assessPatches": {
      "post": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_AssessPatches",
        "description": "The operation to assess patches on a hybrid machine identity in Azure.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid machine."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineAssessPatchesResult"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{name}/installPatches": {
      "post": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_InstallPatches",
        "description": "The operation to install patches on a hybrid machine identity in Azure.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid machine."
          },
          {
            "name": "installPatchesInput",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "maximumDuration": {
                  "type": "string",
                  "description": "Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)"
                },
                "rebootSetting": {
                  "type": "string",
                  "description": "Defines when it is acceptable to reboot a VM during a software update operation.",
                  "enum": [
                    "IfRequired",
                    "Never",
                    "Always"
                  ],
                  "x-ms-enum": {
                    "name": "VMGuestPatchRebootSetting",
                    "modelAsString": true
                  }
                },
                "windowsParameters": {
                  "description": "Input for InstallPatches on a Windows VM, as directly received by the API",
                  "type": "object",
                  "properties": {
                    "classificationsToInclude": {
                      "type": "array",
                      "description": "The update classifications to select when installing patches for Windows.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Critical",
                          "Security",
                          "UpdateRollUp",
                          "FeaturePack",
                          "ServicePack",
                          "Definition",
                          "Tools",
                          "Updates"
                        ],
                        "x-ms-enum": {
                          "name": "VMGuestPatchClassification_Windows",
                          "modelAsString": true
                        }
                      }
                    },
                    "kbNumbersToInclude": {
                      "type": "array",
                      "description": "Kbs to include in the patch operation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "kbNumbersToExclude": {
                      "type": "array",
                      "description": "Kbs to exclude in the patch operation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "excludeKbsRequiringReboot": {
                      "type": "boolean",
                      "description": "Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true."
                    },
                    "maxPatchPublishDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "This is used to install patches that were published on or before this given max published date."
                    }
                  }
                },
                "linuxParameters": {
                  "description": "Input for InstallPatches on a Linux VM, as directly received by the API",
                  "type": "object",
                  "properties": {
                    "classificationsToInclude": {
                      "type": "array",
                      "description": "The update classifications to select when installing patches for Linux.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Critical",
                          "Security",
                          "Other"
                        ],
                        "x-ms-enum": {
                          "name": "VMGuestPatchClassification_Linux",
                          "modelAsString": true
                        }
                      }
                    },
                    "packageNameMasksToInclude": {
                      "type": "array",
                      "description": "packages to include in the patch operation. Format: packageName_packageVersion",
                      "items": {
                        "type": "string"
                      }
                    },
                    "packageNameMasksToExclude": {
                      "type": "array",
                      "description": "packages to exclude in the patch operation. Format: packageName_packageVersion",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "maximumDuration",
                "rebootSetting"
              ],
              "description": "Input for InstallPatches as directly received by the API"
            },
            "description": "Input for InstallPatches as directly received by the API"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineInstallPatchesResult"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines": {
      "get": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_ListByResourceGroup",
        "description": "Lists all the hybrid machines in the specified resource group. Use the nextLink property in the response to get the next page of hybrid machines.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/machines": {
      "get": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_ListBySubscription",
        "description": "Lists all the hybrid machines in the specified subscription. Use the nextLink property in the response to get the next page of hybrid machines.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/extensions/{extensionName}": {
      "put": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_CreateOrUpdate",
        "description": "The operation to create or update the extension.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine where the extension should be created or updated."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "extensionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "type": "object",
                  "properties": {
                    "forceUpdateTag": {
                      "type": "string",
                      "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The name of the extension handler publisher."
                    },
                    "type": {
                      "type": "string",
                      "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                    },
                    "typeHandlerVersion": {
                      "type": "string",
                      "description": "Specifies the version of the script handler."
                    },
                    "enableAutomaticUpgrade": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                    },
                    "autoUpgradeMinorVersion": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                    },
                    "settings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "Json formatted public settings for the extension."
                    },
                    "protectedSettings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The machine extension name."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler."
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "The status code."
                            },
                            "level": {
                              "type": "string",
                              "description": "The level code.",
                              "enum": [
                                "Info",
                                "Warning",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "StatusLevelTypes",
                                "modelAsString": true
                              }
                            },
                            "displayStatus": {
                              "type": "string",
                              "description": "The short localizable label for the status."
                            },
                            "message": {
                              "type": "string",
                              "description": "The detailed status message, including for alerts and error messages."
                            },
                            "time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The time of the status."
                            }
                          },
                          "description": "Instance view status."
                        }
                      },
                      "description": "Describes the Machine Extension Instance View."
                    }
                  }
                }
              },
              "description": "Describes a Machine Extension."
            },
            "description": "Parameters supplied to the Create Machine Extension operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "type": "object",
                  "properties": {
                    "forceUpdateTag": {
                      "type": "string",
                      "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The name of the extension handler publisher."
                    },
                    "type": {
                      "type": "string",
                      "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                    },
                    "typeHandlerVersion": {
                      "type": "string",
                      "description": "Specifies the version of the script handler."
                    },
                    "enableAutomaticUpgrade": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                    },
                    "autoUpgradeMinorVersion": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                    },
                    "settings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "Json formatted public settings for the extension."
                    },
                    "protectedSettings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The machine extension name."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler."
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "The status code."
                            },
                            "level": {
                              "type": "string",
                              "description": "The level code.",
                              "enum": [
                                "Info",
                                "Warning",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "StatusLevelTypes",
                                "modelAsString": true
                              }
                            },
                            "displayStatus": {
                              "type": "string",
                              "description": "The short localizable label for the status."
                            },
                            "message": {
                              "type": "string",
                              "description": "The detailed status message, including for alerts and error messages."
                            },
                            "time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The time of the status."
                            }
                          },
                          "description": "Instance view status."
                        }
                      },
                      "description": "Describes the Machine Extension Instance View."
                    }
                  }
                }
              },
              "description": "Describes a Machine Extension."
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          }
        }
      },
      "patch": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Update",
        "description": "The operation to create or update the extension.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine where the extension should be created or updated."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "extensionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Describes Machine Extension Update Properties.",
                  "type": "object",
                  "properties": {
                    "forceUpdateTag": {
                      "type": "string",
                      "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The name of the extension handler publisher."
                    },
                    "type": {
                      "type": "string",
                      "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                    },
                    "typeHandlerVersion": {
                      "type": "string",
                      "description": "Specifies the version of the script handler."
                    },
                    "enableAutomaticUpgrade": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                    },
                    "autoUpgradeMinorVersion": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                    },
                    "settings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "Json formatted public settings for the extension."
                    },
                    "protectedSettings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                    }
                  }
                }
              },
              "description": "Describes a Machine Extension Update."
            },
            "description": "Parameters supplied to the Create Machine Extension operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "type": "object",
                  "properties": {
                    "forceUpdateTag": {
                      "type": "string",
                      "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The name of the extension handler publisher."
                    },
                    "type": {
                      "type": "string",
                      "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                    },
                    "typeHandlerVersion": {
                      "type": "string",
                      "description": "Specifies the version of the script handler."
                    },
                    "enableAutomaticUpgrade": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                    },
                    "autoUpgradeMinorVersion": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                    },
                    "settings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "Json formatted public settings for the extension."
                    },
                    "protectedSettings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The machine extension name."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler."
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "The status code."
                            },
                            "level": {
                              "type": "string",
                              "description": "The level code.",
                              "enum": [
                                "Info",
                                "Warning",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "StatusLevelTypes",
                                "modelAsString": true
                              }
                            },
                            "displayStatus": {
                              "type": "string",
                              "description": "The short localizable label for the status."
                            },
                            "message": {
                              "type": "string",
                              "description": "The detailed status message, including for alerts and error messages."
                            },
                            "time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The time of the status."
                            }
                          },
                          "description": "Instance view status."
                        }
                      },
                      "description": "Describes the Machine Extension Instance View."
                    }
                  }
                }
              },
              "description": "Describes a Machine Extension."
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Delete",
        "description": "The operation to delete the extension.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine where the extension should be deleted."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Get",
        "description": "The operation to get the extension.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine containing the extension."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "type": "object",
                  "properties": {
                    "forceUpdateTag": {
                      "type": "string",
                      "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The name of the extension handler publisher."
                    },
                    "type": {
                      "type": "string",
                      "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                    },
                    "typeHandlerVersion": {
                      "type": "string",
                      "description": "Specifies the version of the script handler."
                    },
                    "enableAutomaticUpgrade": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                    },
                    "autoUpgradeMinorVersion": {
                      "type": "boolean",
                      "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                    },
                    "settings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "Json formatted public settings for the extension."
                    },
                    "protectedSettings": {
                      "type": "object",
                      "additionalProperties": {},
                      "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The machine extension name."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler."
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "The status code."
                            },
                            "level": {
                              "type": "string",
                              "description": "The level code.",
                              "enum": [
                                "Info",
                                "Warning",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "StatusLevelTypes",
                                "modelAsString": true
                              }
                            },
                            "displayStatus": {
                              "type": "string",
                              "description": "The short localizable label for the status."
                            },
                            "message": {
                              "type": "string",
                              "description": "The detailed status message, including for alerts and error messages."
                            },
                            "time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The time of the status."
                            }
                          },
                          "description": "Instance view status."
                        }
                      },
                      "description": "Describes the Machine Extension Instance View."
                    }
                  }
                }
              },
              "description": "Describes a Machine Extension."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/extensions": {
      "get": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_List",
        "description": "The operation to get all extensions of a non-Azure machine",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine containing the extension."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The expand expression to apply on the operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Describes Machine Extension Properties.",
                        "type": "object",
                        "properties": {
                          "forceUpdateTag": {
                            "type": "string",
                            "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                          },
                          "publisher": {
                            "type": "string",
                            "description": "The name of the extension handler publisher."
                          },
                          "type": {
                            "type": "string",
                            "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Specifies the version of the script handler."
                          },
                          "enableAutomaticUpgrade": {
                            "type": "boolean",
                            "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                          },
                          "autoUpgradeMinorVersion": {
                            "type": "boolean",
                            "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                          },
                          "settings": {
                            "type": "object",
                            "additionalProperties": {},
                            "description": "Json formatted public settings for the extension."
                          },
                          "protectedSettings": {
                            "type": "object",
                            "additionalProperties": {},
                            "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provisioning state, which only appears in the response."
                          },
                          "instanceView": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The machine extension name."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "status": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "The status code."
                                  },
                                  "level": {
                                    "type": "string",
                                    "description": "The level code.",
                                    "enum": [
                                      "Info",
                                      "Warning",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "StatusLevelTypes",
                                      "modelAsString": true
                                    }
                                  },
                                  "displayStatus": {
                                    "type": "string",
                                    "description": "The short localizable label for the status."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The detailed status message, including for alerts and error messages."
                                  },
                                  "time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time of the status."
                                  }
                                },
                                "description": "Instance view status."
                              }
                            },
                            "description": "Describes the Machine Extension Instance View."
                          }
                        }
                      }
                    },
                    "description": "Describes a Machine Extension."
                  },
                  "description": "The list of extensions"
                },
                "nextLink": {
                  "type": "string",
                  "description": "The uri to fetch the next page of machine extensions. Call ListNext() with this to fetch the next page of extensions."
                }
              },
              "description": "Describes the Machine Extensions List Result."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/upgradeExtensions": {
      "post": {
        "tags": [
          "MachineExtensions Upgrade"
        ],
        "operationId": "UpgradeExtensions",
        "description": "The operation to Upgrade Machine Extensions.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "extensionUpgradeParameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "extensionTargets": {
                  "description": "Describes the Extension Target Properties.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "targetVersion": {
                        "type": "object",
                        "description": "Properties for the specified Extension to Upgrade."
                      }
                    },
                    "description": "Describes the Machine Extension Target Version Properties"
                  }
                }
              },
              "description": "Describes the Machine Extension Upgrade Properties."
            },
            "description": "Parameters supplied to the Upgrade Extensions operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/locations/{location}/publishers/{publisher}/extensionTypes/{extensionType}/versions/{version}": {
      "get": {
        "tags": [
          "extensions"
        ],
        "operationId": "ExtensionMetadata_Get",
        "description": "Gets an Extension Metadata based on location, publisher, extensionType and version",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the Extension being received."
          },
          {
            "name": "publisher",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The publisher of the Extension being received."
          },
          {
            "name": "extensionType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The extensionType of the Extension being received."
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The version of the Extension being received."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The single extension based on search criteria",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The version of the Extension being received."
                    },
                    "extensionType": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The type of the Extension being received."
                    },
                    "publisher": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The publisher of the Extension being received."
                    }
                  }
                }
              },
              "description": "Describes a Extension Metadata"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/locations/{location}/publishers/{publisher}/extensionTypes/{extensionType}/versions": {
      "get": {
        "tags": [
          "extensions"
        ],
        "operationId": "ExtensionMetadata_List",
        "description": "Gets all Extension versions based on location, publisher, extensionType",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the Extension being received."
          },
          {
            "name": "publisher",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The publisher of the Extension being received."
          },
          {
            "name": "extensionType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The extensionType of the Extension being received."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The single extension based on search criteria",
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The version of the Extension being received."
                          },
                          "extensionType": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The type of the Extension being received."
                          },
                          "publisher": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The publisher of the Extension being received."
                          }
                        }
                      }
                    },
                    "description": "Describes a Extension Metadata"
                  },
                  "description": "The list of extension metadata",
                  "x-ms-identifiers": []
                }
              },
              "description": "The List Extension Metadata response."
            }
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/locations/{location}/publishers/{publisher}/extensionTypes/{extensionType}/versions/{version}": {
      "get": {
        "tags": [
          "extensions"
        ],
        "operationId": "ExtensionMetadataV2_Get",
        "description": "Gets an Extension Metadata based on location, publisher, extensionType and version",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publisher",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The publisher of the Extension being received."
          },
          {
            "name": "extensionType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The extensionType of the Extension being received."
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The version of the Extension being received."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The single extension based on search criteria.",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The version of the Extension being received."
                    },
                    "extensionType": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The type of the Extension being received."
                    },
                    "publisher": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The publisher of the Extension being received."
                    },
                    "extensionUris": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "string",
                        "format": "uri"
                      },
                      "description": "A list of locations where the extension packages can be found."
                    },
                    "extensionSignatureUri": {
                      "type": "string",
                      "readOnly": true,
                      "format": "uri",
                      "description": "Location of the signature files for the extension."
                    },
                    "operatingSystem": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The operating system (Windows, Linux, etc.) this extension supports."
                    },
                    "architecture": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "description": "Architectures (x64, arms64, etc.) that this extension supports."
                    }
                  }
                }
              },
              "description": "Describes an Extension Metadata."
            }
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/locations/{location}/publishers/{publisher}/extensionTypes/{extensionType}/versions": {
      "get": {
        "tags": [
          "extensions"
        ],
        "operationId": "ExtensionMetadataV2_List",
        "description": "Gets all Extension versions based on location, publisher, extensionType",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publisher",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The publisher of the Extension being received."
          },
          {
            "name": "extensionType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The extensionType of the Extension being received."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The single extension based on search criteria.",
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The version of the Extension being received."
                          },
                          "extensionType": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The type of the Extension being received."
                          },
                          "publisher": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The publisher of the Extension being received."
                          },
                          "extensionUris": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "string",
                              "format": "uri"
                            },
                            "description": "A list of locations where the extension packages can be found."
                          },
                          "extensionSignatureUri": {
                            "type": "string",
                            "readOnly": true,
                            "format": "uri",
                            "description": "Location of the signature files for the extension."
                          },
                          "operatingSystem": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The operating system (Windows, Linux, etc.) this extension supports."
                          },
                          "architecture": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "string"
                            },
                            "description": "Architectures (x64, arms64, etc.) that this extension supports."
                          }
                        }
                      }
                    },
                    "description": "Describes an Extension Metadata."
                  },
                  "description": "The list of extension metadata.",
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of extension metadata."
                }
              },
              "description": "The List Extension Metadata response."
            }
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/locations/{location}/publishers/{publisher}/extensionTypes": {
      "get": {
        "tags": [
          "extensions"
        ],
        "operationId": "ExtensionType_List",
        "description": "Gets all Extension types based on location and publisher",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publisher",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The publisher of the Extension being received."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the extension type."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the extension type."
                      }
                    },
                    "description": "Describes an Extension Type."
                  },
                  "description": "The list of extension types.",
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of extension types."
                }
              },
              "description": "The List of Extension Types."
            }
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/locations/{location}/publishers": {
      "get": {
        "tags": [
          "extensions"
        ],
        "operationId": "ExtensionPublisher_List",
        "description": "Gets all Extension publishers based on the location",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the extension publisher."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the extension publisher."
                      }
                    },
                    "description": "Describes an Extension Publisher."
                  },
                  "description": "The list of extension publishers.",
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of extension publishers."
                }
              },
              "description": "The List of Extension Publishers."
            }
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/operations": {
      "get": {
        "tags": [
          "operations"
        ],
        "operationId": "Operations_List",
        "description": "Gets a list of hybrid compute operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "origin": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The origin of the compute operation."
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the compute operation."
                      },
                      "display": {
                        "description": "Display properties",
                        "type": "object",
                        "properties": {
                          "operation": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The display name of the compute operation."
                          },
                          "resource": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The display name of the resource the operation applies to."
                          },
                          "description": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The description of the operation."
                          },
                          "provider": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The resource provider for the operation."
                          }
                        }
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "This property indicates if the operation is an action or a data action"
                      }
                    },
                    "description": "Describes the properties of a Compute Operation value."
                  },
                  "description": "The list of compute operations",
                  "x-ms-identifiers": []
                }
              },
              "description": "The List Compute Operation operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/networkProfile": {
      "get": {
        "tags": [
          "MachineNetworkProfile"
        ],
        "operationId": "NetworkProfile_Get",
        "description": "The operation to get network information of hybrid machine",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "readOnly": true,
              "properties": {
                "networkInterfaces": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "macAddress": {
                        "type": "string",
                        "description": "Represents MAC address of the network interface."
                      },
                      "id": {
                        "type": "string",
                        "description": "Represents the ID of the network interface."
                      },
                      "name": {
                        "type": "string",
                        "description": "Represents the name of the network interface."
                      },
                      "ipAddresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "Represents the IP Address."
                            },
                            "ipAddressVersion": {
                              "type": "string",
                              "description": "Represents the Ip Address Version."
                            },
                            "subnet": {
                              "type": "object",
                              "description": "The subnet to which this IP address belongs.",
                              "readOnly": true,
                              "properties": {
                                "addressPrefix": {
                                  "type": "string",
                                  "description": "Represents address prefix."
                                }
                              }
                            }
                          },
                          "description": "Describes properties of the IP address."
                        },
                        "description": "The list of IP addresses in this interface.",
                        "x-ms-identifiers": []
                      }
                    },
                    "description": "Describes a network interface."
                  },
                  "description": "The list of network interfaces.",
                  "x-ms-identifiers": []
                }
              },
              "description": "Describes the network information on this machine."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/hybridIdentityMetadata/{metadataName}": {
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Get",
        "summary": "Gets HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "in": "path",
            "name": "metadataName",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "description": "Name of the HybridIdentityMetadata."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Defines the HybridIdentityMetadata.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "vmId": {
                      "description": "The unique identifier for the resource.",
                      "type": "string"
                    },
                    "publicKey": {
                      "description": "The Public Key.",
                      "type": "string"
                    },
                    "identity": {
                      "type": "object",
                      "description": "Identity for the resource.",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "description": "The principal ID of resource identity.",
                          "readOnly": true
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "The tenant ID of resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The identity type.",
                          "enum": [
                            "SystemAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceIdentityType",
                            "modelAsString": false
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/hybridIdentityMetadata": {
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_ListByMachines",
        "summary": "Implements GET HybridIdentityMetadata in a machine.",
        "description": "Returns the list of HybridIdentityMetadata of the given machine.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of HybridIdentityMetadata.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of HybridIdentityMetadata.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of HybridIdentityMetadata",
                  "type": "array",
                  "items": {
                    "description": "Defines the HybridIdentityMetadata.",
                    "required": [
                      "properties"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "vmId": {
                            "description": "The unique identifier for the resource.",
                            "type": "string"
                          },
                          "publicKey": {
                            "description": "The Public Key.",
                            "type": "string"
                          },
                          "identity": {
                            "type": "object",
                            "description": "Identity for the resource.",
                            "properties": {
                              "principalId": {
                                "type": "string",
                                "description": "The principal ID of resource identity.",
                                "readOnly": true
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "The tenant ID of resource.",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The identity type.",
                                "enum": [
                                  "SystemAssigned"
                                ],
                                "x-ms-enum": {
                                  "name": "ResourceIdentityType",
                                  "modelAsString": false
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/osType/{osType}/agentVersions": {
      "get": {
        "tags": [
          "AgentVersions"
        ],
        "operationId": "AgentVersion_List",
        "description": "Gets all Agent Versions along with the download link currently present.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "osType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Defines the os type."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "readOnly": true,
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "agentVersion": {
                        "type": "string",
                        "description": "Represents the agent version."
                      },
                      "downloadLink": {
                        "type": "string",
                        "description": "Represents the download link of specific agent version."
                      },
                      "osType": {
                        "type": "string",
                        "description": "Defines the os type."
                      }
                    },
                    "description": "Describes properties of Agent Version."
                  },
                  "description": "The list of available Agent Versions.",
                  "x-ms-identifiers": [
                    "agentVersion"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next 10 available Agent Versions."
                }
              },
              "description": "Describes AgentVersions List."
            }
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/osType/{osType}/agentVersions/{version}": {
      "get": {
        "tags": [
          "AgentVersions"
        ],
        "operationId": "AgentVersion_Get",
        "description": "Gets an Agent Version along with the download link currently present.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "osType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Defines the os type"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Defines the agent version. To get latest, use latest or else a specific agent version."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "readOnly": true,
              "properties": {
                "agentVersion": {
                  "type": "string",
                  "description": "Represents the agent version."
                },
                "downloadLink": {
                  "type": "string",
                  "description": "Represents the download link of specific agent version."
                },
                "osType": {
                  "type": "string",
                  "description": "Defines the os type."
                }
              },
              "description": "Describes properties of Agent Version."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/runCommands/{runCommandName}": {
      "put": {
        "tags": [
          "MachineRunCommands"
        ],
        "operationId": "MachineRunCommands_CreateOrUpdate",
        "description": "The operation to create or update a run command.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runCommandName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the run command.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runCommandProperties",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Describes Run Command Properties",
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "The source of the run command script.",
                      "type": "object",
                      "properties": {
                        "script": {
                          "type": "string",
                          "description": "Specifies the script content to be executed on the machine."
                        },
                        "scriptUri": {
                          "type": "string",
                          "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
                        },
                        "commandId": {
                          "type": "string",
                          "description": "Specifies the commandId of predefined built-in script."
                        },
                        "scriptUriManagedIdentity": {
                          "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "type": "string",
                              "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                            },
                            "objectId": {
                              "type": "string",
                              "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                            }
                          }
                        }
                      }
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "protectedParameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "asyncExecution": {
                      "type": "boolean",
                      "default": false,
                      "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
                    },
                    "runAsUser": {
                      "type": "string",
                      "description": "Specifies the user account on the machine when executing the run command."
                    },
                    "runAsPassword": {
                      "type": "string",
                      "description": "Specifies the user account password on the machine when executing the run command.",
                      "x-ms-secret": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The timeout in seconds to execute the run command."
                    },
                    "outputBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
                    },
                    "errorBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
                    },
                    "outputBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "errorBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "readOnly": true,
                      "description": "The machine run command instance view.",
                      "type": "object",
                      "properties": {
                        "executionState": {
                          "type": "string",
                          "description": "Script execution status.",
                          "enum": [
                            "Unknown",
                            "Pending",
                            "Running",
                            "Failed",
                            "Succeeded",
                            "TimedOut",
                            "Canceled"
                          ],
                          "x-ms-enum": {
                            "name": "ExecutionState",
                            "modelAsString": true
                          }
                        },
                        "executionMessage": {
                          "type": "string",
                          "description": "Communicate script configuration errors or execution messages."
                        },
                        "exitCode": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Exit code returned from script execution."
                        },
                        "output": {
                          "type": "string",
                          "description": "Script output stream."
                        },
                        "error": {
                          "type": "string",
                          "description": "Script error stream."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script start time."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script end time."
                        },
                        "statuses": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The status code."
                              },
                              "level": {
                                "type": "string",
                                "description": "The level code.",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ExtensionsStatusLevelTypes",
                                  "modelAsString": false
                                }
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "The short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "The detailed status message, including for alerts and error messages."
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time of the status."
                              }
                            },
                            "type": "object",
                            "description": "Instance view status."
                          },
                          "x-ms-identifiers": [],
                          "description": "The  status information."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a Run Command"
            },
            "description": "Parameters supplied to the Create Run Command."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Resource",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Describes Run Command Properties",
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "The source of the run command script.",
                      "type": "object",
                      "properties": {
                        "script": {
                          "type": "string",
                          "description": "Specifies the script content to be executed on the machine."
                        },
                        "scriptUri": {
                          "type": "string",
                          "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
                        },
                        "commandId": {
                          "type": "string",
                          "description": "Specifies the commandId of predefined built-in script."
                        },
                        "scriptUriManagedIdentity": {
                          "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "type": "string",
                              "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                            },
                            "objectId": {
                              "type": "string",
                              "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                            }
                          }
                        }
                      }
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "protectedParameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "asyncExecution": {
                      "type": "boolean",
                      "default": false,
                      "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
                    },
                    "runAsUser": {
                      "type": "string",
                      "description": "Specifies the user account on the machine when executing the run command."
                    },
                    "runAsPassword": {
                      "type": "string",
                      "description": "Specifies the user account password on the machine when executing the run command.",
                      "x-ms-secret": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The timeout in seconds to execute the run command."
                    },
                    "outputBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
                    },
                    "errorBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
                    },
                    "outputBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "errorBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "readOnly": true,
                      "description": "The machine run command instance view.",
                      "type": "object",
                      "properties": {
                        "executionState": {
                          "type": "string",
                          "description": "Script execution status.",
                          "enum": [
                            "Unknown",
                            "Pending",
                            "Running",
                            "Failed",
                            "Succeeded",
                            "TimedOut",
                            "Canceled"
                          ],
                          "x-ms-enum": {
                            "name": "ExecutionState",
                            "modelAsString": true
                          }
                        },
                        "executionMessage": {
                          "type": "string",
                          "description": "Communicate script configuration errors or execution messages."
                        },
                        "exitCode": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Exit code returned from script execution."
                        },
                        "output": {
                          "type": "string",
                          "description": "Script output stream."
                        },
                        "error": {
                          "type": "string",
                          "description": "Script error stream."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script start time."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script end time."
                        },
                        "statuses": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The status code."
                              },
                              "level": {
                                "type": "string",
                                "description": "The level code.",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ExtensionsStatusLevelTypes",
                                  "modelAsString": false
                                }
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "The short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "The detailed status message, including for alerts and error messages."
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time of the status."
                              }
                            },
                            "type": "object",
                            "description": "Instance view status."
                          },
                          "x-ms-identifiers": [],
                          "description": "The  status information."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a Run Command"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Describes Run Command Properties",
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "The source of the run command script.",
                      "type": "object",
                      "properties": {
                        "script": {
                          "type": "string",
                          "description": "Specifies the script content to be executed on the machine."
                        },
                        "scriptUri": {
                          "type": "string",
                          "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
                        },
                        "commandId": {
                          "type": "string",
                          "description": "Specifies the commandId of predefined built-in script."
                        },
                        "scriptUriManagedIdentity": {
                          "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "type": "string",
                              "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                            },
                            "objectId": {
                              "type": "string",
                              "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                            }
                          }
                        }
                      }
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "protectedParameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "asyncExecution": {
                      "type": "boolean",
                      "default": false,
                      "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
                    },
                    "runAsUser": {
                      "type": "string",
                      "description": "Specifies the user account on the machine when executing the run command."
                    },
                    "runAsPassword": {
                      "type": "string",
                      "description": "Specifies the user account password on the machine when executing the run command.",
                      "x-ms-secret": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The timeout in seconds to execute the run command."
                    },
                    "outputBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
                    },
                    "errorBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
                    },
                    "outputBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "errorBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "readOnly": true,
                      "description": "The machine run command instance view.",
                      "type": "object",
                      "properties": {
                        "executionState": {
                          "type": "string",
                          "description": "Script execution status.",
                          "enum": [
                            "Unknown",
                            "Pending",
                            "Running",
                            "Failed",
                            "Succeeded",
                            "TimedOut",
                            "Canceled"
                          ],
                          "x-ms-enum": {
                            "name": "ExecutionState",
                            "modelAsString": true
                          }
                        },
                        "executionMessage": {
                          "type": "string",
                          "description": "Communicate script configuration errors or execution messages."
                        },
                        "exitCode": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Exit code returned from script execution."
                        },
                        "output": {
                          "type": "string",
                          "description": "Script output stream."
                        },
                        "error": {
                          "type": "string",
                          "description": "Script error stream."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script start time."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script end time."
                        },
                        "statuses": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The status code."
                              },
                              "level": {
                                "type": "string",
                                "description": "The level code.",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ExtensionsStatusLevelTypes",
                                  "modelAsString": false
                                }
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "The short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "The detailed status message, including for alerts and error messages."
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time of the status."
                              }
                            },
                            "type": "object",
                            "description": "Instance view status."
                          },
                          "x-ms-identifiers": [],
                          "description": "The  status information."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a Run Command"
            },
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MachineRunCommands"
        ],
        "operationId": "MachineRunCommands_Update",
        "description": "The operation to update the run command.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runCommandName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the run command.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runCommandProperties",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Describes a Machine Extension Update.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                }
              }
            },
            "description": "Parameters supplied to the Create Run Command."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Describes Run Command Properties",
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "The source of the run command script.",
                      "type": "object",
                      "properties": {
                        "script": {
                          "type": "string",
                          "description": "Specifies the script content to be executed on the machine."
                        },
                        "scriptUri": {
                          "type": "string",
                          "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
                        },
                        "commandId": {
                          "type": "string",
                          "description": "Specifies the commandId of predefined built-in script."
                        },
                        "scriptUriManagedIdentity": {
                          "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "type": "string",
                              "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                            },
                            "objectId": {
                              "type": "string",
                              "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                            }
                          }
                        }
                      }
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "protectedParameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "asyncExecution": {
                      "type": "boolean",
                      "default": false,
                      "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
                    },
                    "runAsUser": {
                      "type": "string",
                      "description": "Specifies the user account on the machine when executing the run command."
                    },
                    "runAsPassword": {
                      "type": "string",
                      "description": "Specifies the user account password on the machine when executing the run command.",
                      "x-ms-secret": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The timeout in seconds to execute the run command."
                    },
                    "outputBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
                    },
                    "errorBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
                    },
                    "outputBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "errorBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "readOnly": true,
                      "description": "The machine run command instance view.",
                      "type": "object",
                      "properties": {
                        "executionState": {
                          "type": "string",
                          "description": "Script execution status.",
                          "enum": [
                            "Unknown",
                            "Pending",
                            "Running",
                            "Failed",
                            "Succeeded",
                            "TimedOut",
                            "Canceled"
                          ],
                          "x-ms-enum": {
                            "name": "ExecutionState",
                            "modelAsString": true
                          }
                        },
                        "executionMessage": {
                          "type": "string",
                          "description": "Communicate script configuration errors or execution messages."
                        },
                        "exitCode": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Exit code returned from script execution."
                        },
                        "output": {
                          "type": "string",
                          "description": "Script output stream."
                        },
                        "error": {
                          "type": "string",
                          "description": "Script error stream."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script start time."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script end time."
                        },
                        "statuses": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The status code."
                              },
                              "level": {
                                "type": "string",
                                "description": "The level code.",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ExtensionsStatusLevelTypes",
                                  "modelAsString": false
                                }
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "The short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "The detailed status message, including for alerts and error messages."
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time of the status."
                              }
                            },
                            "type": "object",
                            "description": "Instance view status."
                          },
                          "x-ms-identifiers": [],
                          "description": "The  status information."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a Run Command"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineRunCommands"
        ],
        "operationId": "MachineRunCommands_Delete",
        "description": "The operation to delete a run command.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runCommandName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the run command.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "MachineRunCommands"
        ],
        "operationId": "MachineRunCommands_Get",
        "description": "The operation to get a run command.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runCommandName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the run command.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Describes Run Command Properties",
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "The source of the run command script.",
                      "type": "object",
                      "properties": {
                        "script": {
                          "type": "string",
                          "description": "Specifies the script content to be executed on the machine."
                        },
                        "scriptUri": {
                          "type": "string",
                          "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
                        },
                        "commandId": {
                          "type": "string",
                          "description": "Specifies the commandId of predefined built-in script."
                        },
                        "scriptUriManagedIdentity": {
                          "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "type": "string",
                              "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                            },
                            "objectId": {
                              "type": "string",
                              "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                            }
                          }
                        }
                      }
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "protectedParameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The run command parameter name."
                          },
                          "value": {
                            "type": "string",
                            "description": "The run command parameter value."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "description": "Describes the properties of a run command parameter."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "The parameters used by the script."
                    },
                    "asyncExecution": {
                      "type": "boolean",
                      "default": false,
                      "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
                    },
                    "runAsUser": {
                      "type": "string",
                      "description": "Specifies the user account on the machine when executing the run command."
                    },
                    "runAsPassword": {
                      "type": "string",
                      "description": "Specifies the user account password on the machine when executing the run command.",
                      "x-ms-secret": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The timeout in seconds to execute the run command."
                    },
                    "outputBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
                    },
                    "errorBlobUri": {
                      "type": "string",
                      "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
                    },
                    "outputBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "errorBlobManagedIdentity": {
                      "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state, which only appears in the response."
                    },
                    "instanceView": {
                      "readOnly": true,
                      "description": "The machine run command instance view.",
                      "type": "object",
                      "properties": {
                        "executionState": {
                          "type": "string",
                          "description": "Script execution status.",
                          "enum": [
                            "Unknown",
                            "Pending",
                            "Running",
                            "Failed",
                            "Succeeded",
                            "TimedOut",
                            "Canceled"
                          ],
                          "x-ms-enum": {
                            "name": "ExecutionState",
                            "modelAsString": true
                          }
                        },
                        "executionMessage": {
                          "type": "string",
                          "description": "Communicate script configuration errors or execution messages."
                        },
                        "exitCode": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Exit code returned from script execution."
                        },
                        "output": {
                          "type": "string",
                          "description": "Script output stream."
                        },
                        "error": {
                          "type": "string",
                          "description": "Script error stream."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script start time."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Script end time."
                        },
                        "statuses": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The status code."
                              },
                              "level": {
                                "type": "string",
                                "description": "The level code.",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ExtensionsStatusLevelTypes",
                                  "modelAsString": false
                                }
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "The short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "The detailed status message, including for alerts and error messages."
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time of the status."
                              }
                            },
                            "type": "object",
                            "description": "Instance view status."
                          },
                          "x-ms-identifiers": [],
                          "description": "The  status information."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a Run Command"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/runCommands": {
      "get": {
        "tags": [
          "MachineRunCommands"
        ],
        "operationId": "MachineRunCommands_List",
        "description": "The operation to get all the run commands of a non-Azure machine.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the hybrid machine.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The expand expression to apply on the operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Describes Run Command Properties",
                        "type": "object",
                        "properties": {
                          "source": {
                            "description": "The source of the run command script.",
                            "type": "object",
                            "properties": {
                              "script": {
                                "type": "string",
                                "description": "Specifies the script content to be executed on the machine."
                              },
                              "scriptUri": {
                                "type": "string",
                                "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
                              },
                              "commandId": {
                                "type": "string",
                                "description": "Specifies the commandId of predefined built-in script."
                              },
                              "scriptUriManagedIdentity": {
                                "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
                                "type": "object",
                                "properties": {
                                  "clientId": {
                                    "type": "string",
                                    "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                                  },
                                  "objectId": {
                                    "type": "string",
                                    "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                                  }
                                }
                              }
                            }
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The run command parameter name."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The run command parameter value."
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ],
                              "description": "Describes the properties of a run command parameter."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "The parameters used by the script."
                          },
                          "protectedParameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The run command parameter name."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The run command parameter value."
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ],
                              "description": "Describes the properties of a run command parameter."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "The parameters used by the script."
                          },
                          "asyncExecution": {
                            "type": "boolean",
                            "default": false,
                            "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
                          },
                          "runAsUser": {
                            "type": "string",
                            "description": "Specifies the user account on the machine when executing the run command."
                          },
                          "runAsPassword": {
                            "type": "string",
                            "description": "Specifies the user account password on the machine when executing the run command.",
                            "x-ms-secret": true
                          },
                          "timeoutInSeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The timeout in seconds to execute the run command."
                          },
                          "outputBlobUri": {
                            "type": "string",
                            "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
                          },
                          "errorBlobUri": {
                            "type": "string",
                            "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
                          },
                          "outputBlobManagedIdentity": {
                            "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                              },
                              "objectId": {
                                "type": "string",
                                "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                              }
                            }
                          },
                          "errorBlobManagedIdentity": {
                            "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                              },
                              "objectId": {
                                "type": "string",
                                "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                              }
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provisioning state, which only appears in the response."
                          },
                          "instanceView": {
                            "readOnly": true,
                            "description": "The machine run command instance view.",
                            "type": "object",
                            "properties": {
                              "executionState": {
                                "type": "string",
                                "description": "Script execution status.",
                                "enum": [
                                  "Unknown",
                                  "Pending",
                                  "Running",
                                  "Failed",
                                  "Succeeded",
                                  "TimedOut",
                                  "Canceled"
                                ],
                                "x-ms-enum": {
                                  "name": "ExecutionState",
                                  "modelAsString": true
                                }
                              },
                              "executionMessage": {
                                "type": "string",
                                "description": "Communicate script configuration errors or execution messages."
                              },
                              "exitCode": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Exit code returned from script execution."
                              },
                              "output": {
                                "type": "string",
                                "description": "Script output stream."
                              },
                              "error": {
                                "type": "string",
                                "description": "Script error stream."
                              },
                              "startTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Script start time."
                              },
                              "endTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Script end time."
                              },
                              "statuses": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "The status code."
                                    },
                                    "level": {
                                      "type": "string",
                                      "description": "The level code.",
                                      "enum": [
                                        "Info",
                                        "Warning",
                                        "Error"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ExtensionsStatusLevelTypes",
                                        "modelAsString": false
                                      }
                                    },
                                    "displayStatus": {
                                      "type": "string",
                                      "description": "The short localizable label for the status."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "The detailed status message, including for alerts and error messages."
                                    },
                                    "time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time of the status."
                                    }
                                  },
                                  "type": "object",
                                  "description": "Instance view status."
                                },
                                "x-ms-identifiers": [],
                                "description": "The  status information."
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "Describes a Run Command"
                  },
                  "description": "The list of run commands"
                },
                "nextLink": {
                  "type": "string",
                  "description": "The uri to fetch the next page of run commands. Call ListNext() with this to fetch the next page of run commands."
                }
              },
              "description": "Describes the Run Commands List Result."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/gateways/{gatewayName}": {
      "put": {
        "tags": [
          "gateways"
        ],
        "operationId": "Gateways_CreateOrUpdate",
        "description": "The operation to create or update a gateway.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the Gateway.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute Gateway properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "gatewayId": {
                      "type": "string",
                      "description": "A unique, immutable, identifier for the Gateway.",
                      "readOnly": true
                    },
                    "gatewayType": {
                      "description": "The type of the Gateway resource.",
                      "type": "string",
                      "enum": [
                        "Public"
                      ],
                      "x-ms-enum": {
                        "name": "GatewayType",
                        "modelAsString": true
                      }
                    },
                    "gatewayEndpoint": {
                      "type": "string",
                      "description": "The endpoint fqdn for the Gateway.",
                      "readOnly": true
                    },
                    "allowedFeatures": {
                      "type": "array",
                      "description": "Specifies the list of features that are enabled for this Gateway.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Describes an Arc Gateway."
            },
            "description": "Parameters supplied to the Create gateway operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Resource",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute Gateway properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "gatewayId": {
                      "type": "string",
                      "description": "A unique, immutable, identifier for the Gateway.",
                      "readOnly": true
                    },
                    "gatewayType": {
                      "description": "The type of the Gateway resource.",
                      "type": "string",
                      "enum": [
                        "Public"
                      ],
                      "x-ms-enum": {
                        "name": "GatewayType",
                        "modelAsString": true
                      }
                    },
                    "gatewayEndpoint": {
                      "type": "string",
                      "description": "The endpoint fqdn for the Gateway.",
                      "readOnly": true
                    },
                    "allowedFeatures": {
                      "type": "array",
                      "description": "Specifies the list of features that are enabled for this Gateway.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Describes an Arc Gateway."
            }
          },
          "201": {
            "description": "Updated Resource",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute Gateway properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "gatewayId": {
                      "type": "string",
                      "description": "A unique, immutable, identifier for the Gateway.",
                      "readOnly": true
                    },
                    "gatewayType": {
                      "description": "The type of the Gateway resource.",
                      "type": "string",
                      "enum": [
                        "Public"
                      ],
                      "x-ms-enum": {
                        "name": "GatewayType",
                        "modelAsString": true
                      }
                    },
                    "gatewayEndpoint": {
                      "type": "string",
                      "description": "The endpoint fqdn for the Gateway.",
                      "readOnly": true
                    },
                    "allowedFeatures": {
                      "type": "array",
                      "description": "Specifies the list of features that are enabled for this Gateway.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Describes an Arc Gateway."
            },
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "gateways"
        ],
        "operationId": "Gateways_Update",
        "description": "The operation to update a gateway.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the Gateway.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Gateway Update properties",
                  "type": "object",
                  "properties": {
                    "allowedFeatures": {
                      "type": "array",
                      "description": "Specifies the list of features that are enabled for this Gateway.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Describes a License Update."
            },
            "description": "Parameters supplied to the Update gateway operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute Gateway properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "gatewayId": {
                      "type": "string",
                      "description": "A unique, immutable, identifier for the Gateway.",
                      "readOnly": true
                    },
                    "gatewayType": {
                      "description": "The type of the Gateway resource.",
                      "type": "string",
                      "enum": [
                        "Public"
                      ],
                      "x-ms-enum": {
                        "name": "GatewayType",
                        "modelAsString": true
                      }
                    },
                    "gatewayEndpoint": {
                      "type": "string",
                      "description": "The endpoint fqdn for the Gateway.",
                      "readOnly": true
                    },
                    "allowedFeatures": {
                      "type": "array",
                      "description": "Specifies the list of features that are enabled for this Gateway.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Describes an Arc Gateway."
            }
          }
        }
      },
      "get": {
        "tags": [
          "gateways"
        ],
        "operationId": "Gateways_Get",
        "description": "Retrieves information about the view of a gateway.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the Gateway.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute Gateway properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "gatewayId": {
                      "type": "string",
                      "description": "A unique, immutable, identifier for the Gateway.",
                      "readOnly": true
                    },
                    "gatewayType": {
                      "description": "The type of the Gateway resource.",
                      "type": "string",
                      "enum": [
                        "Public"
                      ],
                      "x-ms-enum": {
                        "name": "GatewayType",
                        "modelAsString": true
                      }
                    },
                    "gatewayEndpoint": {
                      "type": "string",
                      "description": "The endpoint fqdn for the Gateway.",
                      "readOnly": true
                    },
                    "allowedFeatures": {
                      "type": "array",
                      "description": "Specifies the list of features that are enabled for this Gateway.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Describes an Arc Gateway."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "gateways"
        ],
        "operationId": "Gateways_Delete",
        "description": "The operation to delete a gateway.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the Gateway.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/gateways": {
      "get": {
        "tags": [
          "gateways"
        ],
        "operationId": "Gateways_ListByResourceGroup",
        "description": "The operation to get all gateways of a non-Azure machine",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Hybrid Compute Gateway properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state, which only appears in the response.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Accepted",
                              "Canceled",
                              "Deleted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "gatewayId": {
                            "type": "string",
                            "description": "A unique, immutable, identifier for the Gateway.",
                            "readOnly": true
                          },
                          "gatewayType": {
                            "description": "The type of the Gateway resource.",
                            "type": "string",
                            "enum": [
                              "Public"
                            ],
                            "x-ms-enum": {
                              "name": "GatewayType",
                              "modelAsString": true
                            }
                          },
                          "gatewayEndpoint": {
                            "type": "string",
                            "description": "The endpoint fqdn for the Gateway.",
                            "readOnly": true
                          },
                          "allowedFeatures": {
                            "type": "array",
                            "description": "Specifies the list of features that are enabled for this Gateway.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "description": "Describes an Arc Gateway."
                  },
                  "description": "The list of Gateways."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of Gateways. Call ListNext() with this URI to fetch the next page of Gateways."
                }
              },
              "required": [
                "value"
              ],
              "description": "The List license operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/gateways": {
      "get": {
        "tags": [
          "gateways"
        ],
        "operationId": "Gateways_ListBySubscription",
        "description": "The operation to get all gateways of a non-Azure machine",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Hybrid Compute Gateway properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state, which only appears in the response.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Accepted",
                              "Canceled",
                              "Deleted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "gatewayId": {
                            "type": "string",
                            "description": "A unique, immutable, identifier for the Gateway.",
                            "readOnly": true
                          },
                          "gatewayType": {
                            "description": "The type of the Gateway resource.",
                            "type": "string",
                            "enum": [
                              "Public"
                            ],
                            "x-ms-enum": {
                              "name": "GatewayType",
                              "modelAsString": true
                            }
                          },
                          "gatewayEndpoint": {
                            "type": "string",
                            "description": "The endpoint fqdn for the Gateway.",
                            "readOnly": true
                          },
                          "allowedFeatures": {
                            "type": "array",
                            "description": "Specifies the list of features that are enabled for this Gateway.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "description": "Describes an Arc Gateway."
                  },
                  "description": "The list of Gateways."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of Gateways. Call ListNext() with this URI to fetch the next page of Gateways."
                }
              },
              "required": [
                "value"
              ],
              "description": "The List license operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{baseProvider}/{baseResourceType}/{baseResourceName}/providers/Microsoft.HybridCompute/settings/{settingsResourceName}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "description": "Returns the base Settings for the target resource.",
        "operationId": "Settings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseProvider",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base Resource Provider.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseResourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base Resource Type.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "settingsResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "default",
            "description": "The name of the settings resource.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Settings information for the target resource.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Settings properties",
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "gatewayProperties": {
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "description": "Settings Gateway properties",
                      "properties": {
                        "gatewayResourceId": {
                          "type": "string",
                          "description": "Associated Gateway Resource Id",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.HybridCompute/gateways"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "description": "Updates the base Settings of the target resource.",
        "operationId": "Settings_Update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseProvider",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base Resource Provider.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseResourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base Resource Type.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "settingsResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "default",
            "description": "The name of the settings resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Settings details",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Settings properties",
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "gatewayProperties": {
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "description": "Settings Gateway properties",
                      "properties": {
                        "gatewayResourceId": {
                          "type": "string",
                          "description": "Associated Gateway Resource Id",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.HybridCompute/gateways"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request when updating a Settings resource. The updated Settings are returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Settings properties",
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "gatewayProperties": {
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "description": "Settings Gateway properties",
                      "properties": {
                        "gatewayResourceId": {
                          "type": "string",
                          "description": "Associated Gateway Resource Id",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.HybridCompute/gateways"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successful request when updating a Settings resource. The updated Settings are returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Settings properties",
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "gatewayProperties": {
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "description": "Settings Gateway properties",
                      "properties": {
                        "gatewayResourceId": {
                          "type": "string",
                          "description": "Associated Gateway Resource Id",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.HybridCompute/gateways"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Settings"
        ],
        "description": "Update the base Settings of the target resource.",
        "operationId": "Settings_Patch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseProvider",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base Resource Provider.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseResourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base Resource Type.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "baseResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]+",
            "description": "The name of the base resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "settingsResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "default",
            "description": "The name of the settings resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Settings details",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Settings properties",
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "gatewayProperties": {
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "description": "Settings Gateway properties",
                      "properties": {
                        "gatewayResourceId": {
                          "type": "string",
                          "description": "Associated Gateway Resource Id",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.HybridCompute/gateways"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings information for the target resource.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Settings properties",
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "gatewayProperties": {
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "description": "Settings Gateway properties",
                      "properties": {
                        "gatewayResourceId": {
                          "type": "string",
                          "description": "Associated Gateway Resource Id",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.HybridCompute/gateways"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/addExtensions": {
      "post": {
        "tags": [
          "MachineExtensions Setup"
        ],
        "operationId": "SetupExtensions",
        "description": "The operation to Setup Machine Extensions.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "extensions",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "extensions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "forceUpdateTag": {
                        "type": "string",
                        "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The name of the extension handler publisher."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Specifies the version of the script handler."
                      },
                      "enableAutomaticUpgrade": {
                        "type": "boolean",
                        "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                      },
                      "autoUpgradeMinorVersion": {
                        "type": "boolean",
                        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                      },
                      "settings": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Json formatted public settings for the extension."
                      },
                      "protectedSettings": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                      },
                      "provisioningState": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The provisioning state, which only appears in the response."
                      },
                      "instanceView": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The machine extension name."
                          },
                          "type": {
                            "type": "string",
                            "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Specifies the version of the script handler."
                          },
                          "status": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The status code."
                              },
                              "level": {
                                "type": "string",
                                "description": "The level code.",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "StatusLevelTypes",
                                  "modelAsString": true
                                }
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "The short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "The detailed status message, including for alerts and error messages."
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time of the status."
                              }
                            },
                            "description": "Instance view status."
                          }
                        },
                        "description": "Describes the Machine Extension Instance View."
                      }
                    },
                    "description": "Describes the properties of a Machine Extension."
                  },
                  "description": "The list of extensions"
                }
              }
            },
            "description": "Parameters supplied to the Setup Extensions operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "extensions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "forceUpdateTag": {
                        "type": "string",
                        "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The name of the extension handler publisher."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Specifies the version of the script handler."
                      },
                      "enableAutomaticUpgrade": {
                        "type": "boolean",
                        "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                      },
                      "autoUpgradeMinorVersion": {
                        "type": "boolean",
                        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                      },
                      "settings": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Json formatted public settings for the extension."
                      },
                      "protectedSettings": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                      },
                      "provisioningState": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The provisioning state, which only appears in the response."
                      },
                      "instanceView": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The machine extension name."
                          },
                          "type": {
                            "type": "string",
                            "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Specifies the version of the script handler."
                          },
                          "status": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The status code."
                              },
                              "level": {
                                "type": "string",
                                "description": "The level code.",
                                "enum": [
                                  "Info",
                                  "Warning",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "StatusLevelTypes",
                                  "modelAsString": true
                                }
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "The short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "The detailed status message, including for alerts and error messages."
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time of the status."
                              }
                            },
                            "description": "Instance view status."
                          }
                        },
                        "description": "Describes the Machine Extension Instance View."
                      }
                    },
                    "description": "Describes the properties of a Machine Extension."
                  },
                  "description": "The list of extensions"
                }
              }
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/privateLinkScopes": {
      "get": {
        "description": "Gets a list of all Azure Arc PrivateLinkScopes within a subscription.",
        "operationId": "PrivateLinkScopes_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list containing 0 or more Azure Arc PrivateLinkScope definitions.",
            "schema": {
              "type": "object",
              "description": "Describes the list of Azure Arc PrivateLinkScope resources.",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of Azure Arc PrivateLinkScope definitions.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      },
                      "properties": {
                        "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
                        "type": "object",
                        "properties": {
                          "publicNetworkAccess": {
                            "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                            "type": "string",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccessType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                                },
                                {
                                  "value": "SecuredByPerimeter",
                                  "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                            "readOnly": true
                          },
                          "privateLinkScopeId": {
                            "readOnly": true,
                            "description": "The Guid id of the private link scope.",
                            "type": "string"
                          },
                          "privateEndpointConnections": {
                            "readOnly": true,
                            "description": "The collection of associated Private Endpoint Connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                              "properties": {
                                "id": {
                                  "description": "The ARM Resource Id of the Private Endpoint.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "The Name of the Private Endpoint.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Azure resource type"
                                },
                                "properties": {
                                  "description": "The Private Endpoint Connection properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "Private endpoint which the connection belongs to.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Resource id of the private endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection state of the private endpoint connection.",
                                      "type": "object",
                                      "required": [
                                        "status",
                                        "description"
                                      ],
                                      "properties": {
                                        "status": {
                                          "description": "The private link service connection status.",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "The private link service connection description.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "The actions required for private link service connection.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "State of the private endpoint connection.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "groupIds": {
                                      "description": "List of group IDs.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "An Azure Arc PrivateLinkScope definition."
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to get the next set of Azure Arc PrivateLinkScope definitions if too many PrivateLinkScopes where returned in the result set."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes": {
      "get": {
        "description": "Gets a list of Azure Arc PrivateLinkScopes within a resource group.",
        "operationId": "PrivateLinkScopes_ListByResourceGroup",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list containing 0 or more Azure Arc PrivateLinkScope definitions.",
            "schema": {
              "type": "object",
              "description": "Describes the list of Azure Arc PrivateLinkScope resources.",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of Azure Arc PrivateLinkScope definitions.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      },
                      "properties": {
                        "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
                        "type": "object",
                        "properties": {
                          "publicNetworkAccess": {
                            "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                            "type": "string",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccessType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                                },
                                {
                                  "value": "SecuredByPerimeter",
                                  "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                            "readOnly": true
                          },
                          "privateLinkScopeId": {
                            "readOnly": true,
                            "description": "The Guid id of the private link scope.",
                            "type": "string"
                          },
                          "privateEndpointConnections": {
                            "readOnly": true,
                            "description": "The collection of associated Private Endpoint Connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                              "properties": {
                                "id": {
                                  "description": "The ARM Resource Id of the Private Endpoint.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "description": "The Name of the Private Endpoint.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Azure resource type"
                                },
                                "properties": {
                                  "description": "The Private Endpoint Connection properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "Private endpoint which the connection belongs to.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Resource id of the private endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection state of the private endpoint connection.",
                                      "type": "object",
                                      "required": [
                                        "status",
                                        "description"
                                      ],
                                      "properties": {
                                        "status": {
                                          "description": "The private link service connection status.",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "The private link service connection description.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "The actions required for private link service connection.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "State of the private endpoint connection.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "groupIds": {
                                      "description": "List of group IDs.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "An Azure Arc PrivateLinkScope definition."
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to get the next set of Azure Arc PrivateLinkScope definitions if too many PrivateLinkScopes where returned in the result set."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}": {
      "delete": {
        "description": "Deletes a Azure Arc PrivateLinkScope.",
        "operationId": "PrivateLinkScopes_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request when deleting an Azure Arc PrivateLinkScope."
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified PrivateLinkScope does not exist."
          }
        }
      },
      "get": {
        "description": "Returns a Azure Arc PrivateLinkScope.",
        "operationId": "PrivateLinkScopes_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure Arc PrivateLinkScope definition.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                      "type": "string",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                          },
                          {
                            "value": "Disabled",
                            "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                          },
                          {
                            "value": "SecuredByPerimeter",
                            "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                      "readOnly": true
                    },
                    "privateLinkScopeId": {
                      "readOnly": true,
                      "description": "The Guid id of the private link scope.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "readOnly": true,
                      "description": "The collection of associated Private Endpoint Connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                        "properties": {
                          "id": {
                            "description": "The ARM Resource Id of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "The Name of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure resource type"
                          },
                          "properties": {
                            "description": "The Private Endpoint Connection properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "description"
                                ],
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "State of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              },
                              "groupIds": {
                                "description": "List of group IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "An Azure Arc PrivateLinkScope definition."
            }
          }
        }
      },
      "put": {
        "description": "Creates (or updates) a Azure Arc PrivateLinkScope. Note: You cannot specify a different value for InstrumentationKey nor AppId in the Put operation.",
        "operationId": "PrivateLinkScopes_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          },
          {
            "name": "parameters",
            "description": "Properties that need to be specified to create or update a Azure Arc for Servers and Clusters PrivateLinkScope.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                      "type": "string",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                          },
                          {
                            "value": "Disabled",
                            "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                          },
                          {
                            "value": "SecuredByPerimeter",
                            "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                      "readOnly": true
                    },
                    "privateLinkScopeId": {
                      "readOnly": true,
                      "description": "The Guid id of the private link scope.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "readOnly": true,
                      "description": "The collection of associated Private Endpoint Connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                        "properties": {
                          "id": {
                            "description": "The ARM Resource Id of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "The Name of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure resource type"
                          },
                          "properties": {
                            "description": "The Private Endpoint Connection properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "description"
                                ],
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "State of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              },
                              "groupIds": {
                                "description": "List of group IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "An Azure Arc PrivateLinkScope definition."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request when creating or updating a Azure Arc PrivateLinkScope. The updated PrivateLinkScope is returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                      "type": "string",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                          },
                          {
                            "value": "Disabled",
                            "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                          },
                          {
                            "value": "SecuredByPerimeter",
                            "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                      "readOnly": true
                    },
                    "privateLinkScopeId": {
                      "readOnly": true,
                      "description": "The Guid id of the private link scope.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "readOnly": true,
                      "description": "The collection of associated Private Endpoint Connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                        "properties": {
                          "id": {
                            "description": "The ARM Resource Id of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "The Name of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure resource type"
                          },
                          "properties": {
                            "description": "The Private Endpoint Connection properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "description"
                                ],
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "State of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              },
                              "groupIds": {
                                "description": "List of group IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "An Azure Arc PrivateLinkScope definition."
            }
          },
          "201": {
            "description": "Successful request when creating or updating a Azure Arc PrivateLinkScope. The updated PrivateLinkScope was created and is returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                      "type": "string",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                          },
                          {
                            "value": "Disabled",
                            "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                          },
                          {
                            "value": "SecuredByPerimeter",
                            "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                      "readOnly": true
                    },
                    "privateLinkScopeId": {
                      "readOnly": true,
                      "description": "The Guid id of the private link scope.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "readOnly": true,
                      "description": "The collection of associated Private Endpoint Connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                        "properties": {
                          "id": {
                            "description": "The ARM Resource Id of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "The Name of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure resource type"
                          },
                          "properties": {
                            "description": "The Private Endpoint Connection properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "description"
                                ],
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "State of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              },
                              "groupIds": {
                                "description": "List of group IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "An Azure Arc PrivateLinkScope definition."
            }
          }
        }
      },
      "patch": {
        "description": "Updates an existing PrivateLinkScope's tags. To update other fields use the CreateOrUpdate method.",
        "operationId": "PrivateLinkScopes_UpdateTags",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          },
          {
            "name": "PrivateLinkScopeTags",
            "description": "Updated tag information to set into the PrivateLinkScope instance.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                }
              },
              "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkScope instance."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating the Azure Arc PrivateLinkScope's tags was successful. PrivateLinkScope tags are updated and returned with the rest of the PrivateLinkScope's object properties.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "properties": {
                  "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                      "type": "string",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                          },
                          {
                            "value": "Disabled",
                            "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                          },
                          {
                            "value": "SecuredByPerimeter",
                            "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                      "readOnly": true
                    },
                    "privateLinkScopeId": {
                      "readOnly": true,
                      "description": "The Guid id of the private link scope.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "readOnly": true,
                      "description": "The collection of associated Private Endpoint Connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                        "properties": {
                          "id": {
                            "description": "The ARM Resource Id of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "name": {
                            "description": "The Name of the Private Endpoint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure resource type"
                          },
                          "properties": {
                            "description": "The Private Endpoint Connection properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "description"
                                ],
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "State of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              },
                              "groupIds": {
                                "description": "List of group IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "An Azure Arc PrivateLinkScope definition."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a Azure Monitor PrivateLinkScope.",
        "operationId": "PrivateLinkResources_ListByPrivateLinkScope",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "type": "object",
              "description": "A list of private link resources",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A private link resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "description": "Required DNS zone names of the the private link resource.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a Azure Monitor PrivateLinkScope.",
        "operationId": "PrivateLinkResources_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified private link resource.",
            "schema": {
              "type": "object",
              "description": "A private link resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "description": "The private link resource group id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "description": "The private link resource required member names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "description": "Required DNS zone names of the the private link resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified private endpoint connection.",
            "schema": {
              "type": "object",
              "description": "A private endpoint connection",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Resource id of the private endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection state of the private endpoint connection.",
                      "type": "object",
                      "required": [
                        "status",
                        "description"
                      ],
                      "properties": {
                        "status": {
                          "description": "The private link service connection status.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The private link service connection description.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "The actions required for private link service connection.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "State of the private endpoint connection.",
                      "type": "string",
                      "readOnly": true
                    },
                    "groupIds": {
                      "description": "List of group IDs.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approve or reject a private endpoint connection with a given name.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A private endpoint connection",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Resource id of the private endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection state of the private endpoint connection.",
                      "type": "object",
                      "required": [
                        "status",
                        "description"
                      ],
                      "properties": {
                        "status": {
                          "description": "The private link service connection status.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The private link service connection description.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "The actions required for private link service connection.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "State of the private endpoint connection.",
                      "type": "string",
                      "readOnly": true
                    },
                    "groupIds": {
                      "description": "List of group IDs.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully approved or rejected private endpoint connection.",
            "schema": {
              "type": "object",
              "description": "A private endpoint connection",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Resource id of the private endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection state of the private endpoint connection.",
                      "type": "object",
                      "required": [
                        "status",
                        "description"
                      ],
                      "properties": {
                        "status": {
                          "description": "The private link service connection status.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The private link service connection description.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "The actions required for private link service connection.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "State of the private endpoint connection.",
                      "type": "string",
                      "readOnly": true
                    },
                    "groupIds": {
                      "description": "List of group IDs.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection with a given name.",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted private endpoint connection."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Private endpoint connection does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets all private endpoint connections on a private link scope.",
        "operationId": "PrivateEndpointConnections_ListByPrivateLinkScope",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private endpoint connections.",
            "schema": {
              "type": "object",
              "description": "A list of private endpoint connections.",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A private endpoint connection",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "Private endpoint which the connection belongs to.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Resource id of the private endpoint.",
                                "type": "string"
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "Connection state of the private endpoint connection.",
                            "type": "object",
                            "required": [
                              "status",
                              "description"
                            ],
                            "properties": {
                              "status": {
                                "description": "The private link service connection status.",
                                "type": "string"
                              },
                              "description": {
                                "description": "The private link service connection description.",
                                "type": "string"
                              },
                              "actionsRequired": {
                                "description": "The actions required for private link service connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "State of the private endpoint connection.",
                            "type": "string",
                            "readOnly": true
                          },
                          "groupIds": {
                            "description": "List of group IDs.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/locations/{location}/privateLinkScopes/{privateLinkScopeId}": {
      "get": {
        "description": "Returns a Azure Arc PrivateLinkScope's validation details.",
        "operationId": "PrivateLinkScopes_GetValidationDetails",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The location of the target resource.",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "privateLinkScopeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id (Guid) of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure Arc PrivateLinkScope validation details definition.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "publicNetworkAccess": {
                  "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                  "type": "string",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PublicNetworkAccessType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                      },
                      {
                        "value": "Disabled",
                        "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                      },
                      {
                        "value": "SecuredByPerimeter",
                        "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                      }
                    ]
                  }
                },
                "connectionDetails": {
                  "type": "array",
                  "description": "List of Private Endpoint Connection details.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource Id"
                      },
                      "privateIpAddress": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The private endpoint connection private ip address"
                      },
                      "linkIdentifier": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The private endpoint connection link identifier"
                      },
                      "groupId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The private endpoint connection group id"
                      },
                      "memberName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The private endpoint connection member name"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/privateLinkScopes/current": {
      "get": {
        "description": "Returns a Azure Arc PrivateLinkScope's validation details for a given machine.",
        "operationId": "PrivateLinkScopes_GetValidationDetailsForMachine",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the target machine to get the private link scope validation details for.",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure Arc PrivateLinkScope validation details definition.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "publicNetworkAccess": {
                  "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                  "type": "string",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PublicNetworkAccessType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                      },
                      {
                        "value": "Disabled",
                        "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                      },
                      {
                        "value": "SecuredByPerimeter",
                        "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                      }
                    ]
                  }
                },
                "connectionDetails": {
                  "type": "array",
                  "description": "List of Private Endpoint Connection details.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource Id"
                      },
                      "privateIpAddress": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The private endpoint connection private ip address"
                      },
                      "linkIdentifier": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The private endpoint connection link identifier"
                      },
                      "groupId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The private endpoint connection group id"
                      },
                      "memberName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The private endpoint connection member name"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.HybridCompute/networkConfigurations/current": {
      "get": {
        "tags": [
          "NetworkConfigurations"
        ],
        "description": "Returns a NetworkConfiguration for the target resource.",
        "operationId": "NetworkConfigurations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the target machine to get the private link scope validation details for.",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Network Configuration information for the target resource.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Network configuration properties",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "Resource location",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "networkConfigurationScopeId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Id (GUID)"
                    },
                    "networkConfigurationScopeResourceId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Resource Id",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    },
                    "keyProperties": {
                      "description": "Public key information for client authentication",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clientPublicKey": {
                          "description": "Current public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        },
                        "candidatePublicKey": {
                          "description": "Candidate public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "NetworkConfigurations"
        ],
        "description": "Create or update the NetworkConfiguration of the target resource.",
        "operationId": "NetworkConfigurations_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the target machine to get the private link scope validation details for.",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Network Configuration details",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Network configuration properties",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "Resource location",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "networkConfigurationScopeId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Id (GUID)"
                    },
                    "networkConfigurationScopeResourceId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Resource Id",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    },
                    "keyProperties": {
                      "description": "Public key information for client authentication",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clientPublicKey": {
                          "description": "Current public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        },
                        "candidatePublicKey": {
                          "description": "Candidate public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request when creating or updating a NetworkConfiguration. The updated NetworkConfiguration is returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Network configuration properties",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "Resource location",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "networkConfigurationScopeId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Id (GUID)"
                    },
                    "networkConfigurationScopeResourceId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Resource Id",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    },
                    "keyProperties": {
                      "description": "Public key information for client authentication",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clientPublicKey": {
                          "description": "Current public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        },
                        "candidatePublicKey": {
                          "description": "Candidate public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successful request when creating or updating a NetworkConfiguration. The updated NetworkConfiguration was created and is returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Network configuration properties",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "Resource location",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "networkConfigurationScopeId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Id (GUID)"
                    },
                    "networkConfigurationScopeResourceId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Resource Id",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    },
                    "keyProperties": {
                      "description": "Public key information for client authentication",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clientPublicKey": {
                          "description": "Current public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        },
                        "candidatePublicKey": {
                          "description": "Candidate public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkConfigurations"
        ],
        "description": "Update the endpoint to the target resource.",
        "operationId": "NetworkConfigurations_Update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the target machine to get the private link scope validation details for.",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Network Configuration details",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Network configuration properties",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "Resource location",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "networkConfigurationScopeId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Id (GUID)"
                    },
                    "networkConfigurationScopeResourceId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Resource Id",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    },
                    "keyProperties": {
                      "description": "Public key information for client authentication",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clientPublicKey": {
                          "description": "Current public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        },
                        "candidatePublicKey": {
                          "description": "Candidate public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Network Configuration information for the target resource.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "Network configuration properties",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "Resource location",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure resource tenant Id"
                    },
                    "networkConfigurationScopeId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Id (GUID)"
                    },
                    "networkConfigurationScopeResourceId": {
                      "type": "string",
                      "description": "Associated Network Configuration Scope Resource Id",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    },
                    "keyProperties": {
                      "description": "Public key information for client authentication",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clientPublicKey": {
                          "description": "Current public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        },
                        "candidatePublicKey": {
                          "description": "Candidate public key details",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "publicKey": {
                              "type": "string",
                              "description": "Public key",
                              "readOnly": true
                            },
                            "notAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Key expiration date",
                              "readOnly": true
                            },
                            "renewAfter": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Recommended key renewal date",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}/networkSecurityPerimeterConfigurations/{perimeterName}": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeterConfiguration"
        ],
        "description": "Gets the network security perimeter configuration for a private link scope.",
        "operationId": "NetworkSecurityPerimeterConfigurations_GetByPrivateLinkScope",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          },
          {
            "name": "perimeterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name, in the format {perimeterGuid}.{associationName}, of the Network Security Perimeter resource.",
            "x-ms-parameter-location": "method",
            "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[.]{1}.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved network security perimeter configuration details.",
            "schema": {
              "type": "object",
              "description": "Properties that define a Network Security Perimeter resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource type"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties that define a Network Security Perimeter resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Current state of this NetworkSecurityPerimeter: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                      "readOnly": true
                    },
                    "provisioningIssues": {
                      "type": "array",
                      "description": "Provisioning issues.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "description": "Details on issues that occurred during provisioning.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the provisioning issue.",
                            "readOnly": true
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Provisioning issue properties",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "issueType": {
                                "description": "Issue type",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "MissingPerimeterConfiguration",
                                  "MissingIdentityConfiguration",
                                  "ConfigurationPropagationFailure",
                                  "Other"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningIssueType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "MissingPerimeterConfiguration",
                                      "description": "Perimeter configuration is missing."
                                    },
                                    {
                                      "value": "MissingIdentityConfiguration",
                                      "description": "Identity configuration is missing."
                                    },
                                    {
                                      "value": "ConfigurationPropagationFailure",
                                      "description": "Configuration failed to propagate."
                                    },
                                    {
                                      "value": "Other",
                                      "description": "Other failure."
                                    }
                                  ]
                                }
                              },
                              "severity": {
                                "description": "Severity of the provisioning issue.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Warning",
                                  "Error"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningIssueSeverity",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Warning",
                                      "description": "Warnings can cause connectivity issues after provisioning succeeds."
                                    },
                                    {
                                      "value": "Error",
                                      "description": "Errors will cause association provisioning to fail."
                                    }
                                  ]
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the provisioning issue.",
                                "readOnly": true
                              },
                              "suggestedResourceIds": {
                                "type": "array",
                                "description": "ARM Ids of the resources that can be associated to the same perimeter to remediate the issue",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                },
                                "x-ms-identifiers": []
                              },
                              "suggestedAccessRules": {
                                "type": "array",
                                "description": "Access rules that can be added to the perimeter to remediate the issue",
                                "readOnly": true,
                                "items": {
                                  "type": "object",
                                  "description": "Access rule.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the access rule.",
                                      "readOnly": true
                                    },
                                    "properties": {
                                      "x-ms-client-flatten": true,
                                      "description": "Access rule properties",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "direction": {
                                          "description": "Direction of the access rule.",
                                          "readOnly": true,
                                          "type": "string",
                                          "enum": [
                                            "Inbound",
                                            "Outbound"
                                          ],
                                          "x-ms-enum": {
                                            "name": "AccessRuleDirection",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "value": "Inbound",
                                                "description": "Traffic originates outside of network."
                                              },
                                              {
                                                "value": "Outbound",
                                                "description": "Traffic originates inside the network"
                                              }
                                            ]
                                          }
                                        },
                                        "addressPrefixes": {
                                          "type": "array",
                                          "description": "Address prefixes that are allowed access.",
                                          "readOnly": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "networkSecurityPerimeter": {
                      "description": "The Network Security Perimeter associated with this configuration.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Azure resource Id"
                        },
                        "perimeterGuid": {
                          "type": "string",
                          "description": "Guid of the Network Security Perimeter",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Regional location of the perimeter"
                        }
                      }
                    },
                    "resourceAssociation": {
                      "description": "The Resource Association.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Name of the Resource Association"
                        },
                        "accessMode": {
                          "description": "The access mode",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "enforced",
                            "audit",
                            "learning"
                          ],
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enforced",
                                "description": "Indicates that resource access is controlled by the NSP definition."
                              },
                              {
                                "value": "audit",
                                "description": "Dry run mode, where traffic is evaluated against NSP Rules, logged but not enforced."
                              },
                              {
                                "value": "learning",
                                "description": "Enables traffic evaluation to fall back to resource-specific firewall configurations."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "profile": {
                      "description": "Network Security Perimeter profile",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the resource",
                          "readOnly": true
                        },
                        "accessRulesVersion": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Access rules version number",
                          "readOnly": true
                        },
                        "accessRules": {
                          "type": "array",
                          "description": "Collection of access rules for the profile",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "description": "Access rule.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the access rule.",
                                "readOnly": true
                              },
                              "properties": {
                                "x-ms-client-flatten": true,
                                "description": "Access rule properties",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "direction": {
                                    "description": "Direction of the access rule.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Inbound",
                                      "Outbound"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AccessRuleDirection",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "Inbound",
                                          "description": "Traffic originates outside of network."
                                        },
                                        {
                                          "value": "Outbound",
                                          "description": "Traffic originates inside the network"
                                        }
                                      ]
                                    }
                                  },
                                  "addressPrefixes": {
                                    "type": "array",
                                    "description": "Address prefixes that are allowed access.",
                                    "readOnly": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "diagnosticSettingsVersion": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Diagnostic settings version number",
                          "readOnly": true
                        },
                        "enabledLogCategories": {
                          "type": "array",
                          "description": "Collection of enabled log categories for the profile",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}/networkSecurityPerimeterConfigurations": {
      "get": {
        "tags": [
          "NetworkSecurityPerimeterConfiguration"
        ],
        "description": "Lists the network security perimeter configurations for a private link scope.",
        "operationId": "NetworkSecurityPerimeterConfigurations_ListByPrivateLinkScope",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved network security perimeter configuration details.",
            "schema": {
              "type": "object",
              "description": "A list of network security perimeter configurations.",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Properties that define a Network Security Perimeter resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource type"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties that define a Network Security Perimeter resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "description": "Current state of this NetworkSecurityPerimeter: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                            "readOnly": true
                          },
                          "provisioningIssues": {
                            "type": "array",
                            "description": "Provisioning issues.",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "description": "Details on issues that occurred during provisioning.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the provisioning issue.",
                                  "readOnly": true
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Provisioning issue properties",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "issueType": {
                                      "description": "Issue type",
                                      "readOnly": true,
                                      "type": "string",
                                      "enum": [
                                        "MissingPerimeterConfiguration",
                                        "MissingIdentityConfiguration",
                                        "ConfigurationPropagationFailure",
                                        "Other"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ProvisioningIssueType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "MissingPerimeterConfiguration",
                                            "description": "Perimeter configuration is missing."
                                          },
                                          {
                                            "value": "MissingIdentityConfiguration",
                                            "description": "Identity configuration is missing."
                                          },
                                          {
                                            "value": "ConfigurationPropagationFailure",
                                            "description": "Configuration failed to propagate."
                                          },
                                          {
                                            "value": "Other",
                                            "description": "Other failure."
                                          }
                                        ]
                                      }
                                    },
                                    "severity": {
                                      "description": "Severity of the provisioning issue.",
                                      "readOnly": true,
                                      "type": "string",
                                      "enum": [
                                        "Warning",
                                        "Error"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ProvisioningIssueSeverity",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "Warning",
                                            "description": "Warnings can cause connectivity issues after provisioning succeeds."
                                          },
                                          {
                                            "value": "Error",
                                            "description": "Errors will cause association provisioning to fail."
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Description of the provisioning issue.",
                                      "readOnly": true
                                    },
                                    "suggestedResourceIds": {
                                      "type": "array",
                                      "description": "ARM Ids of the resources that can be associated to the same perimeter to remediate the issue",
                                      "readOnly": true,
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-ms-identifiers": []
                                    },
                                    "suggestedAccessRules": {
                                      "type": "array",
                                      "description": "Access rules that can be added to the perimeter to remediate the issue",
                                      "readOnly": true,
                                      "items": {
                                        "type": "object",
                                        "description": "Access rule.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the access rule.",
                                            "readOnly": true
                                          },
                                          "properties": {
                                            "x-ms-client-flatten": true,
                                            "description": "Access rule properties",
                                            "readOnly": true,
                                            "type": "object",
                                            "properties": {
                                              "direction": {
                                                "description": "Direction of the access rule.",
                                                "readOnly": true,
                                                "type": "string",
                                                "enum": [
                                                  "Inbound",
                                                  "Outbound"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "AccessRuleDirection",
                                                  "modelAsString": true,
                                                  "values": [
                                                    {
                                                      "value": "Inbound",
                                                      "description": "Traffic originates outside of network."
                                                    },
                                                    {
                                                      "value": "Outbound",
                                                      "description": "Traffic originates inside the network"
                                                    }
                                                  ]
                                                }
                                              },
                                              "addressPrefixes": {
                                                "type": "array",
                                                "description": "Address prefixes that are allowed access.",
                                                "readOnly": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "networkSecurityPerimeter": {
                            "description": "The Network Security Perimeter associated with this configuration.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Azure resource Id"
                              },
                              "perimeterGuid": {
                                "type": "string",
                                "description": "Guid of the Network Security Perimeter",
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Regional location of the perimeter"
                              }
                            }
                          },
                          "resourceAssociation": {
                            "description": "The Resource Association.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Name of the Resource Association"
                              },
                              "accessMode": {
                                "description": "The access mode",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "enforced",
                                  "audit",
                                  "learning"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "enforced",
                                      "description": "Indicates that resource access is controlled by the NSP definition."
                                    },
                                    {
                                      "value": "audit",
                                      "description": "Dry run mode, where traffic is evaluated against NSP Rules, logged but not enforced."
                                    },
                                    {
                                      "value": "learning",
                                      "description": "Enables traffic evaluation to fall back to resource-specific firewall configurations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "profile": {
                            "description": "Network Security Perimeter profile",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the resource",
                                "readOnly": true
                              },
                              "accessRulesVersion": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Access rules version number",
                                "readOnly": true
                              },
                              "accessRules": {
                                "type": "array",
                                "description": "Collection of access rules for the profile",
                                "readOnly": true,
                                "items": {
                                  "type": "object",
                                  "description": "Access rule.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the access rule.",
                                      "readOnly": true
                                    },
                                    "properties": {
                                      "x-ms-client-flatten": true,
                                      "description": "Access rule properties",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "direction": {
                                          "description": "Direction of the access rule.",
                                          "readOnly": true,
                                          "type": "string",
                                          "enum": [
                                            "Inbound",
                                            "Outbound"
                                          ],
                                          "x-ms-enum": {
                                            "name": "AccessRuleDirection",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "value": "Inbound",
                                                "description": "Traffic originates outside of network."
                                              },
                                              {
                                                "value": "Outbound",
                                                "description": "Traffic originates inside the network"
                                              }
                                            ]
                                          }
                                        },
                                        "addressPrefixes": {
                                          "type": "array",
                                          "description": "Address prefixes that are allowed access.",
                                          "readOnly": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "diagnosticSettingsVersion": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Diagnostic settings version number",
                                "readOnly": true
                              },
                              "enabledLogCategories": {
                                "type": "array",
                                "description": "Collection of enabled log categories for the profile",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "x-ms-azure-resource": true
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}/networkSecurityPerimeterConfigurations/{perimeterName}/reconcile": {
      "post": {
        "tags": [
          "NetworkSecurityPerimeterConfiguration"
        ],
        "description": "Forces the network security perimeter configuration to refresh for a private link scope.",
        "operationId": "NetworkSecurityPerimeterConfigurations_ReconcileForPrivateLinkScope",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scopeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Arc PrivateLinkScope resource.",
            "x-ms-parameter-location": "method",
            "pattern": "[a-zA-Z0-9-_\\.]+"
          },
          {
            "name": "perimeterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name, in the format {perimeterGuid}.{associationName}, of the Network Security Perimeter resource.",
            "x-ms-parameter-location": "method",
            "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[.]{1}.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "Result of network security perimeter configurations.",
              "properties": {
                "location": {
                  "description": "The URL of the resource used to check the status of the asynchronous operation.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ExtensionValueListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The single extension based on search criteria",
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The version of the Extension being received."
                  },
                  "extensionType": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The type of the Extension being received."
                  },
                  "publisher": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The publisher of the Extension being received."
                  }
                }
              }
            },
            "description": "Describes a Extension Metadata"
          },
          "description": "The list of extension metadata",
          "x-ms-identifiers": []
        }
      },
      "description": "The List Extension Metadata response."
    },
    "ExtensionValue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The single extension based on search criteria",
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "readOnly": true,
              "description": "The version of the Extension being received."
            },
            "extensionType": {
              "type": "string",
              "readOnly": true,
              "description": "The type of the Extension being received."
            },
            "publisher": {
              "type": "string",
              "readOnly": true,
              "description": "The publisher of the Extension being received."
            }
          }
        }
      },
      "description": "Describes a Extension Metadata"
    },
    "ExtensionValueProperties": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "The version of the Extension being received."
        },
        "extensionType": {
          "type": "string",
          "readOnly": true,
          "description": "The type of the Extension being received."
        },
        "publisher": {
          "type": "string",
          "readOnly": true,
          "description": "The publisher of the Extension being received."
        }
      },
      "description": "Describes Extension Metadata properties"
    },
    "ExtensionValueListResultV2": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The single extension based on search criteria.",
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The version of the Extension being received."
                  },
                  "extensionType": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The type of the Extension being received."
                  },
                  "publisher": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The publisher of the Extension being received."
                  },
                  "extensionUris": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "A list of locations where the extension packages can be found."
                  },
                  "extensionSignatureUri": {
                    "type": "string",
                    "readOnly": true,
                    "format": "uri",
                    "description": "Location of the signature files for the extension."
                  },
                  "operatingSystem": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The operating system (Windows, Linux, etc.) this extension supports."
                  },
                  "architecture": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "type": "string"
                    },
                    "description": "Architectures (x64, arms64, etc.) that this extension supports."
                  }
                }
              }
            },
            "description": "Describes an Extension Metadata."
          },
          "description": "The list of extension metadata.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of extension metadata."
        }
      },
      "description": "The List Extension Metadata response."
    },
    "ExtensionValueV2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The single extension based on search criteria.",
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "readOnly": true,
              "description": "The version of the Extension being received."
            },
            "extensionType": {
              "type": "string",
              "readOnly": true,
              "description": "The type of the Extension being received."
            },
            "publisher": {
              "type": "string",
              "readOnly": true,
              "description": "The publisher of the Extension being received."
            },
            "extensionUris": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string",
                "format": "uri"
              },
              "description": "A list of locations where the extension packages can be found."
            },
            "extensionSignatureUri": {
              "type": "string",
              "readOnly": true,
              "format": "uri",
              "description": "Location of the signature files for the extension."
            },
            "operatingSystem": {
              "type": "string",
              "readOnly": true,
              "description": "The operating system (Windows, Linux, etc.) this extension supports."
            },
            "architecture": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              },
              "description": "Architectures (x64, arms64, etc.) that this extension supports."
            }
          }
        }
      },
      "description": "Describes an Extension Metadata."
    },
    "ExtensionValueV2Properties": {
      "type": "object",
      "properties": {
        "extensionUris": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "format": "uri"
          },
          "description": "A list of locations where the extension packages can be found."
        },
        "extensionSignatureUri": {
          "type": "string",
          "readOnly": true,
          "format": "uri",
          "description": "Location of the signature files for the extension."
        },
        "operatingSystem": {
          "type": "string",
          "readOnly": true,
          "description": "The operating system (Windows, Linux, etc.) this extension supports."
        },
        "architecture": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Architectures (x64, arms64, etc.) that this extension supports."
        }
      },
      "allOf": [
        {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "readOnly": true,
              "description": "The version of the Extension being received."
            },
            "extensionType": {
              "type": "string",
              "readOnly": true,
              "description": "The type of the Extension being received."
            },
            "publisher": {
              "type": "string",
              "readOnly": true,
              "description": "The publisher of the Extension being received."
            }
          },
          "description": "Describes Extension Metadata properties"
        }
      ],
      "description": "Describes Extension Metadata properties."
    },
    "ExtensionTypeListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the extension type."
              },
              "name": {
                "type": "string",
                "description": "The name of the extension type."
              }
            },
            "description": "Describes an Extension Type."
          },
          "description": "The list of extension types.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of extension types."
        }
      },
      "description": "The List of Extension Types."
    },
    "ExtensionType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the extension type."
        },
        "name": {
          "type": "string",
          "description": "The name of the extension type."
        }
      },
      "description": "Describes an Extension Type."
    },
    "ExtensionPublisherListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the extension publisher."
              },
              "name": {
                "type": "string",
                "description": "The name of the extension publisher."
              }
            },
            "description": "Describes an Extension Publisher."
          },
          "description": "The list of extension publishers.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of extension publishers."
        }
      },
      "description": "The List of Extension Publishers."
    },
    "ExtensionPublisher": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the extension publisher."
        },
        "name": {
          "type": "string",
          "description": "The name of the extension publisher."
        }
      },
      "description": "Describes an Extension Publisher."
    },
    "OperationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "The origin of the compute operation."
              },
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "The name of the compute operation."
              },
              "display": {
                "description": "Display properties",
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The display name of the compute operation."
                  },
                  "resource": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The display name of the resource the operation applies to."
                  },
                  "description": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The description of the operation."
                  },
                  "provider": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The resource provider for the operation."
                  }
                }
              },
              "isDataAction": {
                "type": "boolean",
                "readOnly": true,
                "description": "This property indicates if the operation is an action or a data action"
              }
            },
            "description": "Describes the properties of a Compute Operation value."
          },
          "description": "The list of compute operations",
          "x-ms-identifiers": []
        }
      },
      "description": "The List Compute Operation operation response."
    },
    "OperationValue": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The origin of the compute operation."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the compute operation."
        },
        "display": {
          "description": "Display properties",
          "type": "object",
          "properties": {
            "operation": {
              "type": "string",
              "readOnly": true,
              "description": "The display name of the compute operation."
            },
            "resource": {
              "type": "string",
              "readOnly": true,
              "description": "The display name of the resource the operation applies to."
            },
            "description": {
              "type": "string",
              "readOnly": true,
              "description": "The description of the operation."
            },
            "provider": {
              "type": "string",
              "readOnly": true,
              "description": "The resource provider for the operation."
            }
          }
        },
        "isDataAction": {
          "type": "boolean",
          "readOnly": true,
          "description": "This property indicates if the operation is an action or a data action"
        }
      },
      "description": "Describes the properties of a Compute Operation value."
    },
    "OperationValueDisplay": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the compute operation."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the resource the operation applies to."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "The description of the operation."
        },
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provider for the operation."
        }
      },
      "description": "Describes the properties of a Hybrid Compute Operation Value Display."
    },
    "PatchSettings": {
      "type": "object",
      "properties": {
        "assessmentMode": {
          "type": "string",
          "description": "Specifies the assessment mode.",
          "enum": [
            "ImageDefault",
            "AutomaticByPlatform"
          ],
          "x-ms-enum": {
            "name": "AssessmentModeTypes",
            "modelAsString": true
          }
        },
        "patchMode": {
          "type": "string",
          "description": "Specifies the patch mode.",
          "enum": [
            "ImageDefault",
            "AutomaticByPlatform",
            "AutomaticByOS",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "PatchModeTypes",
            "modelAsString": true
          }
        },
        "enableHotpatching": {
          "type": "boolean",
          "description": "Captures the hotpatch capability enrollment intent of the customers, which enables customers to patch their Windows machines without requiring a reboot."
        },
        "status": {
          "readOnly": true,
          "type": "object",
          "properties": {
            "hotpatchEnablementStatus": {
              "description": "Indicates the current status of the hotpatch being enabled or disabled.",
              "type": "string",
              "enum": [
                "Unknown",
                "PendingEvaluation",
                "Disabled",
                "ActionRequired",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "HotpatchEnablementStatus",
                "modelAsString": true
              }
            },
            "error": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
              "readOnly": true,
              "description": "The errors that were encountered during the hotpatch capability enrollment or disenrollment."
            }
          },
          "description": "Status of the hotpatch capability enrollment or disenrollment."
        }
      },
      "description": "Specifies the patch settings."
    },
    "AgentConfiguration": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "proxyUrl": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the URL of the proxy to be used."
        },
        "incomingConnectionsPorts": {
          "type": "array",
          "readOnly": true,
          "description": "Specifies the list of ports that the agent will be able to listen on.",
          "items": {
            "type": "string"
          }
        },
        "extensionsAllowList": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "publisher": {
                "type": "string",
                "readOnly": true,
                "description": "Publisher of the extension."
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "Type of the extension."
              }
            },
            "description": "Describes properties that can identify extensions."
          },
          "description": "Array of extensions that are allowed to be installed or updated.",
          "x-ms-identifiers": []
        },
        "extensionsBlockList": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "publisher": {
                "type": "string",
                "readOnly": true,
                "description": "Publisher of the extension."
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "Type of the extension."
              }
            },
            "description": "Describes properties that can identify extensions."
          },
          "description": "Array of extensions that are blocked (cannot be installed or updated)",
          "x-ms-identifiers": []
        },
        "proxyBypass": {
          "type": "array",
          "readOnly": true,
          "description": "List of service names which should not use the specified proxy server.",
          "items": {
            "type": "string"
          }
        },
        "extensionsEnabled": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies whether the extension service is enabled or disabled."
        },
        "guestConfigurationEnabled": {
          "type": "string",
          "readOnly": true,
          "description": "Specified whether the guest configuration service is enabled or disabled."
        },
        "configMode": {
          "type": "string",
          "readOnly": true,
          "description": "Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and guest configuration, maintained by Microsoft.",
          "enum": [
            "full",
            "monitor"
          ],
          "x-ms-enum": {
            "name": "agent configuration mode",
            "modelAsString": true
          }
        }
      },
      "description": "Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM."
    },
    "ConfigurationExtension": {
      "type": "object",
      "properties": {
        "publisher": {
          "type": "string",
          "readOnly": true,
          "description": "Publisher of the extension."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Type of the extension."
        }
      },
      "description": "Describes properties that can identify extensions."
    },
    "ServiceStatuses": {
      "type": "object",
      "properties": {
        "extensionService": {
          "description": "The state of the extension service on the Arc-enabled machine.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The current status of the service."
            },
            "startupType": {
              "type": "string",
              "description": "The behavior of the service when the Arc-enabled machine starts up."
            }
          }
        },
        "guestConfigurationService": {
          "description": "The state of the guest configuration service on the Arc-enabled machine.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The current status of the service."
            },
            "startupType": {
              "type": "string",
              "description": "The behavior of the service when the Arc-enabled machine starts up."
            }
          }
        }
      },
      "description": "Reports the state and behavior of dependent services."
    },
    "ServiceStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The current status of the service."
        },
        "startupType": {
          "type": "string",
          "description": "The behavior of the service when the Arc-enabled machine starts up."
        }
      },
      "description": "Describes the status and behavior of a service."
    },
    "FirmwareProfile": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "serialNumber": {
          "type": "string",
          "readOnly": true,
          "description": "The serial number of the firmware"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of the firmware"
        }
      },
      "description": "Describes the firmware of the machine"
    },
    "HardwareProfile": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "totalPhysicalMemoryInBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The total physical memory on the machine"
        },
        "numberOfCpuSockets": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The total number of CPU sockets available on the machine"
        },
        "processors": {
          "type": "array",
          "items": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "The name of the processor."
              },
              "numberOfCores": {
                "type": "integer",
                "format": "int32",
                "readOnly": true,
                "description": "The total number of physical cores on the processor."
              }
            },
            "description": "Describes the firmware of the machine"
          },
          "readOnly": true,
          "description": "The physical processors of the machine."
        }
      },
      "description": "Describes the hardware of the machine"
    },
    "Processor": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the processor."
        },
        "numberOfCores": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The total number of physical cores on the processor."
        }
      },
      "description": "Describes the firmware of the machine"
    },
    "StorageProfile": {
      "type": "object",
      "properties": {
        "disks": {
          "type": "array",
          "items": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "path": {
                "type": "string",
                "description": "The path of the disk."
              },
              "diskType": {
                "type": "string",
                "description": "The type of the disk."
              },
              "generatedId": {
                "type": "string",
                "description": "The generated ID of the disk."
              },
              "id": {
                "type": "string",
                "description": "The ID of the disk."
              },
              "name": {
                "type": "string",
                "description": "The name of the disk."
              },
              "maxSizeInBytes": {
                "type": "integer",
                "format": "int64",
                "description": "The size of the disk, in bytes"
              },
              "usedSpaceInBytes": {
                "type": "integer",
                "format": "int64",
                "description": "The amount of space used on the disk, in bytes"
              }
            },
            "description": "Describes a disk on the machine"
          },
          "description": "The disks on the machine."
        }
      },
      "readOnly": true,
      "description": "Describes the storage configuration of the machine"
    },
    "Disk": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "path": {
          "type": "string",
          "description": "The path of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "The type of the disk."
        },
        "generatedId": {
          "type": "string",
          "description": "The generated ID of the disk."
        },
        "id": {
          "type": "string",
          "description": "The ID of the disk."
        },
        "name": {
          "type": "string",
          "description": "The name of the disk."
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the disk, in bytes"
        },
        "usedSpaceInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of space used on the disk, in bytes"
        }
      },
      "description": "Describes a disk on the machine"
    },
    "CloudMetadata": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the cloud provider (Azure/AWS/GCP...)."
        }
      },
      "description": "The metadata of the cloud environment (Azure/GCP/AWS/OCI...)."
    },
    "AgentUpgrade": {
      "type": "object",
      "properties": {
        "desiredVersion": {
          "type": "string",
          "description": "Specifies the version info w.r.t AgentUpgrade for the machine."
        },
        "correlationId": {
          "type": "string",
          "description": "The correlation ID associated with an agent upgrade operation."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Specifies if the machine's agent should be upgraded"
        },
        "lastAttemptDesiredVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the version of the last attempt"
        },
        "lastAttemptTimestamp": {
          "type": "string",
          "readOnly": true,
          "description": "Timestamp of last upgrade attempt"
        },
        "lastAttemptStatus": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Success",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "LastAttemptStatusEnum",
            "modelAsString": true
          },
          "description": "Specifies the status of Agent Upgrade."
        },
        "lastAttemptMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Failure message of last upgrade attempt if any."
        }
      },
      "description": "The info w.r.t Agent Upgrade."
    },
    "OSProfile": {
      "type": "object",
      "properties": {
        "computerName": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the host OS name of the hybrid machine."
        },
        "windowsConfiguration": {
          "type": "object",
          "properties": {
            "patchSettings": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/PatchSettings"
            }
          },
          "description": "Specifies the windows configuration for update management."
        },
        "linuxConfiguration": {
          "type": "object",
          "properties": {
            "patchSettings": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/PatchSettings"
            }
          },
          "description": "Specifies the linux configuration for update management."
        }
      },
      "description": "Specifies the operating system settings for the hybrid machine."
    },
    "DetectedProperties": {
      "readOnly": true,
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Detected properties from the machine."
    },
    "MachineProperties": {
      "type": "object",
      "properties": {
        "locationData": {
          "type": "object",
          "description": "Metadata pertaining to the geographic location of the resource.",
          "properties": {
            "name": {
              "type": "string",
              "description": "A canonical name for the geographic or physical location.",
              "maxLength": 256
            },
            "city": {
              "type": "string",
              "description": "The city or locality where the resource is located."
            },
            "district": {
              "type": "string",
              "description": "The district, state, or province where the resource is located."
            },
            "countryOrRegion": {
              "type": "string",
              "description": "The country or region where the resource is located"
            }
          },
          "required": [
            "name"
          ]
        },
        "agentConfiguration": {
          "description": "Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "proxyUrl": {
              "type": "string",
              "readOnly": true,
              "description": "Specifies the URL of the proxy to be used."
            },
            "incomingConnectionsPorts": {
              "type": "array",
              "readOnly": true,
              "description": "Specifies the list of ports that the agent will be able to listen on.",
              "items": {
                "type": "string"
              }
            },
            "extensionsAllowList": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "publisher": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Publisher of the extension."
                  },
                  "type": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Type of the extension."
                  }
                },
                "description": "Describes properties that can identify extensions."
              },
              "description": "Array of extensions that are allowed to be installed or updated.",
              "x-ms-identifiers": []
            },
            "extensionsBlockList": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "publisher": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Publisher of the extension."
                  },
                  "type": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Type of the extension."
                  }
                },
                "description": "Describes properties that can identify extensions."
              },
              "description": "Array of extensions that are blocked (cannot be installed or updated)",
              "x-ms-identifiers": []
            },
            "proxyBypass": {
              "type": "array",
              "readOnly": true,
              "description": "List of service names which should not use the specified proxy server.",
              "items": {
                "type": "string"
              }
            },
            "extensionsEnabled": {
              "type": "string",
              "readOnly": true,
              "description": "Specifies whether the extension service is enabled or disabled."
            },
            "guestConfigurationEnabled": {
              "type": "string",
              "readOnly": true,
              "description": "Specified whether the guest configuration service is enabled or disabled."
            },
            "configMode": {
              "type": "string",
              "readOnly": true,
              "description": "Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and guest configuration, maintained by Microsoft.",
              "enum": [
                "full",
                "monitor"
              ],
              "x-ms-enum": {
                "name": "agent configuration mode",
                "modelAsString": true
              }
            }
          }
        },
        "serviceStatuses": {
          "description": "Statuses of dependent services that are reported back to ARM.",
          "type": "object",
          "properties": {
            "extensionService": {
              "description": "The state of the extension service on the Arc-enabled machine.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current status of the service."
                },
                "startupType": {
                  "type": "string",
                  "description": "The behavior of the service when the Arc-enabled machine starts up."
                }
              }
            },
            "guestConfigurationService": {
              "description": "The state of the guest configuration service on the Arc-enabled machine.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current status of the service."
                },
                "startupType": {
                  "type": "string",
                  "description": "The behavior of the service when the Arc-enabled machine starts up."
                }
              }
            }
          }
        },
        "hardwareProfile": {
          "description": "Information about the machine's hardware",
          "type": "object",
          "readOnly": true,
          "properties": {
            "totalPhysicalMemoryInBytes": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The total physical memory on the machine"
            },
            "numberOfCpuSockets": {
              "type": "integer",
              "format": "int32",
              "readOnly": true,
              "description": "The total number of CPU sockets available on the machine"
            },
            "processors": {
              "type": "array",
              "items": {
                "type": "object",
                "readOnly": true,
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The name of the processor."
                  },
                  "numberOfCores": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "The total number of physical cores on the processor."
                  }
                },
                "description": "Describes the firmware of the machine"
              },
              "readOnly": true,
              "description": "The physical processors of the machine."
            }
          }
        },
        "storageProfile": {
          "description": "Information about the machine's storage",
          "type": "object",
          "properties": {
            "disks": {
              "type": "array",
              "items": {
                "type": "object",
                "readOnly": true,
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path of the disk."
                  },
                  "diskType": {
                    "type": "string",
                    "description": "The type of the disk."
                  },
                  "generatedId": {
                    "type": "string",
                    "description": "The generated ID of the disk."
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the disk."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the disk."
                  },
                  "maxSizeInBytes": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The size of the disk, in bytes"
                  },
                  "usedSpaceInBytes": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of space used on the disk, in bytes"
                  }
                },
                "description": "Describes a disk on the machine"
              },
              "description": "The disks on the machine."
            }
          },
          "readOnly": true
        },
        "firmwareProfile": {
          "description": "Information about the machine's firmware",
          "type": "object",
          "readOnly": true,
          "properties": {
            "serialNumber": {
              "type": "string",
              "readOnly": true,
              "description": "The serial number of the firmware"
            },
            "type": {
              "type": "string",
              "readOnly": true,
              "description": "The type of the firmware"
            }
          }
        },
        "cloudMetadata": {
          "description": "The metadata of the cloud environment (Azure/GCP/AWS/OCI...).",
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "readOnly": true,
              "description": "Specifies the cloud provider (Azure/AWS/GCP...)."
            }
          }
        },
        "agentUpgrade": {
          "description": "The info of the machine w.r.t Agent Upgrade",
          "type": "object",
          "properties": {
            "desiredVersion": {
              "type": "string",
              "description": "Specifies the version info w.r.t AgentUpgrade for the machine."
            },
            "correlationId": {
              "type": "string",
              "description": "The correlation ID associated with an agent upgrade operation."
            },
            "enableAutomaticUpgrade": {
              "type": "boolean",
              "description": "Specifies if the machine's agent should be upgraded"
            },
            "lastAttemptDesiredVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Specifies the version of the last attempt"
            },
            "lastAttemptTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "Timestamp of last upgrade attempt"
            },
            "lastAttemptStatus": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "Success",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "LastAttemptStatusEnum",
                "modelAsString": true
              },
              "description": "Specifies the status of Agent Upgrade."
            },
            "lastAttemptMessage": {
              "type": "string",
              "readOnly": true,
              "description": "Failure message of last upgrade attempt if any."
            }
          }
        },
        "osProfile": {
          "$ref": "#/definitions/OSProfile",
          "description": "Specifies the operating system settings for the hybrid machine."
        },
        "licenseProfile": {
          "$ref": "#/definitions/LicenseProfileMachineInstanceView",
          "description": "Specifies the License related properties for a machine."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state, which only appears in the response."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The status of the hybrid machine agent.",
          "enum": [
            "Connected",
            "Disconnected",
            "Error"
          ],
          "x-ms-enum": {
            "name": "StatusTypes",
            "modelAsString": true
          }
        },
        "lastStatusChange": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time of the last status change."
        },
        "errorDetails": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail"
          },
          "description": "Details about the error state.",
          "x-ms-identifiers": []
        },
        "agentVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The hybrid machine agent full version."
        },
        "vmId": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Specifies the hybrid machine unique ID."
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the hybrid machine display name."
        },
        "machineFqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the hybrid machine FQDN."
        },
        "clientPublicKey": {
          "type": "string",
          "description": "Public Key that the client provides to be used during initial resource onboarding"
        },
        "identityKeyStore": {
          "description": "Specifies the identity key store a machine is using.",
          "type": "string",
          "enum": [
            "TPM",
            "Default"
          ],
          "x-ms-enum": {
            "name": "IdentityKeyStore",
            "modelAsString": true
          }
        },
        "tpmEkCertificate": {
          "type": "string",
          "description": "Endorsement Key Certificate of the Trusted Platform Module (TPM) that the client provides to be used during initial resource onboarding."
        },
        "osName": {
          "readOnly": true,
          "type": "string",
          "description": "The Operating System running on the hybrid machine."
        },
        "osVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The version of Operating System running on the hybrid machine."
        },
        "osType": {
          "type": "string",
          "description": "The type of Operating System (windows/linux)."
        },
        "vmUuid": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the Arc Machine's unique SMBIOS ID"
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The machine extension name."
              },
              "type": {
                "type": "string",
                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
              },
              "typeHandlerVersion": {
                "type": "string",
                "description": "Specifies the version of the script handler."
              },
              "status": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The status code."
                  },
                  "level": {
                    "type": "string",
                    "description": "The level code.",
                    "enum": [
                      "Info",
                      "Warning",
                      "Error"
                    ],
                    "x-ms-enum": {
                      "name": "StatusLevelTypes",
                      "modelAsString": true
                    }
                  },
                  "displayStatus": {
                    "type": "string",
                    "description": "The short localizable label for the status."
                  },
                  "message": {
                    "type": "string",
                    "description": "The detailed status message, including for alerts and error messages."
                  },
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time of the status."
                  }
                },
                "description": "Instance view status."
              }
            },
            "description": "Describes the Machine Extension Instance View."
          },
          "description": "Machine Extensions information (deprecated field)",
          "x-ms-identifiers": []
        },
        "osSku": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the Operating System product SKU."
        },
        "osEdition": {
          "readOnly": true,
          "type": "string",
          "description": "The edition of the Operating System."
        },
        "domainName": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the Windows domain name."
        },
        "adFqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the AD fully qualified display name."
        },
        "dnsFqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the DNS fully qualified display name."
        },
        "privateLinkScopeResourceId": {
          "type": "string",
          "description": "The resource id of the private link scope this machine is assigned to, if any."
        },
        "parentClusterResourceId": {
          "type": "string",
          "description": "The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any."
        },
        "mssqlDiscovered": {
          "type": "string",
          "description": "Specifies whether any MS SQL instance is discovered on the machine."
        },
        "detectedProperties": {
          "description": "Detected properties from the machine.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "networkProfile": {
          "description": "Information about the network the machine is on.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "networkInterfaces": {
              "type": "array",
              "items": {
                "type": "object",
                "readOnly": true,
                "properties": {
                  "macAddress": {
                    "type": "string",
                    "description": "Represents MAC address of the network interface."
                  },
                  "id": {
                    "type": "string",
                    "description": "Represents the ID of the network interface."
                  },
                  "name": {
                    "type": "string",
                    "description": "Represents the name of the network interface."
                  },
                  "ipAddresses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "Represents the IP Address."
                        },
                        "ipAddressVersion": {
                          "type": "string",
                          "description": "Represents the Ip Address Version."
                        },
                        "subnet": {
                          "type": "object",
                          "description": "The subnet to which this IP address belongs.",
                          "readOnly": true,
                          "properties": {
                            "addressPrefix": {
                              "type": "string",
                              "description": "Represents address prefix."
                            }
                          }
                        }
                      },
                      "description": "Describes properties of the IP address."
                    },
                    "description": "The list of IP addresses in this interface.",
                    "x-ms-identifiers": []
                  }
                },
                "description": "Describes a network interface."
              },
              "description": "The list of network interfaces.",
              "x-ms-identifiers": []
            }
          }
        }
      },
      "description": "Describes the properties of a hybrid machine."
    },
    "MachineUpdateProperties": {
      "type": "object",
      "properties": {
        "locationData": {
          "type": "object",
          "description": "Metadata pertaining to the geographic location of the resource.",
          "properties": {
            "name": {
              "type": "string",
              "description": "A canonical name for the geographic or physical location.",
              "maxLength": 256
            },
            "city": {
              "type": "string",
              "description": "The city or locality where the resource is located."
            },
            "district": {
              "type": "string",
              "description": "The district, state, or province where the resource is located."
            },
            "countryOrRegion": {
              "type": "string",
              "description": "The country or region where the resource is located"
            }
          },
          "required": [
            "name"
          ]
        },
        "osProfile": {
          "$ref": "#/definitions/OSProfile"
        },
        "cloudMetadata": {
          "description": "The metadata of the cloud environment (Azure/GCP/AWS/OCI...).",
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "readOnly": true,
              "description": "Specifies the cloud provider (Azure/AWS/GCP...)."
            }
          }
        },
        "agentUpgrade": {
          "description": "The info of the machine w.r.t Agent Upgrade",
          "type": "object",
          "properties": {
            "desiredVersion": {
              "type": "string",
              "description": "Specifies the version info w.r.t AgentUpgrade for the machine."
            },
            "correlationId": {
              "type": "string",
              "description": "The correlation ID associated with an agent upgrade operation."
            },
            "enableAutomaticUpgrade": {
              "type": "boolean",
              "description": "Specifies if the machine's agent should be upgraded"
            },
            "lastAttemptDesiredVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Specifies the version of the last attempt"
            },
            "lastAttemptTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "Timestamp of last upgrade attempt"
            },
            "lastAttemptStatus": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "Success",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "LastAttemptStatusEnum",
                "modelAsString": true
              },
              "description": "Specifies the status of Agent Upgrade."
            },
            "lastAttemptMessage": {
              "type": "string",
              "readOnly": true,
              "description": "Failure message of last upgrade attempt if any."
            }
          }
        },
        "parentClusterResourceId": {
          "type": "string",
          "description": "The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any."
        },
        "privateLinkScopeResourceId": {
          "type": "string",
          "description": "The resource id of the private link scope this machine is assigned to, if any."
        },
        "identityKeyStore": {
          "type": "string",
          "description": "Identity key store type of the machine"
        },
        "tpmEkCertificate": {
          "type": "string",
          "description": "Endorsement Key Certificate of the Trusted Platform Module (TPM) that the client provides to be used during initial resource onboarding."
        }
      },
      "description": "Describes the ARM updatable properties of a hybrid machine."
    },
    "Machine": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineProperties",
          "description": "Hybrid Compute Machine properties"
        },
        "resources": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Describes Machine Extension Properties.",
                "type": "object",
                "properties": {
                  "forceUpdateTag": {
                    "type": "string",
                    "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                  },
                  "publisher": {
                    "type": "string",
                    "description": "The name of the extension handler publisher."
                  },
                  "type": {
                    "type": "string",
                    "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                  },
                  "typeHandlerVersion": {
                    "type": "string",
                    "description": "Specifies the version of the script handler."
                  },
                  "enableAutomaticUpgrade": {
                    "type": "boolean",
                    "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                  },
                  "autoUpgradeMinorVersion": {
                    "type": "boolean",
                    "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                  },
                  "settings": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Json formatted public settings for the extension."
                  },
                  "protectedSettings": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The provisioning state, which only appears in the response."
                  },
                  "instanceView": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The machine extension name."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Specifies the version of the script handler."
                      },
                      "status": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "The status code."
                          },
                          "level": {
                            "type": "string",
                            "description": "The level code.",
                            "enum": [
                              "Info",
                              "Warning",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "StatusLevelTypes",
                              "modelAsString": true
                            }
                          },
                          "displayStatus": {
                            "type": "string",
                            "description": "The short localizable label for the status."
                          },
                          "message": {
                            "type": "string",
                            "description": "The detailed status message, including for alerts and error messages."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time of the status."
                          }
                        },
                        "description": "Instance view status."
                      }
                    },
                    "description": "Describes the Machine Extension Instance View."
                  }
                }
              }
            },
            "description": "Describes a Machine Extension."
          },
          "description": "The list of extensions affiliated to the machine"
        },
        "identity": {
          "type": "object",
          "description": "Identity for the resource.",
          "properties": {
            "principalId": {
              "type": "string",
              "description": "The principal ID of resource identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "The tenant ID of resource.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The identity type.",
              "enum": [
                "SystemAssigned"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc.",
          "enum": [
            "AVS",
            "HCI",
            "SCVMM",
            "VMware",
            "EPS",
            "GCP",
            "AWS"
          ],
          "x-ms-enum": {
            "name": "ArcKindEnum ",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "title": "Tracked Resource",
          "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
          "properties": {
            "id": {
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "type": "object",
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "tags": {
              "type": "object",
              "description": "Resource tags.",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            },
            "location": {
              "type": "string",
              "description": "The geo-location where the resource lives",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          },
          "required": [
            "location"
          ]
        }
      ],
      "description": "Describes a hybrid machine."
    },
    "ArcKindEnum": {
      "type": "string",
      "description": "Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc.",
      "enum": [
        "AVS",
        "HCI",
        "SCVMM",
        "VMware",
        "EPS",
        "GCP",
        "AWS"
      ],
      "x-ms-enum": {
        "name": "ArcKindEnum ",
        "modelAsString": true
      }
    },
    "MachineUpdate": {
      "type": "object",
      "properties": {
        "identity": {
          "type": "object",
          "description": "Identity for the resource.",
          "properties": {
            "principalId": {
              "type": "string",
              "description": "The principal ID of resource identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "The tenant ID of resource.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The identity type.",
              "enum": [
                "SystemAssigned"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc.",
          "enum": [
            "AVS",
            "HCI",
            "SCVMM",
            "VMware",
            "EPS",
            "GCP",
            "AWS"
          ],
          "x-ms-enum": {
            "name": "ArcKindEnum ",
            "modelAsString": true
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineUpdateProperties",
          "description": "Hybrid Compute Machine properties"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The Update Resource model definition.",
          "properties": {
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Resource tags"
            }
          }
        }
      ],
      "description": "Describes a hybrid machine Update."
    },
    "MachineListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Machine"
          },
          "description": "The list of hybrid machines."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Machines. Call ListNext() with this URI to fetch the next page of hybrid machines."
        }
      },
      "required": [
        "value"
      ],
      "description": "The List hybrid machine operation response."
    },
    "ProvisioningState": {
      "readOnly": true,
      "type": "string",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Accepted",
        "Canceled",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "description": "The provisioning state, which only appears in the response."
    },
    "License": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Hybrid Compute License properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state, which only appears in the response.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Accepted",
                "Canceled",
                "Deleted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "tenantId": {
              "type": "string",
              "description": "Describes the tenant id."
            },
            "licenseType": {
              "description": "The type of the license resource.",
              "type": "string",
              "enum": [
                "ESU"
              ],
              "x-ms-enum": {
                "name": "LicenseType",
                "modelAsString": true
              }
            },
            "licenseDetails": {
              "description": "Describes the properties of a License.",
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": [
                    "Activated",
                    "Deactivated"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseState",
                    "modelAsString": true
                  },
                  "description": "Describes the state of the license."
                },
                "target": {
                  "type": "string",
                  "enum": [
                    "Windows Server 2012",
                    "Windows Server 2012 R2"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseTarget",
                    "modelAsString": true
                  },
                  "description": "Describes the license target server."
                },
                "edition": {
                  "type": "string",
                  "enum": [
                    "Standard",
                    "Datacenter"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseEdition",
                    "modelAsString": true
                  },
                  "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "pCore",
                    "vCore"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseCoreType",
                    "modelAsString": true
                  },
                  "description": "Describes the license core type (pCore or vCore)."
                },
                "processors": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Describes the number of processors."
                },
                "assignedLicenses": {
                  "readOnly": true,
                  "type": "integer",
                  "format": "int32",
                  "description": "Describes the number of assigned licenses."
                },
                "immutableId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Describes the immutable id."
                },
                "volumeLicenseDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "programYear": {
                        "type": "string",
                        "description": "Describes the program year the volume license is for.",
                        "enum": [
                          "Year 1",
                          "Year 2",
                          "Year 3"
                        ],
                        "x-ms-enum": {
                          "name": "ProgramYear",
                          "modelAsString": true
                        }
                      },
                      "invoiceId": {
                        "type": "string",
                        "description": "The invoice id for the volume license."
                      }
                    }
                  },
                  "description": "A list of volume license details."
                }
              }
            }
          }
        }
      },
      "description": "Describes a license in a hybrid machine."
    },
    "LicenseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state, which only appears in the response.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Accepted",
            "Canceled",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "description": "Describes the tenant id."
        },
        "licenseType": {
          "description": "The type of the license resource.",
          "type": "string",
          "enum": [
            "ESU"
          ],
          "x-ms-enum": {
            "name": "LicenseType",
            "modelAsString": true
          }
        },
        "licenseDetails": {
          "description": "Describes the properties of a License.",
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "enum": [
                "Activated",
                "Deactivated"
              ],
              "x-ms-enum": {
                "name": "LicenseState",
                "modelAsString": true
              },
              "description": "Describes the state of the license."
            },
            "target": {
              "type": "string",
              "enum": [
                "Windows Server 2012",
                "Windows Server 2012 R2"
              ],
              "x-ms-enum": {
                "name": "LicenseTarget",
                "modelAsString": true
              },
              "description": "Describes the license target server."
            },
            "edition": {
              "type": "string",
              "enum": [
                "Standard",
                "Datacenter"
              ],
              "x-ms-enum": {
                "name": "LicenseEdition",
                "modelAsString": true
              },
              "description": "Describes the edition of the license. The values are either Standard or Datacenter."
            },
            "type": {
              "type": "string",
              "enum": [
                "pCore",
                "vCore"
              ],
              "x-ms-enum": {
                "name": "LicenseCoreType",
                "modelAsString": true
              },
              "description": "Describes the license core type (pCore or vCore)."
            },
            "processors": {
              "type": "integer",
              "format": "int32",
              "description": "Describes the number of processors."
            },
            "assignedLicenses": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Describes the number of assigned licenses."
            },
            "immutableId": {
              "readOnly": true,
              "type": "string",
              "description": "Describes the immutable id."
            },
            "volumeLicenseDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "programYear": {
                    "type": "string",
                    "description": "Describes the program year the volume license is for.",
                    "enum": [
                      "Year 1",
                      "Year 2",
                      "Year 3"
                    ],
                    "x-ms-enum": {
                      "name": "ProgramYear",
                      "modelAsString": true
                    }
                  },
                  "invoiceId": {
                    "type": "string",
                    "description": "The invoice id for the volume license."
                  }
                }
              },
              "description": "A list of volume license details."
            }
          }
        }
      },
      "description": "Describes the properties of a License Profile."
    },
    "LicenseUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "License Update properties",
          "type": "object",
          "properties": {
            "licenseType": {
              "description": "The type of the license resource.",
              "type": "string",
              "enum": [
                "ESU"
              ],
              "x-ms-enum": {
                "name": "LicenseType",
                "modelAsString": true
              }
            },
            "licenseDetails": {
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": [
                    "Activated",
                    "Deactivated"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseState",
                    "modelAsString": true
                  },
                  "description": "Describes the state of the license."
                },
                "target": {
                  "type": "string",
                  "enum": [
                    "Windows Server 2012",
                    "Windows Server 2012 R2"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseTarget",
                    "modelAsString": true
                  },
                  "description": "Describes the license target server."
                },
                "edition": {
                  "type": "string",
                  "enum": [
                    "Standard",
                    "Datacenter"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseEdition",
                    "modelAsString": true
                  },
                  "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "pCore",
                    "vCore"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseCoreType",
                    "modelAsString": true
                  },
                  "description": "Describes the license core type (pCore or vCore)."
                },
                "processors": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Describes the number of processors."
                }
              }
            }
          }
        }
      },
      "description": "Describes a License Update."
    },
    "LicenseUpdateProperties": {
      "type": "object",
      "properties": {
        "licenseType": {
          "description": "The type of the license resource.",
          "type": "string",
          "enum": [
            "ESU"
          ],
          "x-ms-enum": {
            "name": "LicenseType",
            "modelAsString": true
          }
        },
        "licenseDetails": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "enum": [
                "Activated",
                "Deactivated"
              ],
              "x-ms-enum": {
                "name": "LicenseState",
                "modelAsString": true
              },
              "description": "Describes the state of the license."
            },
            "target": {
              "type": "string",
              "enum": [
                "Windows Server 2012",
                "Windows Server 2012 R2"
              ],
              "x-ms-enum": {
                "name": "LicenseTarget",
                "modelAsString": true
              },
              "description": "Describes the license target server."
            },
            "edition": {
              "type": "string",
              "enum": [
                "Standard",
                "Datacenter"
              ],
              "x-ms-enum": {
                "name": "LicenseEdition",
                "modelAsString": true
              },
              "description": "Describes the edition of the license. The values are either Standard or Datacenter."
            },
            "type": {
              "type": "string",
              "enum": [
                "pCore",
                "vCore"
              ],
              "x-ms-enum": {
                "name": "LicenseCoreType",
                "modelAsString": true
              },
              "description": "Describes the license core type (pCore or vCore)."
            },
            "processors": {
              "type": "integer",
              "format": "int32",
              "description": "Describes the number of processors."
            }
          }
        }
      },
      "description": "Describes the Update properties of a License Profile."
    },
    "LicenseDetails": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Activated",
            "Deactivated"
          ],
          "x-ms-enum": {
            "name": "LicenseState",
            "modelAsString": true
          },
          "description": "Describes the state of the license."
        },
        "target": {
          "type": "string",
          "enum": [
            "Windows Server 2012",
            "Windows Server 2012 R2"
          ],
          "x-ms-enum": {
            "name": "LicenseTarget",
            "modelAsString": true
          },
          "description": "Describes the license target server."
        },
        "edition": {
          "type": "string",
          "enum": [
            "Standard",
            "Datacenter"
          ],
          "x-ms-enum": {
            "name": "LicenseEdition",
            "modelAsString": true
          },
          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
        },
        "type": {
          "type": "string",
          "enum": [
            "pCore",
            "vCore"
          ],
          "x-ms-enum": {
            "name": "LicenseCoreType",
            "modelAsString": true
          },
          "description": "Describes the license core type (pCore or vCore)."
        },
        "processors": {
          "type": "integer",
          "format": "int32",
          "description": "Describes the number of processors."
        },
        "assignedLicenses": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Describes the number of assigned licenses."
        },
        "immutableId": {
          "readOnly": true,
          "type": "string",
          "description": "Describes the immutable id."
        },
        "volumeLicenseDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "programYear": {
                "type": "string",
                "description": "Describes the program year the volume license is for.",
                "enum": [
                  "Year 1",
                  "Year 2",
                  "Year 3"
                ],
                "x-ms-enum": {
                  "name": "ProgramYear",
                  "modelAsString": true
                }
              },
              "invoiceId": {
                "type": "string",
                "description": "The invoice id for the volume license."
              }
            }
          },
          "description": "A list of volume license details."
        }
      },
      "description": "Describes the properties of a License."
    },
    "VolumeLicenseDetails": {
      "type": "object",
      "properties": {
        "programYear": {
          "type": "string",
          "description": "Describes the program year the volume license is for.",
          "enum": [
            "Year 1",
            "Year 2",
            "Year 3"
          ],
          "x-ms-enum": {
            "name": "ProgramYear",
            "modelAsString": true
          }
        },
        "invoiceId": {
          "type": "string",
          "description": "The invoice id for the volume license."
        }
      }
    },
    "LicenseType": {
      "type": "string",
      "enum": [
        "ESU"
      ],
      "x-ms-enum": {
        "name": "LicenseType",
        "modelAsString": true
      },
      "description": "The type of the license resource."
    },
    "LicenseState": {
      "type": "string",
      "enum": [
        "Activated",
        "Deactivated"
      ],
      "x-ms-enum": {
        "name": "LicenseState",
        "modelAsString": true
      },
      "description": "Describes the state of the license."
    },
    "LicenseEdition": {
      "type": "string",
      "enum": [
        "Standard",
        "Datacenter"
      ],
      "x-ms-enum": {
        "name": "LicenseEdition",
        "modelAsString": true
      },
      "description": "Describes the edition of the license. The values are either Standard or Datacenter."
    },
    "LicenseTarget": {
      "type": "string",
      "enum": [
        "Windows Server 2012",
        "Windows Server 2012 R2"
      ],
      "x-ms-enum": {
        "name": "LicenseTarget",
        "modelAsString": true
      },
      "description": "Describes the license target server."
    },
    "LicenseCoreType": {
      "type": "string",
      "enum": [
        "pCore",
        "vCore"
      ],
      "x-ms-enum": {
        "name": "LicenseCoreType",
        "modelAsString": true
      },
      "description": "Describes the license core type (pCore or vCore)."
    },
    "LicensesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Hybrid Compute License properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state, which only appears in the response.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Accepted",
                      "Canceled",
                      "Deleted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "Describes the tenant id."
                  },
                  "licenseType": {
                    "description": "The type of the license resource.",
                    "type": "string",
                    "enum": [
                      "ESU"
                    ],
                    "x-ms-enum": {
                      "name": "LicenseType",
                      "modelAsString": true
                    }
                  },
                  "licenseDetails": {
                    "description": "Describes the properties of a License.",
                    "type": "object",
                    "properties": {
                      "state": {
                        "type": "string",
                        "enum": [
                          "Activated",
                          "Deactivated"
                        ],
                        "x-ms-enum": {
                          "name": "LicenseState",
                          "modelAsString": true
                        },
                        "description": "Describes the state of the license."
                      },
                      "target": {
                        "type": "string",
                        "enum": [
                          "Windows Server 2012",
                          "Windows Server 2012 R2"
                        ],
                        "x-ms-enum": {
                          "name": "LicenseTarget",
                          "modelAsString": true
                        },
                        "description": "Describes the license target server."
                      },
                      "edition": {
                        "type": "string",
                        "enum": [
                          "Standard",
                          "Datacenter"
                        ],
                        "x-ms-enum": {
                          "name": "LicenseEdition",
                          "modelAsString": true
                        },
                        "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "pCore",
                          "vCore"
                        ],
                        "x-ms-enum": {
                          "name": "LicenseCoreType",
                          "modelAsString": true
                        },
                        "description": "Describes the license core type (pCore or vCore)."
                      },
                      "processors": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Describes the number of processors."
                      },
                      "assignedLicenses": {
                        "readOnly": true,
                        "type": "integer",
                        "format": "int32",
                        "description": "Describes the number of assigned licenses."
                      },
                      "immutableId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Describes the immutable id."
                      },
                      "volumeLicenseDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "programYear": {
                              "type": "string",
                              "description": "Describes the program year the volume license is for.",
                              "enum": [
                                "Year 1",
                                "Year 2",
                                "Year 3"
                              ],
                              "x-ms-enum": {
                                "name": "ProgramYear",
                                "modelAsString": true
                              }
                            },
                            "invoiceId": {
                              "type": "string",
                              "description": "The invoice id for the volume license."
                            }
                          }
                        },
                        "description": "A list of volume license details."
                      }
                    }
                  }
                }
              }
            },
            "description": "Describes a license in a hybrid machine."
          },
          "description": "The list of licenses."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Machines. Call ListNext() with this URI to fetch the next page of license profile."
        }
      },
      "required": [
        "value"
      ],
      "description": "The List license operation response."
    },
    "LicenseProfile": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "softwareAssurance": {
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "softwareAssuranceCustomer": {
                  "type": "boolean",
                  "description": "Specifies if this machine is licensed as part of a Software Assurance agreement."
                }
              }
            },
            "esuProfile": {
              "x-ms-client-flatten": true,
              "description": "Hybrid Compute ESU Profile properties",
              "type": "object",
              "properties": {
                "assignedLicenseImmutableId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The guid id of the license."
                },
                "esuKeys": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "description": "SKU number."
                      },
                      "licenseStatus": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status."
                      }
                    },
                    "description": "ESU key"
                  },
                  "description": "The list of ESU keys.",
                  "x-ms-identifiers": []
                },
                "serverType": {
                  "readOnly": true,
                  "description": "The type of the Esu servers.",
                  "type": "string",
                  "enum": [
                    "Standard",
                    "Datacenter"
                  ],
                  "x-ms-enum": {
                    "name": "EsuServerType",
                    "modelAsString": true
                  }
                },
                "esuEligibility": {
                  "readOnly": true,
                  "description": "Indicates the eligibility state of Esu.",
                  "type": "string",
                  "enum": [
                    "Eligible",
                    "Ineligible",
                    "Unknown"
                  ],
                  "x-ms-enum": {
                    "name": "EsuEligibility",
                    "modelAsString": true
                  }
                },
                "esuKeyState": {
                  "readOnly": true,
                  "description": "Indicates whether there is an ESU Key currently active for the machine.",
                  "type": "string",
                  "enum": [
                    "Inactive",
                    "Active"
                  ],
                  "x-ms-enum": {
                    "name": "EsuKeyState",
                    "modelAsString": true
                  }
                },
                "assignedLicense": {
                  "type": "string",
                  "description": "The resource id of the license."
                }
              }
            },
            "productProfile": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/LicenseProfileArmProductProfileProperties",
              "description": "Hybrid Compute Product Profile properties"
            },
            "provisioningState": {
              "description": "The provisioning state, which only appears in the response.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Accepted",
                "Canceled",
                "Deleted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          },
          "description": "Describe the properties of a license profile."
        }
      },
      "allOf": [
        {
          "type": "object",
          "title": "Tracked Resource",
          "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
          "properties": {
            "id": {
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "type": "object",
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "tags": {
              "type": "object",
              "description": "Resource tags.",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            },
            "location": {
              "type": "string",
              "description": "The geo-location where the resource lives",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          },
          "required": [
            "location"
          ]
        }
      ],
      "description": "Describes a license profile in a hybrid machine."
    },
    "LicenseProfileUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "softwareAssurance": {
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "softwareAssuranceCustomer": {
                  "type": "boolean",
                  "description": "Specifies if this machine is licensed as part of a Software Assurance agreement."
                }
              }
            },
            "esuProfile": {
              "x-ms-client-flatten": true,
              "description": "Hybrid Compute ESU Profile Update properties",
              "type": "object",
              "properties": {
                "assignedLicense": {
                  "type": "string",
                  "description": "The resource id of the license."
                }
              }
            },
            "productProfile": {
              "x-ms-client-flatten": true,
              "description": "Hybrid Compute Product Profile Update properties",
              "type": "object",
              "properties": {
                "subscriptionStatus": {
                  "description": "Indicates the subscription status of the product.",
                  "type": "string",
                  "enum": [
                    "Enable",
                    "Disable"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseProfileSubscriptionStatusUpdate",
                    "modelAsString": true
                  }
                },
                "productType": {
                  "description": "Indicates the product type of the license.",
                  "type": "string",
                  "enum": [
                    "WindowsServer",
                    "WindowsIoTEnterprise"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseProfileProductType",
                    "modelAsString": true
                  }
                },
                "productFeatures": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Product feature name."
                      },
                      "subscriptionStatus": {
                        "description": "Indicates the new status of the product feature.",
                        "type": "string",
                        "enum": [
                          "Enable",
                          "Disable"
                        ],
                        "x-ms-enum": {
                          "name": "LicenseProfileSubscriptionStatusUpdate",
                          "modelAsString": true
                        }
                      }
                    },
                    "description": "Product Feature"
                  },
                  "description": "The list of product feature updates.",
                  "x-ms-identifiers": []
                }
              }
            }
          },
          "description": "Describe the Update properties of a license profile."
        }
      },
      "description": "Describes a License Profile Update."
    },
    "LicenseProfilesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LicenseProfile"
          },
          "description": "The list of license profiles."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Machines. Call ListNext() with this URI to fetch the next page of license profile."
        }
      },
      "required": [
        "value"
      ],
      "description": "The List hybrid machine license profile operation response."
    },
    "EsuServerType": {
      "type": "string",
      "enum": [
        "Standard",
        "Datacenter"
      ],
      "x-ms-enum": {
        "name": "EsuServerType",
        "modelAsString": true
      },
      "description": "The server types for Esu."
    },
    "EsuEligibility": {
      "type": "string",
      "enum": [
        "Eligible",
        "Ineligible",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "EsuEligibility",
        "modelAsString": true
      },
      "description": "The ESU eligibility."
    },
    "EsuKey": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "SKU number."
        },
        "licenseStatus": {
          "type": "integer",
          "format": "int32",
          "description": "The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status."
        }
      },
      "description": "ESU key"
    },
    "EsuKeyState": {
      "type": "string",
      "enum": [
        "Inactive",
        "Active"
      ],
      "x-ms-enum": {
        "name": "EsuKeyState",
        "modelAsString": true
      },
      "description": "The ESU key state."
    },
    "LicenseProfileStorageModelEsuProperties": {
      "type": "object",
      "properties": {
        "assignedLicenseImmutableId": {
          "readOnly": true,
          "type": "string",
          "description": "The guid id of the license."
        },
        "esuKeys": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "description": "SKU number."
              },
              "licenseStatus": {
                "type": "integer",
                "format": "int32",
                "description": "The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status."
              }
            },
            "description": "ESU key"
          },
          "description": "The list of ESU keys.",
          "x-ms-identifiers": []
        }
      },
      "description": "License profile storage model for ESU properties."
    },
    "LicenseProfileArmEsuProperties": {
      "type": "object",
      "properties": {
        "assignedLicense": {
          "type": "string",
          "description": "The resource id of the license."
        }
      },
      "allOf": [
        {
          "type": "object",
          "properties": {
            "assignedLicenseImmutableId": {
              "readOnly": true,
              "type": "string",
              "description": "The guid id of the license."
            },
            "esuKeys": {
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "description": "SKU number."
                  },
                  "licenseStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status."
                  }
                },
                "description": "ESU key"
              },
              "description": "The list of ESU keys.",
              "x-ms-identifiers": []
            },
            "serverType": {
              "readOnly": true,
              "description": "The type of the Esu servers.",
              "type": "string",
              "enum": [
                "Standard",
                "Datacenter"
              ],
              "x-ms-enum": {
                "name": "EsuServerType",
                "modelAsString": true
              }
            },
            "esuEligibility": {
              "readOnly": true,
              "description": "Indicates the eligibility state of Esu.",
              "type": "string",
              "enum": [
                "Eligible",
                "Ineligible",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "EsuEligibility",
                "modelAsString": true
              }
            },
            "esuKeyState": {
              "readOnly": true,
              "description": "Indicates whether there is an ESU Key currently active for the machine.",
              "type": "string",
              "enum": [
                "Inactive",
                "Active"
              ],
              "x-ms-enum": {
                "name": "EsuKeyState",
                "modelAsString": true
              }
            }
          },
          "description": "Describes the properties of a License Profile ARM model."
        }
      ],
      "description": "Describes the properties of a License Profile ARM model."
    },
    "LicenseProfileArmEsuPropertiesWithoutAssignedLicense": {
      "type": "object",
      "properties": {
        "assignedLicenseImmutableId": {
          "readOnly": true,
          "type": "string",
          "description": "The guid id of the license."
        },
        "esuKeys": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "description": "SKU number."
              },
              "licenseStatus": {
                "type": "integer",
                "format": "int32",
                "description": "The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status."
              }
            },
            "description": "ESU key"
          },
          "description": "The list of ESU keys.",
          "x-ms-identifiers": []
        },
        "serverType": {
          "readOnly": true,
          "description": "The type of the Esu servers.",
          "type": "string",
          "enum": [
            "Standard",
            "Datacenter"
          ],
          "x-ms-enum": {
            "name": "EsuServerType",
            "modelAsString": true
          }
        },
        "esuEligibility": {
          "readOnly": true,
          "description": "Indicates the eligibility state of Esu.",
          "type": "string",
          "enum": [
            "Eligible",
            "Ineligible",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EsuEligibility",
            "modelAsString": true
          }
        },
        "esuKeyState": {
          "readOnly": true,
          "description": "Indicates whether there is an ESU Key currently active for the machine.",
          "type": "string",
          "enum": [
            "Inactive",
            "Active"
          ],
          "x-ms-enum": {
            "name": "EsuKeyState",
            "modelAsString": true
          }
        }
      },
      "description": "Describes the properties of a License Profile ARM model."
    },
    "EsuProfileUpdateProperties": {
      "type": "object",
      "properties": {
        "assignedLicense": {
          "type": "string",
          "description": "The resource id of the license."
        }
      },
      "description": "Describes the Update properties of a ESU License Profile."
    },
    "LicenseProfileSubscriptionStatusUpdate": {
      "type": "string",
      "enum": [
        "Enable",
        "Disable"
      ],
      "x-ms-enum": {
        "name": "LicenseProfileSubscriptionStatusUpdate",
        "modelAsString": true
      },
      "description": "Indicates the new subscription status of the OS or Product Features."
    },
    "ProductFeatureUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Product feature name."
        },
        "subscriptionStatus": {
          "description": "Indicates the new status of the product feature.",
          "type": "string",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "LicenseProfileSubscriptionStatusUpdate",
            "modelAsString": true
          }
        }
      },
      "description": "Product Feature"
    },
    "ProductProfileUpdateProperties": {
      "type": "object",
      "properties": {
        "subscriptionStatus": {
          "description": "Indicates the subscription status of the product.",
          "type": "string",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "LicenseProfileSubscriptionStatusUpdate",
            "modelAsString": true
          }
        },
        "productType": {
          "description": "Indicates the product type of the license.",
          "type": "string",
          "enum": [
            "WindowsServer",
            "WindowsIoTEnterprise"
          ],
          "x-ms-enum": {
            "name": "LicenseProfileProductType",
            "modelAsString": true
          }
        },
        "productFeatures": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Product feature name."
              },
              "subscriptionStatus": {
                "description": "Indicates the new status of the product feature.",
                "type": "string",
                "enum": [
                  "Enable",
                  "Disable"
                ],
                "x-ms-enum": {
                  "name": "LicenseProfileSubscriptionStatusUpdate",
                  "modelAsString": true
                }
              }
            },
            "description": "Product Feature"
          },
          "description": "The list of product feature updates.",
          "x-ms-identifiers": []
        }
      },
      "description": "Describes the Update properties of a Product Profile."
    },
    "LicenseProfileMachineInstanceView": {
      "type": "object",
      "properties": {
        "licenseStatus": {
          "description": "Indicates the license status of the OS.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unlicensed",
            "Licensed",
            "OOBGrace",
            "OOTGrace",
            "NonGenuineGrace",
            "Notification",
            "ExtendedGrace"
          ],
          "x-ms-enum": {
            "name": "LicenseStatus",
            "modelAsString": true
          }
        },
        "licenseChannel": {
          "readOnly": true,
          "type": "string",
          "description": "Indicates the license channel."
        },
        "softwareAssurance": {
          "x-ms-client-flatten": true,
          "type": "object",
          "readOnly": true,
          "properties": {
            "softwareAssuranceCustomer": {
              "type": "boolean",
              "description": "Specifies if this machine is licensed as part of a Software Assurance agreement."
            }
          }
        },
        "esuProfile": {
          "type": "object",
          "properties": {
            "assignedLicenseImmutableId": {
              "readOnly": true,
              "type": "string",
              "description": "The guid id of the license."
            },
            "esuKeys": {
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "description": "SKU number."
                  },
                  "licenseStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status."
                  }
                },
                "description": "ESU key"
              },
              "description": "The list of ESU keys.",
              "x-ms-identifiers": []
            },
            "serverType": {
              "readOnly": true,
              "description": "The type of the Esu servers.",
              "type": "string",
              "enum": [
                "Standard",
                "Datacenter"
              ],
              "x-ms-enum": {
                "name": "EsuServerType",
                "modelAsString": true
              }
            },
            "esuEligibility": {
              "readOnly": true,
              "description": "Indicates the eligibility state of Esu.",
              "type": "string",
              "enum": [
                "Eligible",
                "Ineligible",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "EsuEligibility",
                "modelAsString": true
              }
            },
            "esuKeyState": {
              "readOnly": true,
              "description": "Indicates whether there is an ESU Key currently active for the machine.",
              "type": "string",
              "enum": [
                "Inactive",
                "Active"
              ],
              "x-ms-enum": {
                "name": "EsuKeyState",
                "modelAsString": true
              }
            },
            "assignedLicense": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Hybrid Compute License properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state, which only appears in the response.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Accepted",
                        "Canceled",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Describes the tenant id."
                    },
                    "licenseType": {
                      "description": "The type of the license resource.",
                      "type": "string",
                      "enum": [
                        "ESU"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseType",
                        "modelAsString": true
                      }
                    },
                    "licenseDetails": {
                      "description": "Describes the properties of a License.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "enum": [
                            "Activated",
                            "Deactivated"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseState",
                            "modelAsString": true
                          },
                          "description": "Describes the state of the license."
                        },
                        "target": {
                          "type": "string",
                          "enum": [
                            "Windows Server 2012",
                            "Windows Server 2012 R2"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseTarget",
                            "modelAsString": true
                          },
                          "description": "Describes the license target server."
                        },
                        "edition": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Datacenter"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseEdition",
                            "modelAsString": true
                          },
                          "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pCore",
                            "vCore"
                          ],
                          "x-ms-enum": {
                            "name": "LicenseCoreType",
                            "modelAsString": true
                          },
                          "description": "Describes the license core type (pCore or vCore)."
                        },
                        "processors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of processors."
                        },
                        "assignedLicenses": {
                          "readOnly": true,
                          "type": "integer",
                          "format": "int32",
                          "description": "Describes the number of assigned licenses."
                        },
                        "immutableId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Describes the immutable id."
                        },
                        "volumeLicenseDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "programYear": {
                                "type": "string",
                                "description": "Describes the program year the volume license is for.",
                                "enum": [
                                  "Year 1",
                                  "Year 2",
                                  "Year 3"
                                ],
                                "x-ms-enum": {
                                  "name": "ProgramYear",
                                  "modelAsString": true
                                }
                              },
                              "invoiceId": {
                                "type": "string",
                                "description": "The invoice id for the volume license."
                              }
                            }
                          },
                          "description": "A list of volume license details."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes a license in a hybrid machine."
            },
            "licenseAssignmentState": {
              "type": "string",
              "enum": [
                "Assigned",
                "NotAssigned"
              ],
              "description": "Describes the license assignment state (Assigned or NotAssigned).",
              "x-ms-enum": {
                "name": "licenseAssignmentState",
                "modelAsString": true
              }
            }
          },
          "description": "Properties for the Machine ESU profile."
        },
        "productProfile": {
          "x-ms-client-flatten": true,
          "readOnly": true,
          "$ref": "#/definitions/LicenseProfileArmProductProfileProperties",
          "description": "Hybrid Compute Product Profile properties"
        }
      },
      "description": "License Profile Instance View in Machine Properties."
    },
    "LicenseProfileMachineInstanceViewEsuProperties": {
      "type": "object",
      "properties": {
        "assignedLicenseImmutableId": {
          "readOnly": true,
          "type": "string",
          "description": "The guid id of the license."
        },
        "esuKeys": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "description": "SKU number."
              },
              "licenseStatus": {
                "type": "integer",
                "format": "int32",
                "description": "The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status."
              }
            },
            "description": "ESU key"
          },
          "description": "The list of ESU keys.",
          "x-ms-identifiers": []
        },
        "serverType": {
          "readOnly": true,
          "description": "The type of the Esu servers.",
          "type": "string",
          "enum": [
            "Standard",
            "Datacenter"
          ],
          "x-ms-enum": {
            "name": "EsuServerType",
            "modelAsString": true
          }
        },
        "esuEligibility": {
          "readOnly": true,
          "description": "Indicates the eligibility state of Esu.",
          "type": "string",
          "enum": [
            "Eligible",
            "Ineligible",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EsuEligibility",
            "modelAsString": true
          }
        },
        "esuKeyState": {
          "readOnly": true,
          "description": "Indicates whether there is an ESU Key currently active for the machine.",
          "type": "string",
          "enum": [
            "Inactive",
            "Active"
          ],
          "x-ms-enum": {
            "name": "EsuKeyState",
            "modelAsString": true
          }
        },
        "assignedLicense": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "type": "object",
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "tags": {
              "type": "object",
              "description": "Resource tags.",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            },
            "location": {
              "type": "string",
              "description": "The geo-location where the resource lives",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "properties": {
              "x-ms-client-flatten": true,
              "description": "Hybrid Compute License properties",
              "type": "object",
              "properties": {
                "provisioningState": {
                  "description": "The provisioning state, which only appears in the response.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Creating",
                    "Updating",
                    "Deleting",
                    "Succeeded",
                    "Failed",
                    "Accepted",
                    "Canceled",
                    "Deleted"
                  ],
                  "x-ms-enum": {
                    "name": "ProvisioningState",
                    "modelAsString": true
                  }
                },
                "tenantId": {
                  "type": "string",
                  "description": "Describes the tenant id."
                },
                "licenseType": {
                  "description": "The type of the license resource.",
                  "type": "string",
                  "enum": [
                    "ESU"
                  ],
                  "x-ms-enum": {
                    "name": "LicenseType",
                    "modelAsString": true
                  }
                },
                "licenseDetails": {
                  "description": "Describes the properties of a License.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "enum": [
                        "Activated",
                        "Deactivated"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseState",
                        "modelAsString": true
                      },
                      "description": "Describes the state of the license."
                    },
                    "target": {
                      "type": "string",
                      "enum": [
                        "Windows Server 2012",
                        "Windows Server 2012 R2"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseTarget",
                        "modelAsString": true
                      },
                      "description": "Describes the license target server."
                    },
                    "edition": {
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Datacenter"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseEdition",
                        "modelAsString": true
                      },
                      "description": "Describes the edition of the license. The values are either Standard or Datacenter."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pCore",
                        "vCore"
                      ],
                      "x-ms-enum": {
                        "name": "LicenseCoreType",
                        "modelAsString": true
                      },
                      "description": "Describes the license core type (pCore or vCore)."
                    },
                    "processors": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Describes the number of processors."
                    },
                    "assignedLicenses": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Describes the number of assigned licenses."
                    },
                    "immutableId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Describes the immutable id."
                    },
                    "volumeLicenseDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "programYear": {
                            "type": "string",
                            "description": "Describes the program year the volume license is for.",
                            "enum": [
                              "Year 1",
                              "Year 2",
                              "Year 3"
                            ],
                            "x-ms-enum": {
                              "name": "ProgramYear",
                              "modelAsString": true
                            }
                          },
                          "invoiceId": {
                            "type": "string",
                            "description": "The invoice id for the volume license."
                          }
                        }
                      },
                      "description": "A list of volume license details."
                    }
                  }
                }
              }
            }
          },
          "description": "Describes a license in a hybrid machine."
        },
        "licenseAssignmentState": {
          "type": "string",
          "enum": [
            "Assigned",
            "NotAssigned"
          ],
          "description": "Describes the license assignment state (Assigned or NotAssigned).",
          "x-ms-enum": {
            "name": "licenseAssignmentState",
            "modelAsString": true
          }
        }
      },
      "description": "Properties for the Machine ESU profile."
    },
    "LicenseStatus": {
      "readOnly": true,
      "type": "string",
      "enum": [
        "Unlicensed",
        "Licensed",
        "OOBGrace",
        "OOTGrace",
        "NonGenuineGrace",
        "Notification",
        "ExtendedGrace"
      ],
      "x-ms-enum": {
        "name": "LicenseStatus",
        "modelAsString": true
      },
      "description": "The license status."
    },
    "LicenseProfileSubscriptionStatus": {
      "type": "string",
      "enum": [
        "Unknown",
        "Enabling",
        "Enabled",
        "Disabled",
        "Disabling",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "LicenseProfileSubscriptionStatus",
        "modelAsString": true
      },
      "description": "Subscription status of the OS or Product feature."
    },
    "LicenseProfileProductType": {
      "type": "string",
      "enum": [
        "WindowsServer",
        "WindowsIoTEnterprise"
      ],
      "x-ms-enum": {
        "name": "LicenseProfileProductType",
        "modelAsString": true
      },
      "description": "The product type of the license."
    },
    "ProductFeature": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Product feature name."
        },
        "subscriptionStatus": {
          "description": "Indicates the current status of the product features.",
          "type": "string",
          "enum": [
            "Unknown",
            "Enabling",
            "Enabled",
            "Disabled",
            "Disabling",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "LicenseProfileSubscriptionStatus",
            "modelAsString": true
          }
        },
        "enrollmentDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp in UTC when the user enrolls the feature."
        },
        "billingStartDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp in UTC when the billing starts."
        },
        "disenrollmentDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp in UTC when the user disenrolled the feature."
        },
        "billingEndDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp in UTC when the billing ends."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "readOnly": true,
          "description": "The errors that were encountered during the feature enrollment or disenrollment."
        }
      },
      "description": "Product Feature"
    },
    "LicenseProfileArmProductProfileProperties": {
      "type": "object",
      "properties": {
        "subscriptionStatus": {
          "description": "Indicates the subscription status of the product.",
          "type": "string",
          "enum": [
            "Unknown",
            "Enabling",
            "Enabled",
            "Disabled",
            "Disabling",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "LicenseProfileSubscriptionStatus",
            "modelAsString": true
          }
        },
        "productType": {
          "description": "Indicates the product type of the license.",
          "type": "string",
          "enum": [
            "WindowsServer",
            "WindowsIoTEnterprise"
          ],
          "x-ms-enum": {
            "name": "LicenseProfileProductType",
            "modelAsString": true
          }
        },
        "enrollmentDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp in UTC when the user enrolls the feature."
        },
        "billingStartDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp in UTC when the billing starts."
        },
        "disenrollmentDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp in UTC when the user disenrolled the feature."
        },
        "billingEndDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp in UTC when the billing ends."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "readOnly": true,
          "description": "The errors that were encountered during the feature enrollment or disenrollment."
        },
        "productFeatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductFeature"
          },
          "description": "The list of product features.",
          "x-ms-identifiers": []
        }
      },
      "description": "Describes the properties of a Product License Profile ARM model."
    },
    "HotpatchEnablementStatus": {
      "type": "string",
      "enum": [
        "Unknown",
        "PendingEvaluation",
        "Disabled",
        "ActionRequired",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "HotpatchEnablementStatus",
        "modelAsString": true
      },
      "description": "Status of hotpatch enablement or disablement."
    },
    "ResourceUpdate": {
      "type": "object",
      "description": "The Update Resource model definition.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "MachineExtension": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Describes Machine Extension Properties.",
          "type": "object",
          "properties": {
            "forceUpdateTag": {
              "type": "string",
              "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
            },
            "publisher": {
              "type": "string",
              "description": "The name of the extension handler publisher."
            },
            "type": {
              "type": "string",
              "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
            },
            "typeHandlerVersion": {
              "type": "string",
              "description": "Specifies the version of the script handler."
            },
            "enableAutomaticUpgrade": {
              "type": "boolean",
              "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
            },
            "autoUpgradeMinorVersion": {
              "type": "boolean",
              "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
            },
            "settings": {
              "type": "object",
              "additionalProperties": {},
              "description": "Json formatted public settings for the extension."
            },
            "protectedSettings": {
              "type": "object",
              "additionalProperties": {},
              "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state, which only appears in the response."
            },
            "instanceView": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The machine extension name."
                },
                "type": {
                  "type": "string",
                  "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                },
                "typeHandlerVersion": {
                  "type": "string",
                  "description": "Specifies the version of the script handler."
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The status code."
                    },
                    "level": {
                      "type": "string",
                      "description": "The level code.",
                      "enum": [
                        "Info",
                        "Warning",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "StatusLevelTypes",
                        "modelAsString": true
                      }
                    },
                    "displayStatus": {
                      "type": "string",
                      "description": "The short localizable label for the status."
                    },
                    "message": {
                      "type": "string",
                      "description": "The detailed status message, including for alerts and error messages."
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time of the status."
                    }
                  },
                  "description": "Instance view status."
                }
              },
              "description": "Describes the Machine Extension Instance View."
            }
          }
        }
      },
      "description": "Describes a Machine Extension."
    },
    "MachineExtensionUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Describes Machine Extension Update Properties.",
          "type": "object",
          "properties": {
            "forceUpdateTag": {
              "type": "string",
              "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
            },
            "publisher": {
              "type": "string",
              "description": "The name of the extension handler publisher."
            },
            "type": {
              "type": "string",
              "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
            },
            "typeHandlerVersion": {
              "type": "string",
              "description": "Specifies the version of the script handler."
            },
            "enableAutomaticUpgrade": {
              "type": "boolean",
              "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
            },
            "autoUpgradeMinorVersion": {
              "type": "boolean",
              "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
            },
            "settings": {
              "type": "object",
              "additionalProperties": {},
              "description": "Json formatted public settings for the extension."
            },
            "protectedSettings": {
              "type": "object",
              "additionalProperties": {},
              "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
            }
          }
        }
      },
      "description": "Describes a Machine Extension Update."
    },
    "MachineExtensionProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "additionalProperties": {},
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "additionalProperties": {},
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state, which only appears in the response."
        },
        "instanceView": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The machine extension name."
            },
            "type": {
              "type": "string",
              "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
            },
            "typeHandlerVersion": {
              "type": "string",
              "description": "Specifies the version of the script handler."
            },
            "status": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The status code."
                },
                "level": {
                  "type": "string",
                  "description": "The level code.",
                  "enum": [
                    "Info",
                    "Warning",
                    "Error"
                  ],
                  "x-ms-enum": {
                    "name": "StatusLevelTypes",
                    "modelAsString": true
                  }
                },
                "displayStatus": {
                  "type": "string",
                  "description": "The short localizable label for the status."
                },
                "message": {
                  "type": "string",
                  "description": "The detailed status message, including for alerts and error messages."
                },
                "time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time of the status."
                }
              },
              "description": "Instance view status."
            }
          },
          "description": "Describes the Machine Extension Instance View."
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionUpdateProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "additionalProperties": {},
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "additionalProperties": {},
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionInstanceView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The machine extension name."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "status": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The status code."
            },
            "level": {
              "type": "string",
              "description": "The level code.",
              "enum": [
                "Info",
                "Warning",
                "Error"
              ],
              "x-ms-enum": {
                "name": "StatusLevelTypes",
                "modelAsString": true
              }
            },
            "displayStatus": {
              "type": "string",
              "description": "The short localizable label for the status."
            },
            "message": {
              "type": "string",
              "description": "The detailed status message, including for alerts and error messages."
            },
            "time": {
              "type": "string",
              "format": "date-time",
              "description": "The time of the status."
            }
          },
          "description": "Instance view status."
        }
      },
      "description": "Describes the Machine Extension Instance View."
    },
    "MachineExtensionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Describes Machine Extension Properties.",
                "type": "object",
                "properties": {
                  "forceUpdateTag": {
                    "type": "string",
                    "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                  },
                  "publisher": {
                    "type": "string",
                    "description": "The name of the extension handler publisher."
                  },
                  "type": {
                    "type": "string",
                    "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                  },
                  "typeHandlerVersion": {
                    "type": "string",
                    "description": "Specifies the version of the script handler."
                  },
                  "enableAutomaticUpgrade": {
                    "type": "boolean",
                    "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                  },
                  "autoUpgradeMinorVersion": {
                    "type": "boolean",
                    "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                  },
                  "settings": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Json formatted public settings for the extension."
                  },
                  "protectedSettings": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The provisioning state, which only appears in the response."
                  },
                  "instanceView": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The machine extension name."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Specifies the version of the script handler."
                      },
                      "status": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "The status code."
                          },
                          "level": {
                            "type": "string",
                            "description": "The level code.",
                            "enum": [
                              "Info",
                              "Warning",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "StatusLevelTypes",
                              "modelAsString": true
                            }
                          },
                          "displayStatus": {
                            "type": "string",
                            "description": "The short localizable label for the status."
                          },
                          "message": {
                            "type": "string",
                            "description": "The detailed status message, including for alerts and error messages."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time of the status."
                          }
                        },
                        "description": "Instance view status."
                      }
                    },
                    "description": "Describes the Machine Extension Instance View."
                  }
                }
              }
            },
            "description": "Describes a Machine Extension."
          },
          "description": "The list of extensions"
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of machine extensions. Call ListNext() with this to fetch the next page of extensions."
        }
      },
      "description": "Describes the Machine Extensions List Result."
    },
    "TargetVersion": {
      "type": "string",
      "description": "Extension Upgrade Target Version."
    },
    "ExtensionTargetProperties": {
      "type": "object",
      "properties": {
        "targetVersion": {
          "type": "object",
          "description": "Properties for the specified Extension to Upgrade."
        }
      },
      "description": "Describes the Machine Extension Target Version Properties"
    },
    "ExtensionTarget": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "targetVersion": {
            "type": "object",
            "description": "Properties for the specified Extension to Upgrade."
          }
        },
        "description": "Describes the Machine Extension Target Version Properties"
      },
      "description": "Describes the Machine Extension Target Properties"
    },
    "MachineExtensionUpgrade": {
      "type": "object",
      "properties": {
        "extensionTargets": {
          "description": "Describes the Extension Target Properties.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "targetVersion": {
                "type": "object",
                "description": "Properties for the specified Extension to Upgrade."
              }
            },
            "description": "Describes the Machine Extension Target Version Properties"
          }
        }
      },
      "description": "Describes the Machine Extension Upgrade Properties."
    },
    "NetworkProfile": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "macAddress": {
                "type": "string",
                "description": "Represents MAC address of the network interface."
              },
              "id": {
                "type": "string",
                "description": "Represents the ID of the network interface."
              },
              "name": {
                "type": "string",
                "description": "Represents the name of the network interface."
              },
              "ipAddresses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "Represents the IP Address."
                    },
                    "ipAddressVersion": {
                      "type": "string",
                      "description": "Represents the Ip Address Version."
                    },
                    "subnet": {
                      "type": "object",
                      "description": "The subnet to which this IP address belongs.",
                      "readOnly": true,
                      "properties": {
                        "addressPrefix": {
                          "type": "string",
                          "description": "Represents address prefix."
                        }
                      }
                    }
                  },
                  "description": "Describes properties of the IP address."
                },
                "description": "The list of IP addresses in this interface.",
                "x-ms-identifiers": []
              }
            },
            "description": "Describes a network interface."
          },
          "description": "The list of network interfaces.",
          "x-ms-identifiers": []
        }
      },
      "description": "Describes the network information on this machine."
    },
    "NetworkInterface": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "Represents MAC address of the network interface."
        },
        "id": {
          "type": "string",
          "description": "Represents the ID of the network interface."
        },
        "name": {
          "type": "string",
          "description": "Represents the name of the network interface."
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "address": {
                "type": "string",
                "description": "Represents the IP Address."
              },
              "ipAddressVersion": {
                "type": "string",
                "description": "Represents the Ip Address Version."
              },
              "subnet": {
                "type": "object",
                "description": "The subnet to which this IP address belongs.",
                "readOnly": true,
                "properties": {
                  "addressPrefix": {
                    "type": "string",
                    "description": "Represents address prefix."
                  }
                }
              }
            },
            "description": "Describes properties of the IP address."
          },
          "description": "The list of IP addresses in this interface.",
          "x-ms-identifiers": []
        }
      },
      "description": "Describes a network interface."
    },
    "IpAddress": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "address": {
          "type": "string",
          "description": "Represents the IP Address."
        },
        "ipAddressVersion": {
          "type": "string",
          "description": "Represents the Ip Address Version."
        },
        "subnet": {
          "type": "object",
          "description": "The subnet to which this IP address belongs.",
          "readOnly": true,
          "properties": {
            "addressPrefix": {
              "type": "string",
              "description": "Represents address prefix."
            }
          }
        }
      },
      "description": "Describes properties of the IP address."
    },
    "Subnet": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "Represents address prefix."
        }
      },
      "description": "Describes the subnet."
    },
    "HybridIdentityMetadataList": {
      "description": "List of HybridIdentityMetadata.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of HybridIdentityMetadata.",
          "type": "string"
        },
        "value": {
          "description": "Array of HybridIdentityMetadata",
          "type": "array",
          "items": {
            "description": "Defines the HybridIdentityMetadata.",
            "required": [
              "properties"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "The system data.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "vmId": {
                    "description": "The unique identifier for the resource.",
                    "type": "string"
                  },
                  "publicKey": {
                    "description": "The Public Key.",
                    "type": "string"
                  },
                  "identity": {
                    "type": "object",
                    "description": "Identity for the resource.",
                    "properties": {
                      "principalId": {
                        "type": "string",
                        "description": "The principal ID of resource identity.",
                        "readOnly": true
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "The tenant ID of resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The identity type.",
                        "enum": [
                          "SystemAssigned"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceIdentityType",
                          "modelAsString": false
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              }
            },
            "x-ms-azure-resource": true
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "HybridIdentityMetadata": {
      "description": "Defines the HybridIdentityMetadata.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "The system data.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          },
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "vmId": {
              "description": "The unique identifier for the resource.",
              "type": "string"
            },
            "publicKey": {
              "description": "The Public Key.",
              "type": "string"
            },
            "identity": {
              "type": "object",
              "description": "Identity for the resource.",
              "properties": {
                "principalId": {
                  "type": "string",
                  "description": "The principal ID of resource identity.",
                  "readOnly": true
                },
                "tenantId": {
                  "type": "string",
                  "description": "The tenant ID of resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The identity type.",
                  "enum": [
                    "SystemAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "ResourceIdentityType",
                    "modelAsString": false
                  }
                }
              },
              "readOnly": true
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "HybridIdentityMetadataProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "vmId": {
          "description": "The unique identifier for the resource.",
          "type": "string"
        },
        "publicKey": {
          "description": "The Public Key.",
          "type": "string"
        },
        "identity": {
          "type": "object",
          "description": "Identity for the resource.",
          "properties": {
            "principalId": {
              "type": "string",
              "description": "The principal ID of resource identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "The tenant ID of resource.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The identity type.",
              "enum": [
                "SystemAssigned"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "AgentVersionsList": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "agentVersion": {
                "type": "string",
                "description": "Represents the agent version."
              },
              "downloadLink": {
                "type": "string",
                "description": "Represents the download link of specific agent version."
              },
              "osType": {
                "type": "string",
                "description": "Defines the os type."
              }
            },
            "description": "Describes properties of Agent Version."
          },
          "description": "The list of available Agent Versions.",
          "x-ms-identifiers": [
            "agentVersion"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next 10 available Agent Versions."
        }
      },
      "description": "Describes AgentVersions List."
    },
    "AgentVersion": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "agentVersion": {
          "type": "string",
          "description": "Represents the agent version."
        },
        "downloadLink": {
          "type": "string",
          "description": "Represents the download link of specific agent version."
        },
        "osType": {
          "type": "string",
          "description": "Defines the os type."
        }
      },
      "description": "Describes properties of Agent Version."
    },
    "MachineAssessPatchesResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Unknown\", \"Failed\", \"Succeeded\", or \"CompletedWithWarnings.\"",
          "enum": [
            "Unknown",
            "InProgress",
            "Failed",
            "Succeeded",
            "CompletedWithWarnings"
          ],
          "x-ms-enum": {
            "name": "PatchOperationStatus",
            "modelAsString": true
          }
        },
        "assessmentActivityId": {
          "type": "string",
          "readOnly": true,
          "description": "The activity ID of the operation that produced this result."
        },
        "rebootPending": {
          "type": "boolean",
          "readOnly": true,
          "description": "The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred."
        },
        "availablePatchCountByClassification": {
          "description": "Summarization of patches available for installation on the machine by classification.",
          "type": "object",
          "properties": {
            "security": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of security patches available for installation."
            },
            "critical": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of critical patches available for installation."
            },
            "definition": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of definition patches available for installation."
            },
            "updateRollup": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of update Rollup patches available for installation."
            },
            "featurePack": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of feature pack patches available for installation."
            },
            "servicePack": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of service pack patches available for installation."
            },
            "tools": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of tools patches available for installation."
            },
            "updates": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of updates category patches available for installation."
            },
            "other": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Number of other patches available for installation."
            }
          }
        },
        "startDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The UTC timestamp when the operation began."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The UTC timestamp when the operation finished."
        },
        "startedBy": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "User",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "PatchOperationStartedBy",
            "modelAsString": true
          },
          "description": "Indicates if operation was triggered by user or by platform."
        },
        "patchServiceUsed": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Unknown",
            "WU",
            "WU_WSUS",
            "YUM",
            "APT",
            "Zypper"
          ],
          "x-ms-enum": {
            "name": "PatchServiceUsed",
            "modelAsString": true
          },
          "description": "Specifies the patch service used for the operation."
        },
        "osType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true
          },
          "description": "The operating system type of the machine."
        },
        "errorDetails": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "readOnly": true,
          "description": "The errors that were encountered during execution of the operation. The details array contains the list of them."
        }
      },
      "description": "Describes the properties of an AssessPatches result."
    },
    "AvailablePatchCountByClassification": {
      "type": "object",
      "properties": {
        "security": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of security patches available for installation."
        },
        "critical": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of critical patches available for installation."
        },
        "definition": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of definition patches available for installation."
        },
        "updateRollup": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of update Rollup patches available for installation."
        },
        "featurePack": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of feature pack patches available for installation."
        },
        "servicePack": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of service pack patches available for installation."
        },
        "tools": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of tools patches available for installation."
        },
        "updates": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of updates category patches available for installation."
        },
        "other": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of other patches available for installation."
        }
      },
      "description": "Summarization of patches available for installation on the machine by classification."
    },
    "MachineInstallPatchesParameters": {
      "type": "object",
      "properties": {
        "maximumDuration": {
          "type": "string",
          "description": "Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)"
        },
        "rebootSetting": {
          "type": "string",
          "description": "Defines when it is acceptable to reboot a VM during a software update operation.",
          "enum": [
            "IfRequired",
            "Never",
            "Always"
          ],
          "x-ms-enum": {
            "name": "VMGuestPatchRebootSetting",
            "modelAsString": true
          }
        },
        "windowsParameters": {
          "description": "Input for InstallPatches on a Windows VM, as directly received by the API",
          "type": "object",
          "properties": {
            "classificationsToInclude": {
              "type": "array",
              "description": "The update classifications to select when installing patches for Windows.",
              "items": {
                "type": "string",
                "enum": [
                  "Critical",
                  "Security",
                  "UpdateRollUp",
                  "FeaturePack",
                  "ServicePack",
                  "Definition",
                  "Tools",
                  "Updates"
                ],
                "x-ms-enum": {
                  "name": "VMGuestPatchClassification_Windows",
                  "modelAsString": true
                }
              }
            },
            "kbNumbersToInclude": {
              "type": "array",
              "description": "Kbs to include in the patch operation",
              "items": {
                "type": "string"
              }
            },
            "kbNumbersToExclude": {
              "type": "array",
              "description": "Kbs to exclude in the patch operation",
              "items": {
                "type": "string"
              }
            },
            "excludeKbsRequiringReboot": {
              "type": "boolean",
              "description": "Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true."
            },
            "maxPatchPublishDate": {
              "type": "string",
              "format": "date-time",
              "description": "This is used to install patches that were published on or before this given max published date."
            }
          }
        },
        "linuxParameters": {
          "description": "Input for InstallPatches on a Linux VM, as directly received by the API",
          "type": "object",
          "properties": {
            "classificationsToInclude": {
              "type": "array",
              "description": "The update classifications to select when installing patches for Linux.",
              "items": {
                "type": "string",
                "enum": [
                  "Critical",
                  "Security",
                  "Other"
                ],
                "x-ms-enum": {
                  "name": "VMGuestPatchClassification_Linux",
                  "modelAsString": true
                }
              }
            },
            "packageNameMasksToInclude": {
              "type": "array",
              "description": "packages to include in the patch operation. Format: packageName_packageVersion",
              "items": {
                "type": "string"
              }
            },
            "packageNameMasksToExclude": {
              "type": "array",
              "description": "packages to exclude in the patch operation. Format: packageName_packageVersion",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "maximumDuration",
        "rebootSetting"
      ],
      "description": "Input for InstallPatches as directly received by the API"
    },
    "WindowsParameters": {
      "type": "object",
      "properties": {
        "classificationsToInclude": {
          "type": "array",
          "description": "The update classifications to select when installing patches for Windows.",
          "items": {
            "type": "string",
            "enum": [
              "Critical",
              "Security",
              "UpdateRollUp",
              "FeaturePack",
              "ServicePack",
              "Definition",
              "Tools",
              "Updates"
            ],
            "x-ms-enum": {
              "name": "VMGuestPatchClassification_Windows",
              "modelAsString": true
            }
          }
        },
        "kbNumbersToInclude": {
          "type": "array",
          "description": "Kbs to include in the patch operation",
          "items": {
            "type": "string"
          }
        },
        "kbNumbersToExclude": {
          "type": "array",
          "description": "Kbs to exclude in the patch operation",
          "items": {
            "type": "string"
          }
        },
        "excludeKbsRequiringReboot": {
          "type": "boolean",
          "description": "Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true."
        },
        "maxPatchPublishDate": {
          "type": "string",
          "format": "date-time",
          "description": "This is used to install patches that were published on or before this given max published date."
        }
      },
      "description": "Input for InstallPatches on a Windows VM, as directly received by the API"
    },
    "LinuxParameters": {
      "type": "object",
      "properties": {
        "classificationsToInclude": {
          "type": "array",
          "description": "The update classifications to select when installing patches for Linux.",
          "items": {
            "type": "string",
            "enum": [
              "Critical",
              "Security",
              "Other"
            ],
            "x-ms-enum": {
              "name": "VMGuestPatchClassification_Linux",
              "modelAsString": true
            }
          }
        },
        "packageNameMasksToInclude": {
          "type": "array",
          "description": "packages to include in the patch operation. Format: packageName_packageVersion",
          "items": {
            "type": "string"
          }
        },
        "packageNameMasksToExclude": {
          "type": "array",
          "description": "packages to exclude in the patch operation. Format: packageName_packageVersion",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Input for InstallPatches on a Linux VM, as directly received by the API"
    },
    "MachineInstallPatchesResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Failed\", \"Succeeded\", \"Unknown\" or \"CompletedWithWarnings.\"",
          "enum": [
            "Unknown",
            "InProgress",
            "Failed",
            "Succeeded",
            "CompletedWithWarnings"
          ],
          "x-ms-enum": {
            "name": "PatchOperationStatus",
            "modelAsString": true
          }
        },
        "installationActivityId": {
          "type": "string",
          "readOnly": true,
          "description": "The activity ID of the operation that produced this result."
        },
        "rebootStatus": {
          "type": "string",
          "readOnly": true,
          "description": "The reboot state of the VM following completion of the operation.",
          "enum": [
            "Unknown",
            "NotNeeded",
            "Required",
            "Started",
            "Failed",
            "Completed"
          ],
          "x-ms-enum": {
            "name": "VMGuestPatchRebootStatus",
            "modelAsString": true
          }
        },
        "maintenanceWindowExceeded": {
          "type": "boolean",
          "readOnly": true,
          "description": "Whether the operation ran out of time before it completed all its intended actions."
        },
        "excludedPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches that were not installed due to the user blocking their installation."
        },
        "notSelectedPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches that were detected as available for install, but did not meet the operation's criteria."
        },
        "pendingPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true."
        },
        "installedPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches successfully installed."
        },
        "failedPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches that could not be installed due to some issue. See errors for details."
        },
        "startDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The UTC timestamp when the operation began."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The UTC timestamp when the operation finished."
        },
        "startedBy": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "User",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "PatchOperationStartedBy",
            "modelAsString": true
          },
          "description": "Indicates if operation was triggered by user or by platform."
        },
        "patchServiceUsed": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Unknown",
            "WU",
            "WU_WSUS",
            "YUM",
            "APT",
            "Zypper"
          ],
          "x-ms-enum": {
            "name": "PatchServiceUsed",
            "modelAsString": true
          },
          "description": "Specifies the patch service used for the operation."
        },
        "osType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true
          },
          "description": "The operating system type of the machine."
        },
        "errorDetails": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "readOnly": true,
          "description": "The errors that were encountered during execution of the operation. The details array contains the list of them."
        }
      },
      "description": "The result summary of an installation operation."
    },
    "MachineRunCommand": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Describes Run Command Properties",
          "type": "object",
          "properties": {
            "source": {
              "description": "The source of the run command script.",
              "type": "object",
              "properties": {
                "script": {
                  "type": "string",
                  "description": "Specifies the script content to be executed on the machine."
                },
                "scriptUri": {
                  "type": "string",
                  "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
                },
                "commandId": {
                  "type": "string",
                  "description": "Specifies the commandId of predefined built-in script."
                },
                "scriptUriManagedIdentity": {
                  "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                    },
                    "objectId": {
                      "type": "string",
                      "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                    }
                  }
                }
              }
            },
            "parameters": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The run command parameter name."
                  },
                  "value": {
                    "type": "string",
                    "description": "The run command parameter value."
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "description": "Describes the properties of a run command parameter."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "The parameters used by the script."
            },
            "protectedParameters": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The run command parameter name."
                  },
                  "value": {
                    "type": "string",
                    "description": "The run command parameter value."
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "description": "Describes the properties of a run command parameter."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "The parameters used by the script."
            },
            "asyncExecution": {
              "type": "boolean",
              "default": false,
              "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
            },
            "runAsUser": {
              "type": "string",
              "description": "Specifies the user account on the machine when executing the run command."
            },
            "runAsPassword": {
              "type": "string",
              "description": "Specifies the user account password on the machine when executing the run command.",
              "x-ms-secret": true
            },
            "timeoutInSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "The timeout in seconds to execute the run command."
            },
            "outputBlobUri": {
              "type": "string",
              "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
            },
            "errorBlobUri": {
              "type": "string",
              "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
            },
            "outputBlobManagedIdentity": {
              "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                },
                "objectId": {
                  "type": "string",
                  "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                }
              }
            },
            "errorBlobManagedIdentity": {
              "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                },
                "objectId": {
                  "type": "string",
                  "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                }
              }
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state, which only appears in the response."
            },
            "instanceView": {
              "readOnly": true,
              "description": "The machine run command instance view.",
              "type": "object",
              "properties": {
                "executionState": {
                  "type": "string",
                  "description": "Script execution status.",
                  "enum": [
                    "Unknown",
                    "Pending",
                    "Running",
                    "Failed",
                    "Succeeded",
                    "TimedOut",
                    "Canceled"
                  ],
                  "x-ms-enum": {
                    "name": "ExecutionState",
                    "modelAsString": true
                  }
                },
                "executionMessage": {
                  "type": "string",
                  "description": "Communicate script configuration errors or execution messages."
                },
                "exitCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Exit code returned from script execution."
                },
                "output": {
                  "type": "string",
                  "description": "Script output stream."
                },
                "error": {
                  "type": "string",
                  "description": "Script error stream."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Script start time."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Script end time."
                },
                "statuses": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The status code."
                      },
                      "level": {
                        "type": "string",
                        "description": "The level code.",
                        "enum": [
                          "Info",
                          "Warning",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "ExtensionsStatusLevelTypes",
                          "modelAsString": false
                        }
                      },
                      "displayStatus": {
                        "type": "string",
                        "description": "The short localizable label for the status."
                      },
                      "message": {
                        "type": "string",
                        "description": "The detailed status message, including for alerts and error messages."
                      },
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the status."
                      }
                    },
                    "type": "object",
                    "description": "Instance view status."
                  },
                  "x-ms-identifiers": [],
                  "description": "The  status information."
                }
              }
            }
          }
        }
      },
      "description": "Describes a Run Command"
    },
    "MachineRunCommandProperties": {
      "type": "object",
      "properties": {
        "source": {
          "description": "The source of the run command script.",
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "Specifies the script content to be executed on the machine."
            },
            "scriptUri": {
              "type": "string",
              "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
            },
            "commandId": {
              "type": "string",
              "description": "Specifies the commandId of predefined built-in script."
            },
            "scriptUriManagedIdentity": {
              "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                },
                "objectId": {
                  "type": "string",
                  "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                }
              }
            }
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The run command parameter name."
              },
              "value": {
                "type": "string",
                "description": "The run command parameter value."
              }
            },
            "required": [
              "name",
              "value"
            ],
            "description": "Describes the properties of a run command parameter."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The parameters used by the script."
        },
        "protectedParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The run command parameter name."
              },
              "value": {
                "type": "string",
                "description": "The run command parameter value."
              }
            },
            "required": [
              "name",
              "value"
            ],
            "description": "Describes the properties of a run command parameter."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The parameters used by the script."
        },
        "asyncExecution": {
          "type": "boolean",
          "default": false,
          "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
        },
        "runAsUser": {
          "type": "string",
          "description": "Specifies the user account on the machine when executing the run command."
        },
        "runAsPassword": {
          "type": "string",
          "description": "Specifies the user account password on the machine when executing the run command.",
          "x-ms-secret": true
        },
        "timeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout in seconds to execute the run command."
        },
        "outputBlobUri": {
          "type": "string",
          "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
        },
        "errorBlobUri": {
          "type": "string",
          "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
        },
        "outputBlobManagedIdentity": {
          "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
            },
            "objectId": {
              "type": "string",
              "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
            }
          }
        },
        "errorBlobManagedIdentity": {
          "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
            },
            "objectId": {
              "type": "string",
              "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
            }
          }
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state, which only appears in the response."
        },
        "instanceView": {
          "readOnly": true,
          "description": "The machine run command instance view.",
          "type": "object",
          "properties": {
            "executionState": {
              "type": "string",
              "description": "Script execution status.",
              "enum": [
                "Unknown",
                "Pending",
                "Running",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ExecutionState",
                "modelAsString": true
              }
            },
            "executionMessage": {
              "type": "string",
              "description": "Communicate script configuration errors or execution messages."
            },
            "exitCode": {
              "type": "integer",
              "format": "int32",
              "description": "Exit code returned from script execution."
            },
            "output": {
              "type": "string",
              "description": "Script output stream."
            },
            "error": {
              "type": "string",
              "description": "Script error stream."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "Script start time."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "Script end time."
            },
            "statuses": {
              "type": "array",
              "items": {
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The status code."
                  },
                  "level": {
                    "type": "string",
                    "description": "The level code.",
                    "enum": [
                      "Info",
                      "Warning",
                      "Error"
                    ],
                    "x-ms-enum": {
                      "name": "ExtensionsStatusLevelTypes",
                      "modelAsString": false
                    }
                  },
                  "displayStatus": {
                    "type": "string",
                    "description": "The short localizable label for the status."
                  },
                  "message": {
                    "type": "string",
                    "description": "The detailed status message, including for alerts and error messages."
                  },
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time of the status."
                  }
                },
                "type": "object",
                "description": "Instance view status."
              },
              "x-ms-identifiers": [],
              "description": "The  status information."
            }
          }
        }
      },
      "description": "Describes the properties of a run command."
    },
    "MachineRunCommandScriptSource": {
      "type": "object",
      "properties": {
        "script": {
          "type": "string",
          "description": "Specifies the script content to be executed on the machine."
        },
        "scriptUri": {
          "type": "string",
          "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
        },
        "commandId": {
          "type": "string",
          "description": "Specifies the commandId of predefined built-in script."
        },
        "scriptUriManagedIdentity": {
          "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
            },
            "objectId": {
              "type": "string",
              "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
            }
          }
        }
      },
      "description": "Describes the script sources for run command. Use only one of script, scriptUri, commandId."
    },
    "MachineRunCommandInstanceView": {
      "type": "object",
      "properties": {
        "executionState": {
          "type": "string",
          "description": "Script execution status.",
          "enum": [
            "Unknown",
            "Pending",
            "Running",
            "Failed",
            "Succeeded",
            "TimedOut",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ExecutionState",
            "modelAsString": true
          }
        },
        "executionMessage": {
          "type": "string",
          "description": "Communicate script configuration errors or execution messages."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "Exit code returned from script execution."
        },
        "output": {
          "type": "string",
          "description": "Script output stream."
        },
        "error": {
          "type": "string",
          "description": "Script error stream."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Script start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Script end time."
        },
        "statuses": {
          "type": "array",
          "items": {
            "properties": {
              "code": {
                "type": "string",
                "description": "The status code."
              },
              "level": {
                "type": "string",
                "description": "The level code.",
                "enum": [
                  "Info",
                  "Warning",
                  "Error"
                ],
                "x-ms-enum": {
                  "name": "ExtensionsStatusLevelTypes",
                  "modelAsString": false
                }
              },
              "displayStatus": {
                "type": "string",
                "description": "The short localizable label for the status."
              },
              "message": {
                "type": "string",
                "description": "The detailed status message, including for alerts and error messages."
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "description": "The time of the status."
              }
            },
            "type": "object",
            "description": "Instance view status."
          },
          "x-ms-identifiers": [],
          "description": "The  status information."
        }
      },
      "description": "The instance view of a machine run command."
    },
    "MachineRunCommandsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Describes Run Command Properties",
                "type": "object",
                "properties": {
                  "source": {
                    "description": "The source of the run command script.",
                    "type": "object",
                    "properties": {
                      "script": {
                        "type": "string",
                        "description": "Specifies the script content to be executed on the machine."
                      },
                      "scriptUri": {
                        "type": "string",
                        "description": "Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."
                      },
                      "commandId": {
                        "type": "string",
                        "description": "Specifies the commandId of predefined built-in script."
                      },
                      "scriptUriManagedIdentity": {
                        "description": "User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.",
                        "type": "object",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                          },
                          "objectId": {
                            "type": "string",
                            "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                          }
                        }
                      }
                    }
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The run command parameter name."
                        },
                        "value": {
                          "type": "string",
                          "description": "The run command parameter value."
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ],
                      "description": "Describes the properties of a run command parameter."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "The parameters used by the script."
                  },
                  "protectedParameters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The run command parameter name."
                        },
                        "value": {
                          "type": "string",
                          "description": "The run command parameter value."
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ],
                      "description": "Describes the properties of a run command parameter."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "The parameters used by the script."
                  },
                  "asyncExecution": {
                    "type": "boolean",
                    "default": false,
                    "description": "Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."
                  },
                  "runAsUser": {
                    "type": "string",
                    "description": "Specifies the user account on the machine when executing the run command."
                  },
                  "runAsPassword": {
                    "type": "string",
                    "description": "Specifies the user account password on the machine when executing the run command.",
                    "x-ms-secret": true
                  },
                  "timeoutInSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The timeout in seconds to execute the run command."
                  },
                  "outputBlobUri": {
                    "type": "string",
                    "description": "Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "
                  },
                  "errorBlobUri": {
                    "type": "string",
                    "description": "Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."
                  },
                  "outputBlobManagedIdentity": {
                    "description": "User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                      },
                      "objectId": {
                        "type": "string",
                        "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                      }
                    }
                  },
                  "errorBlobManagedIdentity": {
                    "description": "User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged ",
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
                      },
                      "objectId": {
                        "type": "string",
                        "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
                      }
                    }
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The provisioning state, which only appears in the response."
                  },
                  "instanceView": {
                    "readOnly": true,
                    "description": "The machine run command instance view.",
                    "type": "object",
                    "properties": {
                      "executionState": {
                        "type": "string",
                        "description": "Script execution status.",
                        "enum": [
                          "Unknown",
                          "Pending",
                          "Running",
                          "Failed",
                          "Succeeded",
                          "TimedOut",
                          "Canceled"
                        ],
                        "x-ms-enum": {
                          "name": "ExecutionState",
                          "modelAsString": true
                        }
                      },
                      "executionMessage": {
                        "type": "string",
                        "description": "Communicate script configuration errors or execution messages."
                      },
                      "exitCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Exit code returned from script execution."
                      },
                      "output": {
                        "type": "string",
                        "description": "Script output stream."
                      },
                      "error": {
                        "type": "string",
                        "description": "Script error stream."
                      },
                      "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Script start time."
                      },
                      "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Script end time."
                      },
                      "statuses": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "The status code."
                            },
                            "level": {
                              "type": "string",
                              "description": "The level code.",
                              "enum": [
                                "Info",
                                "Warning",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "ExtensionsStatusLevelTypes",
                                "modelAsString": false
                              }
                            },
                            "displayStatus": {
                              "type": "string",
                              "description": "The short localizable label for the status."
                            },
                            "message": {
                              "type": "string",
                              "description": "The detailed status message, including for alerts and error messages."
                            },
                            "time": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The time of the status."
                            }
                          },
                          "type": "object",
                          "description": "Instance view status."
                        },
                        "x-ms-identifiers": [],
                        "description": "The  status information."
                      }
                    }
                  }
                }
              }
            },
            "description": "Describes a Run Command"
          },
          "description": "The list of run commands"
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of run commands. Call ListNext() with this to fetch the next page of run commands."
        }
      },
      "description": "Describes the Run Commands List Result."
    },
    "MachineRunCommandUpdate": {
      "type": "object",
      "description": "Describes a Machine Extension Update.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "RunCommandInputParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The run command parameter name."
        },
        "value": {
          "type": "string",
          "description": "The run command parameter value."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "Describes the properties of a run command parameter."
    },
    "RunCommandManagedIdentity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."
        },
        "objectId": {
          "type": "string",
          "description": "Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."
        }
      },
      "description": " Contains clientId or objectId (use only one, not both) of a user-assigned managed identity that has access to storage blob used in Run Command. Use an empty RunCommandManagedIdentity object in case of system-assigned identity. Make sure the Azure storage blob exists in case of scriptUri, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment with scriptUri blob and 'Storage Blob Data Contributor' for Append blobs(outputBlobUri, errorBlobUri). In case of user assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged."
    },
    "ExtensionsResourceStatus": {
      "properties": {
        "code": {
          "type": "string",
          "description": "The status code."
        },
        "level": {
          "type": "string",
          "description": "The level code.",
          "enum": [
            "Info",
            "Warning",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ExtensionsStatusLevelTypes",
            "modelAsString": false
          }
        },
        "displayStatus": {
          "type": "string",
          "description": "The short localizable label for the status."
        },
        "message": {
          "type": "string",
          "description": "The detailed status message, including for alerts and error messages."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the status."
        }
      },
      "type": "object",
      "description": "Instance view status."
    },
    "Gateway": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Hybrid Compute Gateway properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state, which only appears in the response.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Accepted",
                "Canceled",
                "Deleted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "gatewayId": {
              "type": "string",
              "description": "A unique, immutable, identifier for the Gateway.",
              "readOnly": true
            },
            "gatewayType": {
              "description": "The type of the Gateway resource.",
              "type": "string",
              "enum": [
                "Public"
              ],
              "x-ms-enum": {
                "name": "GatewayType",
                "modelAsString": true
              }
            },
            "gatewayEndpoint": {
              "type": "string",
              "description": "The endpoint fqdn for the Gateway.",
              "readOnly": true
            },
            "allowedFeatures": {
              "type": "array",
              "description": "Specifies the list of features that are enabled for this Gateway.",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "description": "Describes an Arc Gateway."
    },
    "GatewayProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state, which only appears in the response.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Accepted",
            "Canceled",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "gatewayId": {
          "type": "string",
          "description": "A unique, immutable, identifier for the Gateway.",
          "readOnly": true
        },
        "gatewayType": {
          "description": "The type of the Gateway resource.",
          "type": "string",
          "enum": [
            "Public"
          ],
          "x-ms-enum": {
            "name": "GatewayType",
            "modelAsString": true
          }
        },
        "gatewayEndpoint": {
          "type": "string",
          "description": "The endpoint fqdn for the Gateway.",
          "readOnly": true
        },
        "allowedFeatures": {
          "type": "array",
          "description": "Specifies the list of features that are enabled for this Gateway.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Describes the properties of a Gateway Profile."
    },
    "GatewayType": {
      "type": "string",
      "enum": [
        "Public"
      ],
      "x-ms-enum": {
        "name": "GatewayType",
        "modelAsString": true
      },
      "description": "The type of the Gateway resource."
    },
    "GatewayUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Gateway Update properties",
          "type": "object",
          "properties": {
            "allowedFeatures": {
              "type": "array",
              "description": "Specifies the list of features that are enabled for this Gateway.",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "description": "Describes a License Update."
    },
    "GatewayUpdateProperties": {
      "type": "object",
      "properties": {
        "allowedFeatures": {
          "type": "array",
          "description": "Specifies the list of features that are enabled for this Gateway.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Describes the Update properties of a Gateway Profile."
    },
    "GatewaysListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Hybrid Compute Gateway properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state, which only appears in the response.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Accepted",
                      "Canceled",
                      "Deleted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "gatewayId": {
                    "type": "string",
                    "description": "A unique, immutable, identifier for the Gateway.",
                    "readOnly": true
                  },
                  "gatewayType": {
                    "description": "The type of the Gateway resource.",
                    "type": "string",
                    "enum": [
                      "Public"
                    ],
                    "x-ms-enum": {
                      "name": "GatewayType",
                      "modelAsString": true
                    }
                  },
                  "gatewayEndpoint": {
                    "type": "string",
                    "description": "The endpoint fqdn for the Gateway.",
                    "readOnly": true
                  },
                  "allowedFeatures": {
                    "type": "array",
                    "description": "Specifies the list of features that are enabled for this Gateway.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Describes an Arc Gateway."
          },
          "description": "The list of Gateways."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Gateways. Call ListNext() with this URI to fetch the next page of Gateways."
        }
      },
      "required": [
        "value"
      ],
      "description": "The List license operation response."
    },
    "Settings": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Settings properties",
          "properties": {
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "Azure resource tenant Id"
            },
            "gatewayProperties": {
              "x-ms-client-flatten": true,
              "type": "object",
              "description": "Settings Gateway properties",
              "properties": {
                "gatewayResourceId": {
                  "type": "string",
                  "description": "Associated Gateway Resource Id",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.HybridCompute/gateways"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "SettingsProperties": {
      "type": "object",
      "description": "Settings properties",
      "properties": {
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource tenant Id"
        },
        "gatewayProperties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Settings Gateway properties",
          "properties": {
            "gatewayResourceId": {
              "type": "string",
              "description": "Associated Gateway Resource Id",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.HybridCompute/gateways"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "SettingsGatewayProperties": {
      "type": "object",
      "description": "Settings Gateway properties",
      "properties": {
        "gatewayResourceId": {
          "type": "string",
          "description": "Associated Gateway Resource Id",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.HybridCompute/gateways"
              }
            ]
          }
        }
      }
    },
    "SetupExtensionRequest": {
      "type": "object",
      "properties": {
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "forceUpdateTag": {
                "type": "string",
                "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
              },
              "publisher": {
                "type": "string",
                "description": "The name of the extension handler publisher."
              },
              "type": {
                "type": "string",
                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
              },
              "typeHandlerVersion": {
                "type": "string",
                "description": "Specifies the version of the script handler."
              },
              "enableAutomaticUpgrade": {
                "type": "boolean",
                "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
              },
              "autoUpgradeMinorVersion": {
                "type": "boolean",
                "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
              },
              "settings": {
                "type": "object",
                "additionalProperties": {},
                "description": "Json formatted public settings for the extension."
              },
              "protectedSettings": {
                "type": "object",
                "additionalProperties": {},
                "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
              },
              "provisioningState": {
                "readOnly": true,
                "type": "string",
                "description": "The provisioning state, which only appears in the response."
              },
              "instanceView": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The machine extension name."
                  },
                  "type": {
                    "type": "string",
                    "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                  },
                  "typeHandlerVersion": {
                    "type": "string",
                    "description": "Specifies the version of the script handler."
                  },
                  "status": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The status code."
                      },
                      "level": {
                        "type": "string",
                        "description": "The level code.",
                        "enum": [
                          "Info",
                          "Warning",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "StatusLevelTypes",
                          "modelAsString": true
                        }
                      },
                      "displayStatus": {
                        "type": "string",
                        "description": "The short localizable label for the status."
                      },
                      "message": {
                        "type": "string",
                        "description": "The detailed status message, including for alerts and error messages."
                      },
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the status."
                      }
                    },
                    "description": "Instance view status."
                  }
                },
                "description": "Describes the Machine Extension Instance View."
              }
            },
            "description": "Describes the properties of a Machine Extension."
          },
          "description": "The list of extensions"
        }
      }
    },
    "NetworkConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Network configuration properties",
          "properties": {
            "location": {
              "type": "string",
              "description": "Resource location",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "Azure resource tenant Id"
            },
            "networkConfigurationScopeId": {
              "type": "string",
              "description": "Associated Network Configuration Scope Id (GUID)"
            },
            "networkConfigurationScopeResourceId": {
              "type": "string",
              "description": "Associated Network Configuration Scope Resource Id",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.HybridCompute/privateLinkScopes"
                  }
                ]
              }
            },
            "keyProperties": {
              "description": "Public key information for client authentication",
              "readOnly": true,
              "type": "object",
              "properties": {
                "clientPublicKey": {
                  "description": "Current public key details",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "publicKey": {
                      "type": "string",
                      "description": "Public key",
                      "readOnly": true
                    },
                    "notAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Key expiration date",
                      "readOnly": true
                    },
                    "renewAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Recommended key renewal date",
                      "readOnly": true
                    }
                  }
                },
                "candidatePublicKey": {
                  "description": "Candidate public key details",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "publicKey": {
                      "type": "string",
                      "description": "Public key",
                      "readOnly": true
                    },
                    "notAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Key expiration date",
                      "readOnly": true
                    },
                    "renewAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Recommended key renewal date",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "NetworkConfigurationProperties": {
      "type": "object",
      "description": "Network configuration properties",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource tenant Id"
        },
        "networkConfigurationScopeId": {
          "type": "string",
          "description": "Associated Network Configuration Scope Id (GUID)"
        },
        "networkConfigurationScopeResourceId": {
          "type": "string",
          "description": "Associated Network Configuration Scope Resource Id",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.HybridCompute/privateLinkScopes"
              }
            ]
          }
        },
        "keyProperties": {
          "description": "Public key information for client authentication",
          "readOnly": true,
          "type": "object",
          "properties": {
            "clientPublicKey": {
              "description": "Current public key details",
              "readOnly": true,
              "type": "object",
              "properties": {
                "publicKey": {
                  "type": "string",
                  "description": "Public key",
                  "readOnly": true
                },
                "notAfter": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Key expiration date",
                  "readOnly": true
                },
                "renewAfter": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Recommended key renewal date",
                  "readOnly": true
                }
              }
            },
            "candidatePublicKey": {
              "description": "Candidate public key details",
              "readOnly": true,
              "type": "object",
              "properties": {
                "publicKey": {
                  "type": "string",
                  "description": "Public key",
                  "readOnly": true
                },
                "notAfter": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Key expiration date",
                  "readOnly": true
                },
                "renewAfter": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Recommended key renewal date",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "KeyProperties": {
      "type": "object",
      "description": "Public key information for client authentication",
      "properties": {
        "clientPublicKey": {
          "description": "Current public key details",
          "readOnly": true,
          "type": "object",
          "properties": {
            "publicKey": {
              "type": "string",
              "description": "Public key",
              "readOnly": true
            },
            "notAfter": {
              "type": "string",
              "format": "date-time",
              "description": "Key expiration date",
              "readOnly": true
            },
            "renewAfter": {
              "type": "string",
              "format": "date-time",
              "description": "Recommended key renewal date",
              "readOnly": true
            }
          }
        },
        "candidatePublicKey": {
          "description": "Candidate public key details",
          "readOnly": true,
          "type": "object",
          "properties": {
            "publicKey": {
              "type": "string",
              "description": "Public key",
              "readOnly": true
            },
            "notAfter": {
              "type": "string",
              "format": "date-time",
              "description": "Key expiration date",
              "readOnly": true
            },
            "renewAfter": {
              "type": "string",
              "format": "date-time",
              "description": "Recommended key renewal date",
              "readOnly": true
            }
          }
        }
      }
    },
    "KeyDetails": {
      "type": "object",
      "description": "Public key details",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "Public key",
          "readOnly": true
        },
        "notAfter": {
          "type": "string",
          "format": "date-time",
          "description": "Key expiration date",
          "readOnly": true
        },
        "renewAfter": {
          "type": "string",
          "format": "date-time",
          "description": "Recommended key renewal date",
          "readOnly": true
        }
      }
    },
    "NetworkSecurityPerimeterConfiguration": {
      "type": "object",
      "description": "Properties that define a Network Security Perimeter resource.",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "name": {
          "type": "string",
          "description": "Azure resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties that define a Network Security Perimeter resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Current state of this NetworkSecurityPerimeter: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
              "readOnly": true
            },
            "provisioningIssues": {
              "type": "array",
              "description": "Provisioning issues.",
              "readOnly": true,
              "items": {
                "type": "object",
                "description": "Details on issues that occurred during provisioning.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the provisioning issue.",
                    "readOnly": true
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Provisioning issue properties",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "issueType": {
                        "description": "Issue type",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "MissingPerimeterConfiguration",
                          "MissingIdentityConfiguration",
                          "ConfigurationPropagationFailure",
                          "Other"
                        ],
                        "x-ms-enum": {
                          "name": "ProvisioningIssueType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "MissingPerimeterConfiguration",
                              "description": "Perimeter configuration is missing."
                            },
                            {
                              "value": "MissingIdentityConfiguration",
                              "description": "Identity configuration is missing."
                            },
                            {
                              "value": "ConfigurationPropagationFailure",
                              "description": "Configuration failed to propagate."
                            },
                            {
                              "value": "Other",
                              "description": "Other failure."
                            }
                          ]
                        }
                      },
                      "severity": {
                        "description": "Severity of the provisioning issue.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Warning",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "ProvisioningIssueSeverity",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Warning",
                              "description": "Warnings can cause connectivity issues after provisioning succeeds."
                            },
                            {
                              "value": "Error",
                              "description": "Errors will cause association provisioning to fail."
                            }
                          ]
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the provisioning issue.",
                        "readOnly": true
                      },
                      "suggestedResourceIds": {
                        "type": "array",
                        "description": "ARM Ids of the resources that can be associated to the same perimeter to remediate the issue",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        },
                        "x-ms-identifiers": []
                      },
                      "suggestedAccessRules": {
                        "type": "array",
                        "description": "Access rules that can be added to the perimeter to remediate the issue",
                        "readOnly": true,
                        "items": {
                          "type": "object",
                          "description": "Access rule.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the access rule.",
                              "readOnly": true
                            },
                            "properties": {
                              "x-ms-client-flatten": true,
                              "description": "Access rule properties",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "direction": {
                                  "description": "Direction of the access rule.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Inbound",
                                    "Outbound"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AccessRuleDirection",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Inbound",
                                        "description": "Traffic originates outside of network."
                                      },
                                      {
                                        "value": "Outbound",
                                        "description": "Traffic originates inside the network"
                                      }
                                    ]
                                  }
                                },
                                "addressPrefixes": {
                                  "type": "array",
                                  "description": "Address prefixes that are allowed access.",
                                  "readOnly": true,
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "networkSecurityPerimeter": {
              "description": "The Network Security Perimeter associated with this configuration.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Azure resource Id"
                },
                "perimeterGuid": {
                  "type": "string",
                  "description": "Guid of the Network Security Perimeter",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Regional location of the perimeter"
                }
              }
            },
            "resourceAssociation": {
              "description": "The Resource Association.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Name of the Resource Association"
                },
                "accessMode": {
                  "description": "The access mode",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "enforced",
                    "audit",
                    "learning"
                  ],
                  "x-ms-enum": {
                    "name": "AccessMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "enforced",
                        "description": "Indicates that resource access is controlled by the NSP definition."
                      },
                      {
                        "value": "audit",
                        "description": "Dry run mode, where traffic is evaluated against NSP Rules, logged but not enforced."
                      },
                      {
                        "value": "learning",
                        "description": "Enables traffic evaluation to fall back to resource-specific firewall configurations."
                      }
                    ]
                  }
                }
              }
            },
            "profile": {
              "description": "Network Security Perimeter profile",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource",
                  "readOnly": true
                },
                "accessRulesVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Access rules version number",
                  "readOnly": true
                },
                "accessRules": {
                  "type": "array",
                  "description": "Collection of access rules for the profile",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "description": "Access rule.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the access rule.",
                        "readOnly": true
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Access rule properties",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "direction": {
                            "description": "Direction of the access rule.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Inbound",
                              "Outbound"
                            ],
                            "x-ms-enum": {
                              "name": "AccessRuleDirection",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Inbound",
                                  "description": "Traffic originates outside of network."
                                },
                                {
                                  "value": "Outbound",
                                  "description": "Traffic originates inside the network"
                                }
                              ]
                            }
                          },
                          "addressPrefixes": {
                            "type": "array",
                            "description": "Address prefixes that are allowed access.",
                            "readOnly": true,
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "diagnosticSettingsVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Diagnostic settings version number",
                  "readOnly": true
                },
                "enabledLogCategories": {
                  "type": "array",
                  "description": "Collection of enabled log categories for the profile",
                  "readOnly": true,
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "NetworkSecurityPerimeterConfigurationProperties": {
      "type": "object",
      "description": "Properties that define a Network Security Perimeter resource.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Current state of this NetworkSecurityPerimeter: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
          "readOnly": true
        },
        "provisioningIssues": {
          "type": "array",
          "description": "Provisioning issues.",
          "readOnly": true,
          "items": {
            "type": "object",
            "description": "Details on issues that occurred during provisioning.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the provisioning issue.",
                "readOnly": true
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Provisioning issue properties",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "issueType": {
                    "description": "Issue type",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "MissingPerimeterConfiguration",
                      "MissingIdentityConfiguration",
                      "ConfigurationPropagationFailure",
                      "Other"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningIssueType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "MissingPerimeterConfiguration",
                          "description": "Perimeter configuration is missing."
                        },
                        {
                          "value": "MissingIdentityConfiguration",
                          "description": "Identity configuration is missing."
                        },
                        {
                          "value": "ConfigurationPropagationFailure",
                          "description": "Configuration failed to propagate."
                        },
                        {
                          "value": "Other",
                          "description": "Other failure."
                        }
                      ]
                    }
                  },
                  "severity": {
                    "description": "Severity of the provisioning issue.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Warning",
                      "Error"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningIssueSeverity",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Warning",
                          "description": "Warnings can cause connectivity issues after provisioning succeeds."
                        },
                        {
                          "value": "Error",
                          "description": "Errors will cause association provisioning to fail."
                        }
                      ]
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the provisioning issue.",
                    "readOnly": true
                  },
                  "suggestedResourceIds": {
                    "type": "array",
                    "description": "ARM Ids of the resources that can be associated to the same perimeter to remediate the issue",
                    "readOnly": true,
                    "items": {
                      "type": "string"
                    },
                    "x-ms-identifiers": []
                  },
                  "suggestedAccessRules": {
                    "type": "array",
                    "description": "Access rules that can be added to the perimeter to remediate the issue",
                    "readOnly": true,
                    "items": {
                      "type": "object",
                      "description": "Access rule.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the access rule.",
                          "readOnly": true
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Access rule properties",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "direction": {
                              "description": "Direction of the access rule.",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Inbound",
                                "Outbound"
                              ],
                              "x-ms-enum": {
                                "name": "AccessRuleDirection",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Inbound",
                                    "description": "Traffic originates outside of network."
                                  },
                                  {
                                    "value": "Outbound",
                                    "description": "Traffic originates inside the network"
                                  }
                                ]
                              }
                            },
                            "addressPrefixes": {
                              "type": "array",
                              "description": "Address prefixes that are allowed access.",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "networkSecurityPerimeter": {
          "description": "The Network Security Perimeter associated with this configuration.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true,
              "description": "Azure resource Id"
            },
            "perimeterGuid": {
              "type": "string",
              "description": "Guid of the Network Security Perimeter",
              "readOnly": true
            },
            "location": {
              "type": "string",
              "readOnly": true,
              "description": "Regional location of the perimeter"
            }
          }
        },
        "resourceAssociation": {
          "description": "The Resource Association.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the Resource Association"
            },
            "accessMode": {
              "description": "The access mode",
              "readOnly": true,
              "type": "string",
              "enum": [
                "enforced",
                "audit",
                "learning"
              ],
              "x-ms-enum": {
                "name": "AccessMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "enforced",
                    "description": "Indicates that resource access is controlled by the NSP definition."
                  },
                  {
                    "value": "audit",
                    "description": "Dry run mode, where traffic is evaluated against NSP Rules, logged but not enforced."
                  },
                  {
                    "value": "learning",
                    "description": "Enables traffic evaluation to fall back to resource-specific firewall configurations."
                  }
                ]
              }
            }
          }
        },
        "profile": {
          "description": "Network Security Perimeter profile",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the resource",
              "readOnly": true
            },
            "accessRulesVersion": {
              "type": "integer",
              "format": "int32",
              "description": "Access rules version number",
              "readOnly": true
            },
            "accessRules": {
              "type": "array",
              "description": "Collection of access rules for the profile",
              "readOnly": true,
              "items": {
                "type": "object",
                "description": "Access rule.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the access rule.",
                    "readOnly": true
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Access rule properties",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "direction": {
                        "description": "Direction of the access rule.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Inbound",
                          "Outbound"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRuleDirection",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Inbound",
                              "description": "Traffic originates outside of network."
                            },
                            {
                              "value": "Outbound",
                              "description": "Traffic originates inside the network"
                            }
                          ]
                        }
                      },
                      "addressPrefixes": {
                        "type": "array",
                        "description": "Address prefixes that are allowed access.",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "diagnosticSettingsVersion": {
              "type": "integer",
              "format": "int32",
              "description": "Diagnostic settings version number",
              "readOnly": true
            },
            "enabledLogCategories": {
              "type": "array",
              "description": "Collection of enabled log categories for the profile",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "NetworkSecurityPerimeterProfile": {
      "type": "object",
      "description": "Network Security Perimeter profile",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource",
          "readOnly": true
        },
        "accessRulesVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Access rules version number",
          "readOnly": true
        },
        "accessRules": {
          "type": "array",
          "description": "Collection of access rules for the profile",
          "readOnly": true,
          "items": {
            "type": "object",
            "description": "Access rule.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the access rule.",
                "readOnly": true
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Access rule properties",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "direction": {
                    "description": "Direction of the access rule.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Inbound",
                      "Outbound"
                    ],
                    "x-ms-enum": {
                      "name": "AccessRuleDirection",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Inbound",
                          "description": "Traffic originates outside of network."
                        },
                        {
                          "value": "Outbound",
                          "description": "Traffic originates inside the network"
                        }
                      ]
                    }
                  },
                  "addressPrefixes": {
                    "type": "array",
                    "description": "Address prefixes that are allowed access.",
                    "readOnly": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "diagnosticSettingsVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Diagnostic settings version number",
          "readOnly": true
        },
        "enabledLogCategories": {
          "type": "array",
          "description": "Collection of enabled log categories for the profile",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProvisioningIssue": {
      "type": "object",
      "description": "Details on issues that occurred during provisioning.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the provisioning issue.",
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Provisioning issue properties",
          "readOnly": true,
          "type": "object",
          "properties": {
            "issueType": {
              "description": "Issue type",
              "readOnly": true,
              "type": "string",
              "enum": [
                "MissingPerimeterConfiguration",
                "MissingIdentityConfiguration",
                "ConfigurationPropagationFailure",
                "Other"
              ],
              "x-ms-enum": {
                "name": "ProvisioningIssueType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "MissingPerimeterConfiguration",
                    "description": "Perimeter configuration is missing."
                  },
                  {
                    "value": "MissingIdentityConfiguration",
                    "description": "Identity configuration is missing."
                  },
                  {
                    "value": "ConfigurationPropagationFailure",
                    "description": "Configuration failed to propagate."
                  },
                  {
                    "value": "Other",
                    "description": "Other failure."
                  }
                ]
              }
            },
            "severity": {
              "description": "Severity of the provisioning issue.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Warning",
                "Error"
              ],
              "x-ms-enum": {
                "name": "ProvisioningIssueSeverity",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Warning",
                    "description": "Warnings can cause connectivity issues after provisioning succeeds."
                  },
                  {
                    "value": "Error",
                    "description": "Errors will cause association provisioning to fail."
                  }
                ]
              }
            },
            "description": {
              "type": "string",
              "description": "Description of the provisioning issue.",
              "readOnly": true
            },
            "suggestedResourceIds": {
              "type": "array",
              "description": "ARM Ids of the resources that can be associated to the same perimeter to remediate the issue",
              "readOnly": true,
              "items": {
                "type": "string"
              },
              "x-ms-identifiers": []
            },
            "suggestedAccessRules": {
              "type": "array",
              "description": "Access rules that can be added to the perimeter to remediate the issue",
              "readOnly": true,
              "items": {
                "type": "object",
                "description": "Access rule.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the access rule.",
                    "readOnly": true
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Access rule properties",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "direction": {
                        "description": "Direction of the access rule.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Inbound",
                          "Outbound"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRuleDirection",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Inbound",
                              "description": "Traffic originates outside of network."
                            },
                            {
                              "value": "Outbound",
                              "description": "Traffic originates inside the network"
                            }
                          ]
                        }
                      },
                      "addressPrefixes": {
                        "type": "array",
                        "description": "Address prefixes that are allowed access.",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "ProvisioningIssueProperties": {
      "type": "object",
      "description": "Properties of a provisioning issue.",
      "properties": {
        "issueType": {
          "description": "Issue type",
          "readOnly": true,
          "type": "string",
          "enum": [
            "MissingPerimeterConfiguration",
            "MissingIdentityConfiguration",
            "ConfigurationPropagationFailure",
            "Other"
          ],
          "x-ms-enum": {
            "name": "ProvisioningIssueType",
            "modelAsString": true,
            "values": [
              {
                "value": "MissingPerimeterConfiguration",
                "description": "Perimeter configuration is missing."
              },
              {
                "value": "MissingIdentityConfiguration",
                "description": "Identity configuration is missing."
              },
              {
                "value": "ConfigurationPropagationFailure",
                "description": "Configuration failed to propagate."
              },
              {
                "value": "Other",
                "description": "Other failure."
              }
            ]
          }
        },
        "severity": {
          "description": "Severity of the provisioning issue.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Warning",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ProvisioningIssueSeverity",
            "modelAsString": true,
            "values": [
              {
                "value": "Warning",
                "description": "Warnings can cause connectivity issues after provisioning succeeds."
              },
              {
                "value": "Error",
                "description": "Errors will cause association provisioning to fail."
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Description of the provisioning issue.",
          "readOnly": true
        },
        "suggestedResourceIds": {
          "type": "array",
          "description": "ARM Ids of the resources that can be associated to the same perimeter to remediate the issue",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "suggestedAccessRules": {
          "type": "array",
          "description": "Access rules that can be added to the perimeter to remediate the issue",
          "readOnly": true,
          "items": {
            "type": "object",
            "description": "Access rule.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the access rule.",
                "readOnly": true
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Access rule properties",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "direction": {
                    "description": "Direction of the access rule.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Inbound",
                      "Outbound"
                    ],
                    "x-ms-enum": {
                      "name": "AccessRuleDirection",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Inbound",
                          "description": "Traffic originates outside of network."
                        },
                        {
                          "value": "Outbound",
                          "description": "Traffic originates inside the network"
                        }
                      ]
                    }
                  },
                  "addressPrefixes": {
                    "type": "array",
                    "description": "Address prefixes that are allowed access.",
                    "readOnly": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ProvisioningIssueType": {
      "type": "string",
      "description": "Type of provisioning issue.",
      "enum": [
        "MissingPerimeterConfiguration",
        "MissingIdentityConfiguration",
        "ConfigurationPropagationFailure",
        "Other"
      ],
      "x-ms-enum": {
        "name": "ProvisioningIssueType",
        "modelAsString": true,
        "values": [
          {
            "value": "MissingPerimeterConfiguration",
            "description": "Perimeter configuration is missing."
          },
          {
            "value": "MissingIdentityConfiguration",
            "description": "Identity configuration is missing."
          },
          {
            "value": "ConfigurationPropagationFailure",
            "description": "Configuration failed to propagate."
          },
          {
            "value": "Other",
            "description": "Other failure."
          }
        ]
      }
    },
    "ProvisioningIssueSeverity": {
      "type": "string",
      "description": "Severity of the provisioning issue.",
      "enum": [
        "Warning",
        "Error"
      ],
      "x-ms-enum": {
        "name": "ProvisioningIssueSeverity",
        "modelAsString": true,
        "values": [
          {
            "value": "Warning",
            "description": "Warnings can cause connectivity issues after provisioning succeeds."
          },
          {
            "value": "Error",
            "description": "Errors will cause association provisioning to fail."
          }
        ]
      }
    },
    "AccessMode": {
      "type": "string",
      "description": "Property that impacts a resource's logging behavior and its connectivity with other resources and public networks.",
      "enum": [
        "enforced",
        "audit",
        "learning"
      ],
      "x-ms-enum": {
        "name": "AccessMode",
        "modelAsString": true,
        "values": [
          {
            "value": "enforced",
            "description": "Indicates that resource access is controlled by the NSP definition."
          },
          {
            "value": "audit",
            "description": "Dry run mode, where traffic is evaluated against NSP Rules, logged but not enforced."
          },
          {
            "value": "learning",
            "description": "Enables traffic evaluation to fall back to resource-specific firewall configurations."
          }
        ]
      }
    },
    "AccessRuleDirection": {
      "type": "string",
      "description": "Indicates direction of an access rule.",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "AccessRuleDirection",
        "modelAsString": true,
        "values": [
          {
            "value": "Inbound",
            "description": "Traffic originates outside of network."
          },
          {
            "value": "Outbound",
            "description": "Traffic originates inside the network"
          }
        ]
      }
    },
    "AccessRule": {
      "type": "object",
      "description": "Access rule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the access rule.",
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Access rule properties",
          "readOnly": true,
          "type": "object",
          "properties": {
            "direction": {
              "description": "Direction of the access rule.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Inbound",
                "Outbound"
              ],
              "x-ms-enum": {
                "name": "AccessRuleDirection",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Inbound",
                    "description": "Traffic originates outside of network."
                  },
                  {
                    "value": "Outbound",
                    "description": "Traffic originates inside the network"
                  }
                ]
              }
            },
            "addressPrefixes": {
              "type": "array",
              "description": "Address prefixes that are allowed access.",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "AccessRuleProperties": {
      "type": "object",
      "description": "Properties of an access rule.",
      "properties": {
        "direction": {
          "description": "Direction of the access rule.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "AccessRuleDirection",
            "modelAsString": true,
            "values": [
              {
                "value": "Inbound",
                "description": "Traffic originates outside of network."
              },
              {
                "value": "Outbound",
                "description": "Traffic originates inside the network"
              }
            ]
          }
        },
        "addressPrefixes": {
          "type": "array",
          "description": "Address prefixes that are allowed access.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NetworkSecurityPerimeter": {
      "type": "object",
      "description": "Properties that define a Network Security Perimeter resource.",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "perimeterGuid": {
          "type": "string",
          "description": "Guid of the Network Security Perimeter",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "Regional location of the perimeter"
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationListResult": {
      "type": "object",
      "description": "A list of network security perimeter configurations.",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Properties that define a Network Security Perimeter resource.",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "Azure resource Id"
              },
              "name": {
                "type": "string",
                "description": "Azure resource name",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "Azure resource type"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties that define a Network Security Perimeter resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "description": "Current state of this NetworkSecurityPerimeter: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                    "readOnly": true
                  },
                  "provisioningIssues": {
                    "type": "array",
                    "description": "Provisioning issues.",
                    "readOnly": true,
                    "items": {
                      "type": "object",
                      "description": "Details on issues that occurred during provisioning.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the provisioning issue.",
                          "readOnly": true
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Provisioning issue properties",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "issueType": {
                              "description": "Issue type",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "MissingPerimeterConfiguration",
                                "MissingIdentityConfiguration",
                                "ConfigurationPropagationFailure",
                                "Other"
                              ],
                              "x-ms-enum": {
                                "name": "ProvisioningIssueType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "MissingPerimeterConfiguration",
                                    "description": "Perimeter configuration is missing."
                                  },
                                  {
                                    "value": "MissingIdentityConfiguration",
                                    "description": "Identity configuration is missing."
                                  },
                                  {
                                    "value": "ConfigurationPropagationFailure",
                                    "description": "Configuration failed to propagate."
                                  },
                                  {
                                    "value": "Other",
                                    "description": "Other failure."
                                  }
                                ]
                              }
                            },
                            "severity": {
                              "description": "Severity of the provisioning issue.",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Warning",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "ProvisioningIssueSeverity",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Warning",
                                    "description": "Warnings can cause connectivity issues after provisioning succeeds."
                                  },
                                  {
                                    "value": "Error",
                                    "description": "Errors will cause association provisioning to fail."
                                  }
                                ]
                              }
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the provisioning issue.",
                              "readOnly": true
                            },
                            "suggestedResourceIds": {
                              "type": "array",
                              "description": "ARM Ids of the resources that can be associated to the same perimeter to remediate the issue",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "x-ms-identifiers": []
                            },
                            "suggestedAccessRules": {
                              "type": "array",
                              "description": "Access rules that can be added to the perimeter to remediate the issue",
                              "readOnly": true,
                              "items": {
                                "type": "object",
                                "description": "Access rule.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the access rule.",
                                    "readOnly": true
                                  },
                                  "properties": {
                                    "x-ms-client-flatten": true,
                                    "description": "Access rule properties",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "direction": {
                                        "description": "Direction of the access rule.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Inbound",
                                          "Outbound"
                                        ],
                                        "x-ms-enum": {
                                          "name": "AccessRuleDirection",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Inbound",
                                              "description": "Traffic originates outside of network."
                                            },
                                            {
                                              "value": "Outbound",
                                              "description": "Traffic originates inside the network"
                                            }
                                          ]
                                        }
                                      },
                                      "addressPrefixes": {
                                        "type": "array",
                                        "description": "Address prefixes that are allowed access.",
                                        "readOnly": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "networkSecurityPerimeter": {
                    "description": "The Network Security Perimeter associated with this configuration.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure resource Id"
                      },
                      "perimeterGuid": {
                        "type": "string",
                        "description": "Guid of the Network Security Perimeter",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Regional location of the perimeter"
                      }
                    }
                  },
                  "resourceAssociation": {
                    "description": "The Resource Association.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the Resource Association"
                      },
                      "accessMode": {
                        "description": "The access mode",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "enforced",
                          "audit",
                          "learning"
                        ],
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "enforced",
                              "description": "Indicates that resource access is controlled by the NSP definition."
                            },
                            {
                              "value": "audit",
                              "description": "Dry run mode, where traffic is evaluated against NSP Rules, logged but not enforced."
                            },
                            {
                              "value": "learning",
                              "description": "Enables traffic evaluation to fall back to resource-specific firewall configurations."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "profile": {
                    "description": "Network Security Perimeter profile",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the resource",
                        "readOnly": true
                      },
                      "accessRulesVersion": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Access rules version number",
                        "readOnly": true
                      },
                      "accessRules": {
                        "type": "array",
                        "description": "Collection of access rules for the profile",
                        "readOnly": true,
                        "items": {
                          "type": "object",
                          "description": "Access rule.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the access rule.",
                              "readOnly": true
                            },
                            "properties": {
                              "x-ms-client-flatten": true,
                              "description": "Access rule properties",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "direction": {
                                  "description": "Direction of the access rule.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Inbound",
                                    "Outbound"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AccessRuleDirection",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Inbound",
                                        "description": "Traffic originates outside of network."
                                      },
                                      {
                                        "value": "Outbound",
                                        "description": "Traffic originates inside the network"
                                      }
                                    ]
                                  }
                                },
                                "addressPrefixes": {
                                  "type": "array",
                                  "description": "Address prefixes that are allowed access.",
                                  "readOnly": true,
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "diagnosticSettingsVersion": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Diagnostic settings version number",
                        "readOnly": true
                      },
                      "enabledLogCategories": {
                        "type": "array",
                        "description": "Collection of enabled log categories for the profile",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "x-ms-azure-resource": true
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationReconcileResult": {
      "type": "object",
      "description": "Result of network security perimeter configurations.",
      "properties": {
        "location": {
          "description": "The URL of the resource used to check the status of the asynchronous operation.",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "ResourceAssociation": {
      "type": "object",
      "description": "Properties that define a Resource Association.",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the Resource Association"
        },
        "accessMode": {
          "description": "The access mode",
          "readOnly": true,
          "type": "string",
          "enum": [
            "enforced",
            "audit",
            "learning"
          ],
          "x-ms-enum": {
            "name": "AccessMode",
            "modelAsString": true,
            "values": [
              {
                "value": "enforced",
                "description": "Indicates that resource access is controlled by the NSP definition."
              },
              {
                "value": "audit",
                "description": "Dry run mode, where traffic is evaluated against NSP Rules, logged but not enforced."
              },
              {
                "value": "learning",
                "description": "Enables traffic evaluation to fall back to resource-specific firewall configurations."
              }
            ]
          }
        }
      }
    },
    "PrivateLinkScopesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "name": {
          "type": "string",
          "description": "Azure resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true,
      "description": "An azure resource object"
    },
    "TagsResource": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkScope instance."
    },
    "HybridComputePrivateLinkScope": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "name": {
          "type": "string",
          "description": "Azure resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
              "type": "string",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccessType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                  },
                  {
                    "value": "Disabled",
                    "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                  },
                  {
                    "value": "SecuredByPerimeter",
                    "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                  }
                ]
              }
            },
            "provisioningState": {
              "type": "string",
              "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
              "readOnly": true
            },
            "privateLinkScopeId": {
              "readOnly": true,
              "description": "The Guid id of the private link scope.",
              "type": "string"
            },
            "privateEndpointConnections": {
              "readOnly": true,
              "description": "The collection of associated Private Endpoint Connections.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                "properties": {
                  "id": {
                    "description": "The ARM Resource Id of the Private Endpoint.",
                    "type": "string",
                    "readOnly": true
                  },
                  "name": {
                    "description": "The Name of the Private Endpoint.",
                    "type": "string",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure resource type"
                  },
                  "properties": {
                    "description": "The Private Endpoint Connection properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "Private endpoint which the connection belongs to.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Resource id of the private endpoint.",
                            "type": "string"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Connection state of the private endpoint connection.",
                        "type": "object",
                        "required": [
                          "status",
                          "description"
                        ],
                        "properties": {
                          "status": {
                            "description": "The private link service connection status.",
                            "type": "string"
                          },
                          "description": {
                            "description": "The private link service connection description.",
                            "type": "string"
                          },
                          "actionsRequired": {
                            "description": "The actions required for private link service connection.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "State of the private endpoint connection.",
                        "type": "string",
                        "readOnly": true
                      },
                      "groupIds": {
                        "description": "List of group IDs.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "description": "An Azure Arc PrivateLinkScope definition."
    },
    "PrivateLinkScopeValidationDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "publicNetworkAccess": {
          "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccessType",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
              },
              {
                "value": "Disabled",
                "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
              },
              {
                "value": "SecuredByPerimeter",
                "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
              }
            ]
          }
        },
        "connectionDetails": {
          "type": "array",
          "description": "List of Private Endpoint Connection details.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "Azure resource Id"
              },
              "privateIpAddress": {
                "type": "string",
                "readOnly": true,
                "description": "The private endpoint connection private ip address"
              },
              "linkIdentifier": {
                "type": "string",
                "readOnly": true,
                "description": "The private endpoint connection link identifier"
              },
              "groupId": {
                "type": "string",
                "readOnly": true,
                "description": "The private endpoint connection group id"
              },
              "memberName": {
                "type": "string",
                "readOnly": true,
                "description": "The private endpoint connection member name"
              }
            }
          }
        }
      }
    },
    "ConnectionDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "privateIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The private endpoint connection private ip address"
        },
        "linkIdentifier": {
          "type": "string",
          "readOnly": true,
          "description": "The private endpoint connection link identifier"
        },
        "groupId": {
          "type": "string",
          "readOnly": true,
          "description": "The private endpoint connection group id"
        },
        "memberName": {
          "type": "string",
          "readOnly": true,
          "description": "The private endpoint connection member name"
        }
      }
    },
    "HybridComputePrivateLinkScopeProperties": {
      "type": "object",
      "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
      "properties": {
        "publicNetworkAccess": {
          "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccessType",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
              },
              {
                "value": "Disabled",
                "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
              },
              {
                "value": "SecuredByPerimeter",
                "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
              }
            ]
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
          "readOnly": true
        },
        "privateLinkScopeId": {
          "readOnly": true,
          "description": "The Guid id of the private link scope.",
          "type": "string"
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "description": "The collection of associated Private Endpoint Connections.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
            "properties": {
              "id": {
                "description": "The ARM Resource Id of the Private Endpoint.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The Name of the Private Endpoint.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "Azure resource type"
              },
              "properties": {
                "description": "The Private Endpoint Connection properties.",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "Private endpoint which the connection belongs to.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Resource id of the private endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Connection state of the private endpoint connection.",
                    "type": "object",
                    "required": [
                      "status",
                      "description"
                    ],
                    "properties": {
                      "status": {
                        "description": "The private link service connection status.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The private link service connection description.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "The actions required for private link service connection.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "State of the private endpoint connection.",
                    "type": "string",
                    "readOnly": true
                  },
                  "groupIds": {
                    "description": "List of group IDs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "HybridComputePrivateLinkScopeListResult": {
      "type": "object",
      "description": "Describes the list of Azure Arc PrivateLinkScope resources.",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Azure Arc PrivateLinkScope definitions.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "Azure resource Id"
              },
              "name": {
                "type": "string",
                "description": "Azure resource name",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "Azure resource type"
              },
              "location": {
                "type": "string",
                "description": "Resource location",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags"
              },
              "properties": {
                "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
                "type": "object",
                "properties": {
                  "publicNetworkAccess": {
                    "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
                    "type": "string",
                    "default": "Disabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PublicNetworkAccessType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
                        },
                        {
                          "value": "Disabled",
                          "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
                        },
                        {
                          "value": "SecuredByPerimeter",
                          "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.",
                    "readOnly": true
                  },
                  "privateLinkScopeId": {
                    "readOnly": true,
                    "description": "The Guid id of the private link scope.",
                    "type": "string"
                  },
                  "privateEndpointConnections": {
                    "readOnly": true,
                    "description": "The collection of associated Private Endpoint Connections.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
                      "properties": {
                        "id": {
                          "description": "The ARM Resource Id of the Private Endpoint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "The Name of the Private Endpoint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Azure resource type"
                        },
                        "properties": {
                          "description": "The Private Endpoint Connection properties.",
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "Private endpoint which the connection belongs to.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Resource id of the private endpoint.",
                                  "type": "string"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Connection state of the private endpoint connection.",
                              "type": "object",
                              "required": [
                                "status",
                                "description"
                              ],
                              "properties": {
                                "status": {
                                  "description": "The private link service connection status.",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "The private link service connection description.",
                                  "type": "string"
                                },
                                "actionsRequired": {
                                  "description": "The actions required for private link service connection.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "State of the private endpoint connection.",
                              "type": "string",
                              "readOnly": true
                            },
                            "groupIds": {
                              "description": "List of group IDs.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "description": "An Azure Arc PrivateLinkScope definition."
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to get the next set of Azure Arc PrivateLinkScope definitions if too many PrivateLinkScopes where returned in the result set."
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "A private link resource",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "groupId": {
                    "description": "The private link resource group id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "description": "The private link resource required member names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "description": "Required DNS zone names of the the private link resource.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "groupId": {
              "description": "The private link resource group id.",
              "type": "string",
              "readOnly": true
            },
            "requiredMembers": {
              "description": "The private link resource required member names.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "requiredZoneNames": {
              "description": "Required DNS zone names of the the private link resource.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "description": "Required DNS zone names of the the private link resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnectionDataModel": {
      "type": "object",
      "description": "The Data Model for a Private Endpoint Connection associated with a Private Link Scope",
      "properties": {
        "id": {
          "description": "The ARM Resource Id of the Private Endpoint.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The Name of the Private Endpoint.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "properties": {
          "description": "The Private Endpoint Connection properties.",
          "type": "object",
          "properties": {
            "privateEndpoint": {
              "description": "Private endpoint which the connection belongs to.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource id of the private endpoint.",
                  "type": "string"
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Connection state of the private endpoint connection.",
              "type": "object",
              "required": [
                "status",
                "description"
              ],
              "properties": {
                "status": {
                  "description": "The private link service connection status.",
                  "type": "string"
                },
                "description": {
                  "description": "The private link service connection description.",
                  "type": "string"
                },
                "actionsRequired": {
                  "description": "The actions required for private link service connection.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "provisioningState": {
              "description": "State of the private endpoint connection.",
              "type": "string",
              "readOnly": true
            },
            "groupIds": {
              "description": "List of group IDs.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of a private endpoint connection.",
      "properties": {
        "privateEndpoint": {
          "description": "Private endpoint which the connection belongs to.",
          "type": "object",
          "properties": {
            "id": {
              "description": "Resource id of the private endpoint.",
              "type": "string"
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "Connection state of the private endpoint connection.",
          "type": "object",
          "required": [
            "status",
            "description"
          ],
          "properties": {
            "status": {
              "description": "The private link service connection status.",
              "type": "string"
            },
            "description": {
              "description": "The private link service connection description.",
              "type": "string"
            },
            "actionsRequired": {
              "description": "The actions required for private link service connection.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "provisioningState": {
          "description": "State of the private endpoint connection.",
          "type": "string",
          "readOnly": true
        },
        "groupIds": {
          "description": "List of group IDs.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateEndpointProperty": {
      "type": "object",
      "description": "Private endpoint which the connection belongs to.",
      "properties": {
        "id": {
          "description": "Resource id of the private endpoint.",
          "type": "string"
        }
      }
    },
    "PrivateLinkServiceConnectionStateProperty": {
      "type": "object",
      "description": "State of the private endpoint connection.",
      "required": [
        "status",
        "description"
      ],
      "properties": {
        "status": {
          "description": "The private link service connection status.",
          "type": "string"
        },
        "description": {
          "description": "The private link service connection description.",
          "type": "string"
        },
        "actionsRequired": {
          "description": "The actions required for private link service connection.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "A private endpoint connection",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "privateEndpoint": {
              "description": "Private endpoint which the connection belongs to.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource id of the private endpoint.",
                  "type": "string"
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Connection state of the private endpoint connection.",
              "type": "object",
              "required": [
                "status",
                "description"
              ],
              "properties": {
                "status": {
                  "description": "The private link service connection status.",
                  "type": "string"
                },
                "description": {
                  "description": "The private link service connection description.",
                  "type": "string"
                },
                "actionsRequired": {
                  "description": "The actions required for private link service connection.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "provisioningState": {
              "description": "State of the private endpoint connection.",
              "type": "string",
              "readOnly": true
            },
            "groupIds": {
              "description": "List of group IDs.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "A list of private endpoint connections.",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "A private endpoint connection",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "Private endpoint which the connection belongs to.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Resource id of the private endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Connection state of the private endpoint connection.",
                    "type": "object",
                    "required": [
                      "status",
                      "description"
                    ],
                    "properties": {
                      "status": {
                        "description": "The private link service connection status.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The private link service connection description.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "The actions required for private link service connection.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "State of the private endpoint connection.",
                    "type": "string",
                    "readOnly": true
                  },
                  "groupIds": {
                    "description": "List of group IDs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PublicNetworkAccessType": {
      "type": "string",
      "description": "The network access policy to determine if Azure Arc agents can use public Azure Arc service endpoints. Defaults to disabled (access to Azure Arc services only via private link).",
      "default": "Disabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccessType",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled",
            "description": "Allows Azure Arc agents to communicate with Azure Arc services over both public (internet) and private endpoints."
          },
          {
            "value": "Disabled",
            "description": "Does not allow Azure Arc agents to communicate with Azure Arc services over public (internet) endpoints. The agents must use the private link."
          },
          {
            "value": "SecuredByPerimeter",
            "description": "Azure Arc agent communication with Azure Arc services over public (internet) is enforced by Network Security Perimeter (NSP)"
          }
        ]
      }
    }
  },
  "parameters": {
    "machineNameParameter": {
      "name": "machineName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the hybrid machine.",
      "x-ms-parameter-location": "method"
    },
    "licenseProfileNameParameter": {
      "name": "licenseProfileName",
      "in": "path",
      "description": "The name of the license profile.",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "enum": [
        "default"
      ],
      "x-ms-parameter-location": "method",
      "x-ms-enum": {
        "name": "LicenseProfileName",
        "modelAsString": false
      }
    },
    "licenseNameParameter": {
      "name": "licenseName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the license.",
      "x-ms-parameter-location": "method"
    },
    "gatewayNameParameter": {
      "name": "gatewayName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the Gateway.",
      "x-ms-parameter-location": "method"
    },
    "runCommandNameParameter": {
      "name": "runCommandName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the run command.",
      "x-ms-parameter-location": "method"
    },
    "baseProviderParameter": {
      "name": "baseProvider",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the base Resource Provider.",
      "x-ms-parameter-location": "method"
    },
    "baseResourceTypeParameter": {
      "name": "baseResourceType",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the base Resource Type.",
      "x-ms-parameter-location": "method"
    },
    "baseResourceNameParameter": {
      "name": "baseResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the base resource.",
      "x-ms-parameter-location": "method"
    },
    "settingsResourceNameParameter": {
      "name": "settingsResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "default",
      "description": "The name of the settings resource.",
      "x-ms-parameter-location": "method"
    },
    "PrivateLinkScopeName": {
      "name": "scopeName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Azure Arc PrivateLinkScope resource.",
      "x-ms-parameter-location": "method",
      "pattern": "[a-zA-Z0-9-_\\.]+"
    },
    "PrivateLinkScopeId": {
      "name": "privateLinkScopeId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The id (Guid) of the Azure Arc PrivateLinkScope resource.",
      "x-ms-parameter-location": "method"
    },
    "GroupNameParameter": {
      "name": "groupName",
      "in": "path",
      "description": "The name of the private link resource.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The location of the target resource.",
      "minLength": 1
    },
    "MachineNameParameter": {
      "name": "machineName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the target machine to get the private link scope validation details for.",
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9-_\\.]{1,54}$",
      "x-ms-parameter-location": "method"
    },
    "ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkConfigurationScopeId": {
      "name": "scopeId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The id (Guid) of the Azure Arc Network Configuration Scope resource.",
      "x-ms-parameter-location": "method"
    },
    "PerimeterName": {
      "name": "perimeterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name, in the format {perimeterGuid}.{associationName}, of the Network Security Perimeter resource.",
      "x-ms-parameter-location": "method",
      "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[.]{1}.+$"
    }
  }
}