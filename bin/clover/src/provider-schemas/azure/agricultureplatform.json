{
  "swagger": "2.0",
  "info": {
    "title": "Azure agricultureplatform",
    "version": "2024-06-01-preview-preview",
    "description": "Azure agricultureplatform service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.AgriculturePlatform/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgriculturePlatform/agriServices": {
      "get": {
        "operationId": "AgriService_ListBySubscription",
        "tags": [
          "AgriService"
        ],
        "description": "List AgriServiceResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a AgriServiceResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The AgriServiceResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is being provisioned"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource create request has been accepted"
                                }
                              ]
                            }
                          },
                          "config": {
                            "description": "Config of the AgriService instance.",
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "instanceUri": {
                                "type": "string",
                                "description": "Instance URI of the AgriService instance.",
                                "minLength": 2,
                                "maxLength": 256,
                                "readOnly": true
                              },
                              "version": {
                                "type": "string",
                                "description": "Version of AgriService instance.",
                                "minLength": 2,
                                "maxLength": 256,
                                "readOnly": true
                              },
                              "appServiceResourceId": {
                                "type": "string",
                                "description": "App service resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              },
                              "cosmosDbResourceId": {
                                "type": "string",
                                "description": "Cosmos Db resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              },
                              "storageAccountResourceId": {
                                "type": "string",
                                "description": "Storage account resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              },
                              "keyVaultResourceId": {
                                "type": "string",
                                "description": "Key vault resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              },
                              "redisCacheResourceId": {
                                "type": "string",
                                "description": "Redis cache resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              }
                            }
                          },
                          "managedOnBehalfOfConfiguration": {
                            "description": "Managed On Behalf Of Configuration.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "moboBrokerResources": {
                                "type": "array",
                                "description": "Associated MoboBrokerResources.",
                                "items": {
                                  "type": "object",
                                  "description": "MoboBroker resource.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "moboBrokerResources"
                            ]
                          },
                          "dataConnectorCredentials": {
                            "type": "array",
                            "description": "Data connector credentials of AgriService instance.",
                            "items": {
                              "type": "object",
                              "description": "Mapping of data connector credentials.",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "The key representing the credential."
                                },
                                "value": {
                                  "description": "The data connector credential value.",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "description": "Type of credential.",
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ],
                                      "type": "string",
                                      "enum": [
                                        "OAuthClientCredentials",
                                        "ApiKeyAuthCredentials"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AuthCredentialsKind",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "OAuthClientCredentials",
                                            "value": "OAuthClientCredentials",
                                            "description": "OAuth Client Credential type"
                                          },
                                          {
                                            "name": "ApiKeyAuthCredentials",
                                            "value": "ApiKeyAuthCredentials",
                                            "description": "API Key Auth Credential type"
                                          }
                                        ]
                                      }
                                    },
                                    "clientId": {
                                      "type": "string",
                                      "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "keyVaultUri": {
                                      "type": "string",
                                      "description": "Uri of the key vault",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "keyName": {
                                      "type": "string",
                                      "description": "Name of the key vault key.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "keyVersion": {
                                      "type": "string",
                                      "description": "Version of the key vault key.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    }
                                  }
                                }
                              },
                              "required": [
                                "key",
                                "value"
                              ]
                            },
                            "x-ms-identifiers": [
                              "key"
                            ],
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ]
                          },
                          "installedSolutions": {
                            "type": "array",
                            "description": "AgriService installed solutions.",
                            "items": {
                              "type": "object",
                              "description": "Mapping of installed solutions.",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "The key representing the installed solution."
                                },
                                "value": {
                                  "description": "The installed solution value.",
                                  "type": "object",
                                  "properties": {
                                    "applicationName": {
                                      "type": "string",
                                      "description": "Application name of the solution.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "partnerId": {
                                      "type": "string",
                                      "description": "Partner Id.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "marketPlacePublisherId": {
                                      "type": "string",
                                      "description": "Marketplace publisher Id.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "saasSubscriptionId": {
                                      "type": "string",
                                      "description": "Saas subscription Id.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "saasSubscriptionName": {
                                      "type": "string",
                                      "description": "Saas subscription name.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "planId": {
                                      "type": "string",
                                      "description": "Plan Id.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    }
                                  }
                                }
                              },
                              "required": [
                                "key",
                                "value"
                              ]
                            },
                            "x-ms-identifiers": [
                              "key"
                            ],
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ]
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "sku": {
                        "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgriculturePlatform/agriServices": {
      "get": {
        "operationId": "AgriService_ListByResourceGroup",
        "tags": [
          "AgriService"
        ],
        "description": "List AgriServiceResource resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a AgriServiceResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The AgriServiceResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is being provisioned"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource create request has been accepted"
                                }
                              ]
                            }
                          },
                          "config": {
                            "description": "Config of the AgriService instance.",
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "instanceUri": {
                                "type": "string",
                                "description": "Instance URI of the AgriService instance.",
                                "minLength": 2,
                                "maxLength": 256,
                                "readOnly": true
                              },
                              "version": {
                                "type": "string",
                                "description": "Version of AgriService instance.",
                                "minLength": 2,
                                "maxLength": 256,
                                "readOnly": true
                              },
                              "appServiceResourceId": {
                                "type": "string",
                                "description": "App service resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              },
                              "cosmosDbResourceId": {
                                "type": "string",
                                "description": "Cosmos Db resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              },
                              "storageAccountResourceId": {
                                "type": "string",
                                "description": "Storage account resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              },
                              "keyVaultResourceId": {
                                "type": "string",
                                "description": "Key vault resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              },
                              "redisCacheResourceId": {
                                "type": "string",
                                "description": "Redis cache resource Id.",
                                "minLength": 2,
                                "readOnly": true
                              }
                            }
                          },
                          "managedOnBehalfOfConfiguration": {
                            "description": "Managed On Behalf Of Configuration.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "moboBrokerResources": {
                                "type": "array",
                                "description": "Associated MoboBrokerResources.",
                                "items": {
                                  "type": "object",
                                  "description": "MoboBroker resource.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "moboBrokerResources"
                            ]
                          },
                          "dataConnectorCredentials": {
                            "type": "array",
                            "description": "Data connector credentials of AgriService instance.",
                            "items": {
                              "type": "object",
                              "description": "Mapping of data connector credentials.",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "The key representing the credential."
                                },
                                "value": {
                                  "description": "The data connector credential value.",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "description": "Type of credential.",
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ],
                                      "type": "string",
                                      "enum": [
                                        "OAuthClientCredentials",
                                        "ApiKeyAuthCredentials"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AuthCredentialsKind",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "OAuthClientCredentials",
                                            "value": "OAuthClientCredentials",
                                            "description": "OAuth Client Credential type"
                                          },
                                          {
                                            "name": "ApiKeyAuthCredentials",
                                            "value": "ApiKeyAuthCredentials",
                                            "description": "API Key Auth Credential type"
                                          }
                                        ]
                                      }
                                    },
                                    "clientId": {
                                      "type": "string",
                                      "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "keyVaultUri": {
                                      "type": "string",
                                      "description": "Uri of the key vault",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "keyName": {
                                      "type": "string",
                                      "description": "Name of the key vault key.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "keyVersion": {
                                      "type": "string",
                                      "description": "Version of the key vault key.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    }
                                  }
                                }
                              },
                              "required": [
                                "key",
                                "value"
                              ]
                            },
                            "x-ms-identifiers": [
                              "key"
                            ],
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ]
                          },
                          "installedSolutions": {
                            "type": "array",
                            "description": "AgriService installed solutions.",
                            "items": {
                              "type": "object",
                              "description": "Mapping of installed solutions.",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "The key representing the installed solution."
                                },
                                "value": {
                                  "description": "The installed solution value.",
                                  "type": "object",
                                  "properties": {
                                    "applicationName": {
                                      "type": "string",
                                      "description": "Application name of the solution.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "partnerId": {
                                      "type": "string",
                                      "description": "Partner Id.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "marketPlacePublisherId": {
                                      "type": "string",
                                      "description": "Marketplace publisher Id.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "saasSubscriptionId": {
                                      "type": "string",
                                      "description": "Saas subscription Id.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "saasSubscriptionName": {
                                      "type": "string",
                                      "description": "Saas subscription name.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    },
                                    "planId": {
                                      "type": "string",
                                      "description": "Plan Id.",
                                      "minLength": 2,
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ]
                                    }
                                  }
                                }
                              },
                              "required": [
                                "key",
                                "value"
                              ]
                            },
                            "x-ms-identifiers": [
                              "key"
                            ],
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ]
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "sku": {
                        "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgriculturePlatform/agriServices/{agriServiceResourceName}": {
      "get": {
        "operationId": "AgriService_Get",
        "tags": [
          "AgriService"
        ],
        "description": "Get a AgriServiceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agriServiceResourceName",
            "in": "path",
            "description": "The name of the AgriService resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "config": {
                      "description": "Config of the AgriService instance.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "instanceUri": {
                          "type": "string",
                          "description": "Instance URI of the AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "appServiceResourceId": {
                          "type": "string",
                          "description": "App service resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "cosmosDbResourceId": {
                          "type": "string",
                          "description": "Cosmos Db resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "storageAccountResourceId": {
                          "type": "string",
                          "description": "Storage account resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "keyVaultResourceId": {
                          "type": "string",
                          "description": "Key vault resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "redisCacheResourceId": {
                          "type": "string",
                          "description": "Redis cache resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        }
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Associated MoboBrokerResources.",
                          "items": {
                            "type": "object",
                            "description": "MoboBroker resource.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "moboBrokerResources"
                      ]
                    },
                    "dataConnectorCredentials": {
                      "type": "array",
                      "description": "Data connector credentials of AgriService instance.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of data connector credentials.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the credential."
                          },
                          "value": {
                            "description": "The data connector credential value.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "Type of credential.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "OAuthClientCredentials",
                                  "ApiKeyAuthCredentials"
                                ],
                                "x-ms-enum": {
                                  "name": "AuthCredentialsKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OAuthClientCredentials",
                                      "value": "OAuthClientCredentials",
                                      "description": "OAuth Client Credential type"
                                    },
                                    {
                                      "name": "ApiKeyAuthCredentials",
                                      "value": "ApiKeyAuthCredentials",
                                      "description": "API Key Auth Credential type"
                                    }
                                  ]
                                }
                              },
                              "clientId": {
                                "type": "string",
                                "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of the key vault",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyName": {
                                "type": "string",
                                "description": "Name of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "installedSolutions": {
                      "type": "array",
                      "description": "AgriService installed solutions.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of installed solutions.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the installed solution."
                          },
                          "value": {
                            "description": "The installed solution value.",
                            "type": "object",
                            "properties": {
                              "applicationName": {
                                "type": "string",
                                "description": "Application name of the solution.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "partnerId": {
                                "type": "string",
                                "description": "Partner Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "marketPlacePublisherId": {
                                "type": "string",
                                "description": "Marketplace publisher Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionId": {
                                "type": "string",
                                "description": "Saas subscription Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionName": {
                                "type": "string",
                                "description": "Saas subscription name.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "planId": {
                                "type": "string",
                                "description": "Plan Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "AgriService_CreateOrUpdate",
        "tags": [
          "AgriService"
        ],
        "description": "Create a AgriServiceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agriServiceResourceName",
            "in": "path",
            "description": "The name of the AgriService resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "config": {
                      "description": "Config of the AgriService instance.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "instanceUri": {
                          "type": "string",
                          "description": "Instance URI of the AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "appServiceResourceId": {
                          "type": "string",
                          "description": "App service resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "cosmosDbResourceId": {
                          "type": "string",
                          "description": "Cosmos Db resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "storageAccountResourceId": {
                          "type": "string",
                          "description": "Storage account resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "keyVaultResourceId": {
                          "type": "string",
                          "description": "Key vault resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "redisCacheResourceId": {
                          "type": "string",
                          "description": "Redis cache resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        }
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Associated MoboBrokerResources.",
                          "items": {
                            "type": "object",
                            "description": "MoboBroker resource.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "moboBrokerResources"
                      ]
                    },
                    "dataConnectorCredentials": {
                      "type": "array",
                      "description": "Data connector credentials of AgriService instance.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of data connector credentials.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the credential."
                          },
                          "value": {
                            "description": "The data connector credential value.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "Type of credential.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "OAuthClientCredentials",
                                  "ApiKeyAuthCredentials"
                                ],
                                "x-ms-enum": {
                                  "name": "AuthCredentialsKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OAuthClientCredentials",
                                      "value": "OAuthClientCredentials",
                                      "description": "OAuth Client Credential type"
                                    },
                                    {
                                      "name": "ApiKeyAuthCredentials",
                                      "value": "ApiKeyAuthCredentials",
                                      "description": "API Key Auth Credential type"
                                    }
                                  ]
                                }
                              },
                              "clientId": {
                                "type": "string",
                                "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of the key vault",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyName": {
                                "type": "string",
                                "description": "Name of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "installedSolutions": {
                      "type": "array",
                      "description": "AgriService installed solutions.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of installed solutions.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the installed solution."
                          },
                          "value": {
                            "description": "The installed solution value.",
                            "type": "object",
                            "properties": {
                              "applicationName": {
                                "type": "string",
                                "description": "Application name of the solution.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "partnerId": {
                                "type": "string",
                                "description": "Partner Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "marketPlacePublisherId": {
                                "type": "string",
                                "description": "Marketplace publisher Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionId": {
                                "type": "string",
                                "description": "Saas subscription Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionName": {
                                "type": "string",
                                "description": "Saas subscription name.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "planId": {
                                "type": "string",
                                "description": "Plan Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AgriServiceResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "config": {
                      "description": "Config of the AgriService instance.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "instanceUri": {
                          "type": "string",
                          "description": "Instance URI of the AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "appServiceResourceId": {
                          "type": "string",
                          "description": "App service resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "cosmosDbResourceId": {
                          "type": "string",
                          "description": "Cosmos Db resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "storageAccountResourceId": {
                          "type": "string",
                          "description": "Storage account resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "keyVaultResourceId": {
                          "type": "string",
                          "description": "Key vault resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "redisCacheResourceId": {
                          "type": "string",
                          "description": "Redis cache resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        }
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Associated MoboBrokerResources.",
                          "items": {
                            "type": "object",
                            "description": "MoboBroker resource.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "moboBrokerResources"
                      ]
                    },
                    "dataConnectorCredentials": {
                      "type": "array",
                      "description": "Data connector credentials of AgriService instance.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of data connector credentials.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the credential."
                          },
                          "value": {
                            "description": "The data connector credential value.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "Type of credential.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "OAuthClientCredentials",
                                  "ApiKeyAuthCredentials"
                                ],
                                "x-ms-enum": {
                                  "name": "AuthCredentialsKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OAuthClientCredentials",
                                      "value": "OAuthClientCredentials",
                                      "description": "OAuth Client Credential type"
                                    },
                                    {
                                      "name": "ApiKeyAuthCredentials",
                                      "value": "ApiKeyAuthCredentials",
                                      "description": "API Key Auth Credential type"
                                    }
                                  ]
                                }
                              },
                              "clientId": {
                                "type": "string",
                                "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of the key vault",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyName": {
                                "type": "string",
                                "description": "Name of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "installedSolutions": {
                      "type": "array",
                      "description": "AgriService installed solutions.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of installed solutions.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the installed solution."
                          },
                          "value": {
                            "description": "The installed solution value.",
                            "type": "object",
                            "properties": {
                              "applicationName": {
                                "type": "string",
                                "description": "Application name of the solution.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "partnerId": {
                                "type": "string",
                                "description": "Partner Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "marketPlacePublisherId": {
                                "type": "string",
                                "description": "Marketplace publisher Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionId": {
                                "type": "string",
                                "description": "Saas subscription Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionName": {
                                "type": "string",
                                "description": "Saas subscription name.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "planId": {
                                "type": "string",
                                "description": "Plan Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'AgriServiceResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "config": {
                      "description": "Config of the AgriService instance.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "instanceUri": {
                          "type": "string",
                          "description": "Instance URI of the AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "appServiceResourceId": {
                          "type": "string",
                          "description": "App service resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "cosmosDbResourceId": {
                          "type": "string",
                          "description": "Cosmos Db resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "storageAccountResourceId": {
                          "type": "string",
                          "description": "Storage account resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "keyVaultResourceId": {
                          "type": "string",
                          "description": "Key vault resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "redisCacheResourceId": {
                          "type": "string",
                          "description": "Redis cache resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        }
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Associated MoboBrokerResources.",
                          "items": {
                            "type": "object",
                            "description": "MoboBroker resource.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "moboBrokerResources"
                      ]
                    },
                    "dataConnectorCredentials": {
                      "type": "array",
                      "description": "Data connector credentials of AgriService instance.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of data connector credentials.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the credential."
                          },
                          "value": {
                            "description": "The data connector credential value.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "Type of credential.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "OAuthClientCredentials",
                                  "ApiKeyAuthCredentials"
                                ],
                                "x-ms-enum": {
                                  "name": "AuthCredentialsKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OAuthClientCredentials",
                                      "value": "OAuthClientCredentials",
                                      "description": "OAuth Client Credential type"
                                    },
                                    {
                                      "name": "ApiKeyAuthCredentials",
                                      "value": "ApiKeyAuthCredentials",
                                      "description": "API Key Auth Credential type"
                                    }
                                  ]
                                }
                              },
                              "clientId": {
                                "type": "string",
                                "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of the key vault",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyName": {
                                "type": "string",
                                "description": "Name of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "installedSolutions": {
                      "type": "array",
                      "description": "AgriService installed solutions.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of installed solutions.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the installed solution."
                          },
                          "value": {
                            "description": "The installed solution value.",
                            "type": "object",
                            "properties": {
                              "applicationName": {
                                "type": "string",
                                "description": "Application name of the solution.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "partnerId": {
                                "type": "string",
                                "description": "Partner Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "marketPlacePublisherId": {
                                "type": "string",
                                "description": "Marketplace publisher Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionId": {
                                "type": "string",
                                "description": "Saas subscription Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionName": {
                                "type": "string",
                                "description": "Saas subscription name.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "planId": {
                                "type": "string",
                                "description": "Plan Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "AgriService_Update",
        "tags": [
          "AgriService"
        ],
        "description": "Update a AgriServiceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agriServiceResourceName",
            "in": "path",
            "description": "The name of the AgriService resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the AgriServiceResource.",
              "properties": {
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The identities assigned to this resource by the user.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "config": {
                      "description": "Config of the AgriService instance.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "instanceUri": {
                          "type": "string",
                          "description": "Instance URI of the AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "appServiceResourceId": {
                          "type": "string",
                          "description": "App service resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "cosmosDbResourceId": {
                          "type": "string",
                          "description": "Cosmos Db resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "storageAccountResourceId": {
                          "type": "string",
                          "description": "Storage account resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "keyVaultResourceId": {
                          "type": "string",
                          "description": "Key vault resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "redisCacheResourceId": {
                          "type": "string",
                          "description": "Redis cache resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        }
                      }
                    },
                    "dataConnectorCredentials": {
                      "type": "array",
                      "description": "Data connector credentials of AgriService instance.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of data connector credentials.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the credential."
                          },
                          "value": {
                            "description": "The data connector credential value.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "Type of credential.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "OAuthClientCredentials",
                                  "ApiKeyAuthCredentials"
                                ],
                                "x-ms-enum": {
                                  "name": "AuthCredentialsKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OAuthClientCredentials",
                                      "value": "OAuthClientCredentials",
                                      "description": "OAuth Client Credential type"
                                    },
                                    {
                                      "name": "ApiKeyAuthCredentials",
                                      "value": "ApiKeyAuthCredentials",
                                      "description": "API Key Auth Credential type"
                                    }
                                  ]
                                }
                              },
                              "clientId": {
                                "type": "string",
                                "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of the key vault",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyName": {
                                "type": "string",
                                "description": "Name of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "installedSolutions": {
                      "type": "array",
                      "description": "AgriService installed solutions.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of installed solutions.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the installed solution."
                          },
                          "value": {
                            "description": "The installed solution value.",
                            "type": "object",
                            "properties": {
                              "applicationName": {
                                "type": "string",
                                "description": "Application name of the solution.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "partnerId": {
                                "type": "string",
                                "description": "Partner Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "marketPlacePublisherId": {
                                "type": "string",
                                "description": "Marketplace publisher Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionId": {
                                "type": "string",
                                "description": "Saas subscription Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionName": {
                                "type": "string",
                                "description": "Saas subscription name.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "planId": {
                                "type": "string",
                                "description": "Plan Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "config": {
                      "description": "Config of the AgriService instance.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "instanceUri": {
                          "type": "string",
                          "description": "Instance URI of the AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of AgriService instance.",
                          "minLength": 2,
                          "maxLength": 256,
                          "readOnly": true
                        },
                        "appServiceResourceId": {
                          "type": "string",
                          "description": "App service resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "cosmosDbResourceId": {
                          "type": "string",
                          "description": "Cosmos Db resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "storageAccountResourceId": {
                          "type": "string",
                          "description": "Storage account resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "keyVaultResourceId": {
                          "type": "string",
                          "description": "Key vault resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        },
                        "redisCacheResourceId": {
                          "type": "string",
                          "description": "Redis cache resource Id.",
                          "minLength": 2,
                          "readOnly": true
                        }
                      }
                    },
                    "managedOnBehalfOfConfiguration": {
                      "description": "Managed On Behalf Of Configuration.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "moboBrokerResources": {
                          "type": "array",
                          "description": "Associated MoboBrokerResources.",
                          "items": {
                            "type": "object",
                            "description": "MoboBroker resource.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "moboBrokerResources"
                      ]
                    },
                    "dataConnectorCredentials": {
                      "type": "array",
                      "description": "Data connector credentials of AgriService instance.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of data connector credentials.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the credential."
                          },
                          "value": {
                            "description": "The data connector credential value.",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "description": "Type of credential.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "OAuthClientCredentials",
                                  "ApiKeyAuthCredentials"
                                ],
                                "x-ms-enum": {
                                  "name": "AuthCredentialsKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OAuthClientCredentials",
                                      "value": "OAuthClientCredentials",
                                      "description": "OAuth Client Credential type"
                                    },
                                    {
                                      "name": "ApiKeyAuthCredentials",
                                      "value": "ApiKeyAuthCredentials",
                                      "description": "API Key Auth Credential type"
                                    }
                                  ]
                                }
                              },
                              "clientId": {
                                "type": "string",
                                "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of the key vault",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyName": {
                                "type": "string",
                                "description": "Name of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of the key vault key.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "installedSolutions": {
                      "type": "array",
                      "description": "AgriService installed solutions.",
                      "items": {
                        "type": "object",
                        "description": "Mapping of installed solutions.",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key representing the installed solution."
                          },
                          "value": {
                            "description": "The installed solution value.",
                            "type": "object",
                            "properties": {
                              "applicationName": {
                                "type": "string",
                                "description": "Application name of the solution.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "partnerId": {
                                "type": "string",
                                "description": "Partner Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "marketPlacePublisherId": {
                                "type": "string",
                                "description": "Marketplace publisher Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionId": {
                                "type": "string",
                                "description": "Saas subscription Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "saasSubscriptionName": {
                                "type": "string",
                                "description": "Saas subscription name.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "planId": {
                                "type": "string",
                                "description": "Plan Id.",
                                "minLength": 2,
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": [
                        "key"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "AgriService_Delete",
        "tags": [
          "AgriService"
        ],
        "description": "Delete a AgriServiceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agriServiceResourceName",
            "in": "path",
            "description": "The name of the AgriService resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgriculturePlatform/agriServices/{agriServiceResourceName}/listAvailableSolutions": {
      "post": {
        "operationId": "AgriService_ListAvailableSolutions",
        "tags": [
          "AgriService"
        ],
        "description": "Returns the list of available agri solutions.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agriServiceResourceName",
            "in": "path",
            "description": "The name of the AgriService resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of available agri solutions.",
              "properties": {
                "solutions": {
                  "type": "array",
                  "description": "Agri solutions list.",
                  "items": {
                    "type": "object",
                    "description": "Data Manager for Agriculture solution.",
                    "properties": {
                      "partnerId": {
                        "type": "string",
                        "description": "Partner Id."
                      },
                      "solutionId": {
                        "type": "string",
                        "description": "Solution Id."
                      },
                      "partnerTenantId": {
                        "type": "string",
                        "description": "Partner tenant Id."
                      },
                      "dataAccessScopes": {
                        "type": "array",
                        "description": "Data access scopes.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "marketPlaceOfferDetails": {
                        "description": "Marketplace offer details.",
                        "type": "object",
                        "properties": {
                          "saasOfferId": {
                            "type": "string",
                            "description": "Saas offer Id."
                          },
                          "publisherId": {
                            "type": "string",
                            "description": "Publisher Id."
                          }
                        },
                        "required": [
                          "saasOfferId",
                          "publisherId"
                        ]
                      },
                      "saasApplicationId": {
                        "type": "string",
                        "description": "Saas application Id."
                      },
                      "accessAzureDataManagerForAgricultureApplicationId": {
                        "type": "string",
                        "description": "Entra application Id used to access azure data manager for agriculture instance."
                      },
                      "accessAzureDataManagerForAgricultureApplicationName": {
                        "type": "string",
                        "description": "Entra application name used to access azure data manager for agriculture instance."
                      },
                      "isValidateInput": {
                        "type": "boolean",
                        "description": "Whether solution inference will validate input."
                      }
                    },
                    "required": [
                      "partnerId",
                      "solutionId",
                      "partnerTenantId",
                      "dataAccessScopes",
                      "marketPlaceOfferDetails",
                      "saasApplicationId",
                      "accessAzureDataManagerForAgricultureApplicationId",
                      "accessAzureDataManagerForAgricultureApplicationName",
                      "isValidateInput"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              },
              "required": [
                "solutions"
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AgriServiceConfig": {
      "type": "object",
      "description": "Config of the AgriService resource instance.",
      "properties": {
        "instanceUri": {
          "type": "string",
          "description": "Instance URI of the AgriService instance.",
          "minLength": 2,
          "maxLength": 256,
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Version of AgriService instance.",
          "minLength": 2,
          "maxLength": 256,
          "readOnly": true
        },
        "appServiceResourceId": {
          "type": "string",
          "description": "App service resource Id.",
          "minLength": 2,
          "readOnly": true
        },
        "cosmosDbResourceId": {
          "type": "string",
          "description": "Cosmos Db resource Id.",
          "minLength": 2,
          "readOnly": true
        },
        "storageAccountResourceId": {
          "type": "string",
          "description": "Storage account resource Id.",
          "minLength": 2,
          "readOnly": true
        },
        "keyVaultResourceId": {
          "type": "string",
          "description": "Key vault resource Id.",
          "minLength": 2,
          "readOnly": true
        },
        "redisCacheResourceId": {
          "type": "string",
          "description": "Redis cache resource Id.",
          "minLength": 2,
          "readOnly": true
        }
      }
    },
    "AgriServiceResource": {
      "type": "object",
      "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            },
            "config": {
              "description": "Config of the AgriService instance.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ],
              "type": "object",
              "properties": {
                "instanceUri": {
                  "type": "string",
                  "description": "Instance URI of the AgriService instance.",
                  "minLength": 2,
                  "maxLength": 256,
                  "readOnly": true
                },
                "version": {
                  "type": "string",
                  "description": "Version of AgriService instance.",
                  "minLength": 2,
                  "maxLength": 256,
                  "readOnly": true
                },
                "appServiceResourceId": {
                  "type": "string",
                  "description": "App service resource Id.",
                  "minLength": 2,
                  "readOnly": true
                },
                "cosmosDbResourceId": {
                  "type": "string",
                  "description": "Cosmos Db resource Id.",
                  "minLength": 2,
                  "readOnly": true
                },
                "storageAccountResourceId": {
                  "type": "string",
                  "description": "Storage account resource Id.",
                  "minLength": 2,
                  "readOnly": true
                },
                "keyVaultResourceId": {
                  "type": "string",
                  "description": "Key vault resource Id.",
                  "minLength": 2,
                  "readOnly": true
                },
                "redisCacheResourceId": {
                  "type": "string",
                  "description": "Redis cache resource Id.",
                  "minLength": 2,
                  "readOnly": true
                }
              }
            },
            "managedOnBehalfOfConfiguration": {
              "description": "Managed On Behalf Of Configuration.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "moboBrokerResources": {
                  "type": "array",
                  "description": "Associated MoboBrokerResources.",
                  "items": {
                    "type": "object",
                    "description": "MoboBroker resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "readOnly": true
                }
              },
              "required": [
                "moboBrokerResources"
              ]
            },
            "dataConnectorCredentials": {
              "type": "array",
              "description": "Data connector credentials of AgriService instance.",
              "items": {
                "type": "object",
                "description": "Mapping of data connector credentials.",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key representing the credential."
                  },
                  "value": {
                    "description": "The data connector credential value.",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "description": "Type of credential.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "OAuthClientCredentials",
                          "ApiKeyAuthCredentials"
                        ],
                        "x-ms-enum": {
                          "name": "AuthCredentialsKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "OAuthClientCredentials",
                              "value": "OAuthClientCredentials",
                              "description": "OAuth Client Credential type"
                            },
                            {
                              "name": "ApiKeyAuthCredentials",
                              "value": "ApiKeyAuthCredentials",
                              "description": "API Key Auth Credential type"
                            }
                          ]
                        }
                      },
                      "clientId": {
                        "type": "string",
                        "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "keyVaultUri": {
                        "type": "string",
                        "description": "Uri of the key vault",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "keyName": {
                        "type": "string",
                        "description": "Name of the key vault key.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "keyVersion": {
                        "type": "string",
                        "description": "Version of the key vault key.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              },
              "x-ms-identifiers": [
                "key"
              ],
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "installedSolutions": {
              "type": "array",
              "description": "AgriService installed solutions.",
              "items": {
                "type": "object",
                "description": "Mapping of installed solutions.",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key representing the installed solution."
                  },
                  "value": {
                    "description": "The installed solution value.",
                    "type": "object",
                    "properties": {
                      "applicationName": {
                        "type": "string",
                        "description": "Application name of the solution.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "partnerId": {
                        "type": "string",
                        "description": "Partner Id.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "marketPlacePublisherId": {
                        "type": "string",
                        "description": "Marketplace publisher Id.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "saasSubscriptionId": {
                        "type": "string",
                        "description": "Saas subscription Id.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "saasSubscriptionName": {
                        "type": "string",
                        "description": "Saas subscription name.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "planId": {
                        "type": "string",
                        "description": "Plan Id.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              },
              "x-ms-identifiers": [
                "key"
              ],
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            }
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "sku": {
          "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        }
      }
    },
    "AgriServiceResourceListResult": {
      "type": "object",
      "description": "The response of a AgriServiceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AgriServiceResource items on this page",
          "items": {
            "type": "object",
            "description": "Schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is being provisioned"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource create request has been accepted"
                        }
                      ]
                    }
                  },
                  "config": {
                    "description": "Config of the AgriService instance.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "instanceUri": {
                        "type": "string",
                        "description": "Instance URI of the AgriService instance.",
                        "minLength": 2,
                        "maxLength": 256,
                        "readOnly": true
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of AgriService instance.",
                        "minLength": 2,
                        "maxLength": 256,
                        "readOnly": true
                      },
                      "appServiceResourceId": {
                        "type": "string",
                        "description": "App service resource Id.",
                        "minLength": 2,
                        "readOnly": true
                      },
                      "cosmosDbResourceId": {
                        "type": "string",
                        "description": "Cosmos Db resource Id.",
                        "minLength": 2,
                        "readOnly": true
                      },
                      "storageAccountResourceId": {
                        "type": "string",
                        "description": "Storage account resource Id.",
                        "minLength": 2,
                        "readOnly": true
                      },
                      "keyVaultResourceId": {
                        "type": "string",
                        "description": "Key vault resource Id.",
                        "minLength": 2,
                        "readOnly": true
                      },
                      "redisCacheResourceId": {
                        "type": "string",
                        "description": "Redis cache resource Id.",
                        "minLength": 2,
                        "readOnly": true
                      }
                    }
                  },
                  "managedOnBehalfOfConfiguration": {
                    "description": "Managed On Behalf Of Configuration.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "moboBrokerResources": {
                        "type": "array",
                        "description": "Associated MoboBrokerResources.",
                        "items": {
                          "type": "object",
                          "description": "MoboBroker resource.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "moboBrokerResources"
                    ]
                  },
                  "dataConnectorCredentials": {
                    "type": "array",
                    "description": "Data connector credentials of AgriService instance.",
                    "items": {
                      "type": "object",
                      "description": "Mapping of data connector credentials.",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The key representing the credential."
                        },
                        "value": {
                          "description": "The data connector credential value.",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "description": "Type of credential.",
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "OAuthClientCredentials",
                                "ApiKeyAuthCredentials"
                              ],
                              "x-ms-enum": {
                                "name": "AuthCredentialsKind",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "OAuthClientCredentials",
                                    "value": "OAuthClientCredentials",
                                    "description": "OAuth Client Credential type"
                                  },
                                  {
                                    "name": "ApiKeyAuthCredentials",
                                    "value": "ApiKeyAuthCredentials",
                                    "description": "API Key Auth Credential type"
                                  }
                                ]
                              }
                            },
                            "clientId": {
                              "type": "string",
                              "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "description": "Uri of the key vault",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            },
                            "keyName": {
                              "type": "string",
                              "description": "Name of the key vault key.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "Version of the key vault key.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "x-ms-identifiers": [
                      "key"
                    ],
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "installedSolutions": {
                    "type": "array",
                    "description": "AgriService installed solutions.",
                    "items": {
                      "type": "object",
                      "description": "Mapping of installed solutions.",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The key representing the installed solution."
                        },
                        "value": {
                          "description": "The installed solution value.",
                          "type": "object",
                          "properties": {
                            "applicationName": {
                              "type": "string",
                              "description": "Application name of the solution.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            },
                            "partnerId": {
                              "type": "string",
                              "description": "Partner Id.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            },
                            "marketPlacePublisherId": {
                              "type": "string",
                              "description": "Marketplace publisher Id.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            },
                            "saasSubscriptionId": {
                              "type": "string",
                              "description": "Saas subscription Id.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            },
                            "saasSubscriptionName": {
                              "type": "string",
                              "description": "Saas subscription name.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            },
                            "planId": {
                              "type": "string",
                              "description": "Plan Id.",
                              "minLength": 2,
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "x-ms-identifiers": [
                      "key"
                    ],
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  }
                }
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "sku": {
                "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                  },
                  "tier": {
                    "type": "string",
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                    "enum": [
                      "Free",
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": false
                    }
                  },
                  "size": {
                    "type": "string",
                    "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                  },
                  "family": {
                    "type": "string",
                    "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AgriServiceResourceProperties": {
      "type": "object",
      "description": "Details of the Agriculture AgriDataManager.",
      "properties": {
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        },
        "config": {
          "description": "Config of the AgriService instance.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "object",
          "properties": {
            "instanceUri": {
              "type": "string",
              "description": "Instance URI of the AgriService instance.",
              "minLength": 2,
              "maxLength": 256,
              "readOnly": true
            },
            "version": {
              "type": "string",
              "description": "Version of AgriService instance.",
              "minLength": 2,
              "maxLength": 256,
              "readOnly": true
            },
            "appServiceResourceId": {
              "type": "string",
              "description": "App service resource Id.",
              "minLength": 2,
              "readOnly": true
            },
            "cosmosDbResourceId": {
              "type": "string",
              "description": "Cosmos Db resource Id.",
              "minLength": 2,
              "readOnly": true
            },
            "storageAccountResourceId": {
              "type": "string",
              "description": "Storage account resource Id.",
              "minLength": 2,
              "readOnly": true
            },
            "keyVaultResourceId": {
              "type": "string",
              "description": "Key vault resource Id.",
              "minLength": 2,
              "readOnly": true
            },
            "redisCacheResourceId": {
              "type": "string",
              "description": "Redis cache resource Id.",
              "minLength": 2,
              "readOnly": true
            }
          }
        },
        "managedOnBehalfOfConfiguration": {
          "description": "Managed On Behalf Of Configuration.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "moboBrokerResources": {
              "type": "array",
              "description": "Associated MoboBrokerResources.",
              "items": {
                "type": "object",
                "description": "MoboBroker resource.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                    "readOnly": true
                  }
                },
                "required": [
                  "id"
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "moboBrokerResources"
          ]
        },
        "dataConnectorCredentials": {
          "type": "array",
          "description": "Data connector credentials of AgriService instance.",
          "items": {
            "type": "object",
            "description": "Mapping of data connector credentials.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The key representing the credential."
              },
              "value": {
                "description": "The data connector credential value.",
                "type": "object",
                "properties": {
                  "kind": {
                    "description": "Type of credential.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "OAuthClientCredentials",
                      "ApiKeyAuthCredentials"
                    ],
                    "x-ms-enum": {
                      "name": "AuthCredentialsKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "OAuthClientCredentials",
                          "value": "OAuthClientCredentials",
                          "description": "OAuth Client Credential type"
                        },
                        {
                          "name": "ApiKeyAuthCredentials",
                          "value": "ApiKeyAuthCredentials",
                          "description": "API Key Auth Credential type"
                        }
                      ]
                    }
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "keyVaultUri": {
                    "type": "string",
                    "description": "Uri of the key vault",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "keyName": {
                    "type": "string",
                    "description": "Name of the key vault key.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "keyVersion": {
                    "type": "string",
                    "description": "Version of the key vault key.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  }
                }
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "x-ms-identifiers": [
            "key"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "installedSolutions": {
          "type": "array",
          "description": "AgriService installed solutions.",
          "items": {
            "type": "object",
            "description": "Mapping of installed solutions.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The key representing the installed solution."
              },
              "value": {
                "description": "The installed solution value.",
                "type": "object",
                "properties": {
                  "applicationName": {
                    "type": "string",
                    "description": "Application name of the solution.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "partnerId": {
                    "type": "string",
                    "description": "Partner Id.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "marketPlacePublisherId": {
                    "type": "string",
                    "description": "Marketplace publisher Id.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "saasSubscriptionId": {
                    "type": "string",
                    "description": "Saas subscription Id.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "saasSubscriptionName": {
                    "type": "string",
                    "description": "Saas subscription name.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "planId": {
                    "type": "string",
                    "description": "Plan Id.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  }
                }
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "x-ms-identifiers": [
            "key"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "AgriServiceResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the AgriServiceResource.",
      "properties": {
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The identities assigned to this resource by the user.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "sku": {
          "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "config": {
              "description": "Config of the AgriService instance.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ],
              "type": "object",
              "properties": {
                "instanceUri": {
                  "type": "string",
                  "description": "Instance URI of the AgriService instance.",
                  "minLength": 2,
                  "maxLength": 256,
                  "readOnly": true
                },
                "version": {
                  "type": "string",
                  "description": "Version of AgriService instance.",
                  "minLength": 2,
                  "maxLength": 256,
                  "readOnly": true
                },
                "appServiceResourceId": {
                  "type": "string",
                  "description": "App service resource Id.",
                  "minLength": 2,
                  "readOnly": true
                },
                "cosmosDbResourceId": {
                  "type": "string",
                  "description": "Cosmos Db resource Id.",
                  "minLength": 2,
                  "readOnly": true
                },
                "storageAccountResourceId": {
                  "type": "string",
                  "description": "Storage account resource Id.",
                  "minLength": 2,
                  "readOnly": true
                },
                "keyVaultResourceId": {
                  "type": "string",
                  "description": "Key vault resource Id.",
                  "minLength": 2,
                  "readOnly": true
                },
                "redisCacheResourceId": {
                  "type": "string",
                  "description": "Redis cache resource Id.",
                  "minLength": 2,
                  "readOnly": true
                }
              }
            },
            "dataConnectorCredentials": {
              "type": "array",
              "description": "Data connector credentials of AgriService instance.",
              "items": {
                "type": "object",
                "description": "Mapping of data connector credentials.",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key representing the credential."
                  },
                  "value": {
                    "description": "The data connector credential value.",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "description": "Type of credential.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "OAuthClientCredentials",
                          "ApiKeyAuthCredentials"
                        ],
                        "x-ms-enum": {
                          "name": "AuthCredentialsKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "OAuthClientCredentials",
                              "value": "OAuthClientCredentials",
                              "description": "OAuth Client Credential type"
                            },
                            {
                              "name": "ApiKeyAuthCredentials",
                              "value": "ApiKeyAuthCredentials",
                              "description": "API Key Auth Credential type"
                            }
                          ]
                        }
                      },
                      "clientId": {
                        "type": "string",
                        "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "keyVaultUri": {
                        "type": "string",
                        "description": "Uri of the key vault",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "keyName": {
                        "type": "string",
                        "description": "Name of the key vault key.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "keyVersion": {
                        "type": "string",
                        "description": "Version of the key vault key.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              },
              "x-ms-identifiers": [
                "key"
              ],
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "installedSolutions": {
              "type": "array",
              "description": "AgriService installed solutions.",
              "items": {
                "type": "object",
                "description": "Mapping of installed solutions.",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key representing the installed solution."
                  },
                  "value": {
                    "description": "The installed solution value.",
                    "type": "object",
                    "properties": {
                      "applicationName": {
                        "type": "string",
                        "description": "Application name of the solution.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "partnerId": {
                        "type": "string",
                        "description": "Partner Id.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "marketPlacePublisherId": {
                        "type": "string",
                        "description": "Marketplace publisher Id.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "saasSubscriptionId": {
                        "type": "string",
                        "description": "Saas subscription Id.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "saasSubscriptionName": {
                        "type": "string",
                        "description": "Saas subscription name.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "planId": {
                        "type": "string",
                        "description": "Plan Id.",
                        "minLength": 2,
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              },
              "x-ms-identifiers": [
                "key"
              ],
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            }
          }
        }
      }
    },
    "AgriServiceResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the AgriServiceResource.",
      "properties": {
        "config": {
          "description": "Config of the AgriService instance.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "object",
          "properties": {
            "instanceUri": {
              "type": "string",
              "description": "Instance URI of the AgriService instance.",
              "minLength": 2,
              "maxLength": 256,
              "readOnly": true
            },
            "version": {
              "type": "string",
              "description": "Version of AgriService instance.",
              "minLength": 2,
              "maxLength": 256,
              "readOnly": true
            },
            "appServiceResourceId": {
              "type": "string",
              "description": "App service resource Id.",
              "minLength": 2,
              "readOnly": true
            },
            "cosmosDbResourceId": {
              "type": "string",
              "description": "Cosmos Db resource Id.",
              "minLength": 2,
              "readOnly": true
            },
            "storageAccountResourceId": {
              "type": "string",
              "description": "Storage account resource Id.",
              "minLength": 2,
              "readOnly": true
            },
            "keyVaultResourceId": {
              "type": "string",
              "description": "Key vault resource Id.",
              "minLength": 2,
              "readOnly": true
            },
            "redisCacheResourceId": {
              "type": "string",
              "description": "Redis cache resource Id.",
              "minLength": 2,
              "readOnly": true
            }
          }
        },
        "dataConnectorCredentials": {
          "type": "array",
          "description": "Data connector credentials of AgriService instance.",
          "items": {
            "type": "object",
            "description": "Mapping of data connector credentials.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The key representing the credential."
              },
              "value": {
                "description": "The data connector credential value.",
                "type": "object",
                "properties": {
                  "kind": {
                    "description": "Type of credential.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "OAuthClientCredentials",
                      "ApiKeyAuthCredentials"
                    ],
                    "x-ms-enum": {
                      "name": "AuthCredentialsKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "OAuthClientCredentials",
                          "value": "OAuthClientCredentials",
                          "description": "OAuth Client Credential type"
                        },
                        {
                          "name": "ApiKeyAuthCredentials",
                          "value": "ApiKeyAuthCredentials",
                          "description": "API Key Auth Credential type"
                        }
                      ]
                    }
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "keyVaultUri": {
                    "type": "string",
                    "description": "Uri of the key vault",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "keyName": {
                    "type": "string",
                    "description": "Name of the key vault key.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "keyVersion": {
                    "type": "string",
                    "description": "Version of the key vault key.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  }
                }
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "x-ms-identifiers": [
            "key"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "installedSolutions": {
          "type": "array",
          "description": "AgriService installed solutions.",
          "items": {
            "type": "object",
            "description": "Mapping of installed solutions.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The key representing the installed solution."
              },
              "value": {
                "description": "The installed solution value.",
                "type": "object",
                "properties": {
                  "applicationName": {
                    "type": "string",
                    "description": "Application name of the solution.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "partnerId": {
                    "type": "string",
                    "description": "Partner Id.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "marketPlacePublisherId": {
                    "type": "string",
                    "description": "Marketplace publisher Id.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "saasSubscriptionId": {
                    "type": "string",
                    "description": "Saas subscription Id.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "saasSubscriptionName": {
                    "type": "string",
                    "description": "Saas subscription name.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "planId": {
                    "type": "string",
                    "description": "Plan Id.",
                    "minLength": 2,
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  }
                }
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "x-ms-identifiers": [
            "key"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "AuthCredentialsKind": {
      "type": "string",
      "description": "Types of different kind of Data connector auth credentials supported.",
      "enum": [
        "OAuthClientCredentials",
        "ApiKeyAuthCredentials"
      ],
      "x-ms-enum": {
        "name": "AuthCredentialsKind",
        "modelAsString": true,
        "values": [
          {
            "name": "OAuthClientCredentials",
            "value": "OAuthClientCredentials",
            "description": "OAuth Client Credential type"
          },
          {
            "name": "ApiKeyAuthCredentials",
            "value": "ApiKeyAuthCredentials",
            "description": "API Key Auth Credential type"
          }
        ]
      }
    },
    "AvailableAgriSolutionListResult": {
      "type": "object",
      "description": "The list of available agri solutions.",
      "properties": {
        "solutions": {
          "type": "array",
          "description": "Agri solutions list.",
          "items": {
            "type": "object",
            "description": "Data Manager for Agriculture solution.",
            "properties": {
              "partnerId": {
                "type": "string",
                "description": "Partner Id."
              },
              "solutionId": {
                "type": "string",
                "description": "Solution Id."
              },
              "partnerTenantId": {
                "type": "string",
                "description": "Partner tenant Id."
              },
              "dataAccessScopes": {
                "type": "array",
                "description": "Data access scopes.",
                "items": {
                  "type": "string"
                }
              },
              "marketPlaceOfferDetails": {
                "description": "Marketplace offer details.",
                "type": "object",
                "properties": {
                  "saasOfferId": {
                    "type": "string",
                    "description": "Saas offer Id."
                  },
                  "publisherId": {
                    "type": "string",
                    "description": "Publisher Id."
                  }
                },
                "required": [
                  "saasOfferId",
                  "publisherId"
                ]
              },
              "saasApplicationId": {
                "type": "string",
                "description": "Saas application Id."
              },
              "accessAzureDataManagerForAgricultureApplicationId": {
                "type": "string",
                "description": "Entra application Id used to access azure data manager for agriculture instance."
              },
              "accessAzureDataManagerForAgricultureApplicationName": {
                "type": "string",
                "description": "Entra application name used to access azure data manager for agriculture instance."
              },
              "isValidateInput": {
                "type": "boolean",
                "description": "Whether solution inference will validate input."
              }
            },
            "required": [
              "partnerId",
              "solutionId",
              "partnerTenantId",
              "dataAccessScopes",
              "marketPlaceOfferDetails",
              "saasApplicationId",
              "accessAzureDataManagerForAgricultureApplicationId",
              "accessAzureDataManagerForAgricultureApplicationName",
              "isValidateInput"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "solutions"
      ]
    },
    "Azure.ResourceManager.CommonTypes.ManagedServiceIdentityUpdate": {
      "type": "object",
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "x-nullable": true,
            "type": "object",
            "description": "User assigned identity properties",
            "properties": {
              "principalId": {
                "type": "string",
                "format": "uuid",
                "description": "The principal ID of the assigned identity.",
                "readOnly": true
              },
              "clientId": {
                "type": "string",
                "format": "uuid",
                "description": "The client ID of the assigned identity.",
                "readOnly": true
              }
            }
          }
        }
      }
    },
    "Azure.ResourceManager.CommonTypes.SkuUpdate": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "type": "string",
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "enum": [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          }
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      }
    },
    "DataConnectorCredentialMap": {
      "type": "object",
      "description": "Mapping of data connector credentials.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key representing the credential."
        },
        "value": {
          "description": "The data connector credential value.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "Type of credential.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ],
              "type": "string",
              "enum": [
                "OAuthClientCredentials",
                "ApiKeyAuthCredentials"
              ],
              "x-ms-enum": {
                "name": "AuthCredentialsKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "OAuthClientCredentials",
                    "value": "OAuthClientCredentials",
                    "description": "OAuth Client Credential type"
                  },
                  {
                    "name": "ApiKeyAuthCredentials",
                    "value": "ApiKeyAuthCredentials",
                    "description": "API Key Auth Credential type"
                  }
                ]
              }
            },
            "clientId": {
              "type": "string",
              "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "keyVaultUri": {
              "type": "string",
              "description": "Uri of the key vault",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "keyName": {
              "type": "string",
              "description": "Name of the key vault key.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "keyVersion": {
              "type": "string",
              "description": "Version of the key vault key.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            }
          }
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "DataConnectorCredentials": {
      "type": "object",
      "description": "The properties related to an AgriService data connector.",
      "properties": {
        "kind": {
          "description": "Type of credential.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "string",
          "enum": [
            "OAuthClientCredentials",
            "ApiKeyAuthCredentials"
          ],
          "x-ms-enum": {
            "name": "AuthCredentialsKind",
            "modelAsString": true,
            "values": [
              {
                "name": "OAuthClientCredentials",
                "value": "OAuthClientCredentials",
                "description": "OAuth Client Credential type"
              },
              {
                "name": "ApiKeyAuthCredentials",
                "value": "ApiKeyAuthCredentials",
                "description": "API Key Auth Credential type"
              }
            ]
          }
        },
        "clientId": {
          "type": "string",
          "description": "Client Id associated with the provider, if type of credentials is OAuthClientCredentials.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of the key vault",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "keyName": {
          "type": "string",
          "description": "Name of the key vault key.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "keyVersion": {
          "type": "string",
          "description": "Version of the key vault key.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DataManagerForAgricultureSolution": {
      "type": "object",
      "description": "Data Manager for Agriculture solution.",
      "properties": {
        "partnerId": {
          "type": "string",
          "description": "Partner Id."
        },
        "solutionId": {
          "type": "string",
          "description": "Solution Id."
        },
        "partnerTenantId": {
          "type": "string",
          "description": "Partner tenant Id."
        },
        "dataAccessScopes": {
          "type": "array",
          "description": "Data access scopes.",
          "items": {
            "type": "string"
          }
        },
        "marketPlaceOfferDetails": {
          "description": "Marketplace offer details.",
          "type": "object",
          "properties": {
            "saasOfferId": {
              "type": "string",
              "description": "Saas offer Id."
            },
            "publisherId": {
              "type": "string",
              "description": "Publisher Id."
            }
          },
          "required": [
            "saasOfferId",
            "publisherId"
          ]
        },
        "saasApplicationId": {
          "type": "string",
          "description": "Saas application Id."
        },
        "accessAzureDataManagerForAgricultureApplicationId": {
          "type": "string",
          "description": "Entra application Id used to access azure data manager for agriculture instance."
        },
        "accessAzureDataManagerForAgricultureApplicationName": {
          "type": "string",
          "description": "Entra application name used to access azure data manager for agriculture instance."
        },
        "isValidateInput": {
          "type": "boolean",
          "description": "Whether solution inference will validate input."
        }
      },
      "required": [
        "partnerId",
        "solutionId",
        "partnerTenantId",
        "dataAccessScopes",
        "marketPlaceOfferDetails",
        "saasApplicationId",
        "accessAzureDataManagerForAgricultureApplicationId",
        "accessAzureDataManagerForAgricultureApplicationName",
        "isValidateInput"
      ]
    },
    "InstalledSolutionMap": {
      "type": "object",
      "description": "Mapping of installed solutions.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key representing the installed solution."
        },
        "value": {
          "description": "The installed solution value.",
          "type": "object",
          "properties": {
            "applicationName": {
              "type": "string",
              "description": "Application name of the solution.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "partnerId": {
              "type": "string",
              "description": "Partner Id.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "marketPlacePublisherId": {
              "type": "string",
              "description": "Marketplace publisher Id.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "saasSubscriptionId": {
              "type": "string",
              "description": "Saas subscription Id.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "saasSubscriptionName": {
              "type": "string",
              "description": "Saas subscription name.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "planId": {
              "type": "string",
              "description": "Plan Id.",
              "minLength": 2,
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            }
          }
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "ManagedOnBehalfOfConfiguration": {
      "type": "object",
      "description": "Configuration of the managed on behalf of resource.",
      "properties": {
        "moboBrokerResources": {
          "type": "array",
          "description": "Associated MoboBrokerResources.",
          "items": {
            "type": "object",
            "description": "MoboBroker resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
                "readOnly": true
              }
            },
            "required": [
              "id"
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "moboBrokerResources"
      ]
    },
    "MarketPlaceOfferDetails": {
      "type": "object",
      "description": "Marketplace offer details of Agri solution.",
      "properties": {
        "saasOfferId": {
          "type": "string",
          "description": "Saas offer Id."
        },
        "publisherId": {
          "type": "string",
          "description": "Publisher Id."
        }
      },
      "required": [
        "saasOfferId",
        "publisherId"
      ]
    },
    "MoboBrokerResource": {
      "type": "object",
      "description": "MoboBroker resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fully qualified resource ID of the MoboBroker resource.\nExample: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}`",
          "readOnly": true
        }
      },
      "required": [
        "id"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being provisioned"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource create request has been accepted"
          }
        ]
      },
      "readOnly": true
    },
    "Solution": {
      "type": "object",
      "description": "Installed data manager for Agriculture solution detail.",
      "properties": {
        "applicationName": {
          "type": "string",
          "description": "Application name of the solution.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "partnerId": {
          "type": "string",
          "description": "Partner Id.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "marketPlacePublisherId": {
          "type": "string",
          "description": "Marketplace publisher Id.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "saasSubscriptionId": {
          "type": "string",
          "description": "Saas subscription Id.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "saasSubscriptionName": {
          "type": "string",
          "description": "Saas subscription name.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "planId": {
          "type": "string",
          "description": "Plan Id.",
          "minLength": 2,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    }
  },
  "parameters": {}
}