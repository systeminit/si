{
  "swagger": "2.0",
  "info": {
    "title": "Azure eventhub",
    "version": "2024-01-01",
    "description": "Azure eventhub service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups": {
      "get": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroup_ListByNamespace",
        "description": "Gets a list of application groups for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace ApplicationGroups successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
                          },
                          "clientAppGroupIdentifier": {
                            "type": "string",
                            "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
                          },
                          "policies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "discriminator": "type",
                              "description": "Properties of the Application Group policy",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The Name of this policy"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ThrottlingPolicy"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ApplicationGroupPolicyType",
                                    "modelAsString": true
                                  },
                                  "description": "Application Group Policy types"
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ]
                            },
                            "x-ms-identifiers": [],
                            "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."
                          }
                        },
                        "required": [
                          "clientAppGroupIdentifier"
                        ]
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "The Application Group object"
                  },
                  "description": "Result of the List Application Groups operation."
                },
                "nextLink": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
                }
              },
              "description": "The response from the List Application Groups operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}": {
      "put": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroup_CreateOrUpdateApplicationGroup",
        "x-ms-azure-resource": true,
        "description": "Creates or updates an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Application Group name "
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "isEnabled": {
                      "type": "boolean",
                      "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
                    },
                    "clientAppGroupIdentifier": {
                      "type": "string",
                      "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
                    },
                    "policies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Properties of the Application Group policy",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The Name of this policy"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ThrottlingPolicy"
                            ],
                            "x-ms-enum": {
                              "name": "ApplicationGroupPolicyType",
                              "modelAsString": true
                            },
                            "description": "Application Group Policy types"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "x-ms-identifiers": [],
                      "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."
                    }
                  },
                  "required": [
                    "clientAppGroupIdentifier"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "The Application Group object"
            },
            "description": "The ApplicationGroup."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "ApplicationGroup successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "isEnabled": {
                      "type": "boolean",
                      "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
                    },
                    "clientAppGroupIdentifier": {
                      "type": "string",
                      "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
                    },
                    "policies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Properties of the Application Group policy",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The Name of this policy"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ThrottlingPolicy"
                            ],
                            "x-ms-enum": {
                              "name": "ApplicationGroupPolicyType",
                              "modelAsString": true
                            },
                            "description": "Application Group Policy types"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "x-ms-identifiers": [],
                      "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."
                    }
                  },
                  "required": [
                    "clientAppGroupIdentifier"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "The Application Group object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroup_Delete",
        "description": "Deletes an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Application Group name "
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "ApplicationGroup successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "ApplicationGroup"
        ],
        "operationId": "ApplicationGroup_Get",
        "description": "Gets an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Application Group name "
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace ApplicationGroup returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "isEnabled": {
                      "type": "boolean",
                      "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
                    },
                    "clientAppGroupIdentifier": {
                      "type": "string",
                      "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
                    },
                    "policies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Properties of the Application Group policy",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The Name of this policy"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ThrottlingPolicy"
                            ],
                            "x-ms-enum": {
                              "name": "ApplicationGroupPolicyType",
                              "modelAsString": true
                            },
                            "description": "Application Group Policy types"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "x-ms-identifiers": [],
                      "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."
                    }
                  },
                  "required": [
                    "clientAppGroupIdentifier"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "The Application Group object"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "tags": [
          "AuthorizationRules Namespaces"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "description": "Gets a list of authorization rules for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace AuthorizationRule successfully returned.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "rights": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Manage",
                                "Send",
                                "Listen"
                              ],
                              "x-ms-enum": {
                                "name": "AccessRights",
                                "modelAsString": true
                              }
                            },
                            "description": "The rights associated with the rule."
                          }
                        },
                        "required": [
                          "rights"
                        ],
                        "description": "Properties supplied to create or update AuthorizationRule"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in a List or Get AuthorizationRule operation"
                  },
                  "description": "Result of the List Authorization Rules operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
                }
              },
              "description": "The response from the List namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "AuthorizationRules Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "description": "Creates or updates an AuthorizationRule for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": true
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "Properties supplied to create or update AuthorizationRule"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in a List or Get AuthorizationRule operation"
            },
            "description": "The shared access AuthorizationRule."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace AuthorizationRule created",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": true
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "Properties supplied to create or update AuthorizationRule"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in a List or Get AuthorizationRule operation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AuthorizationRules Namespaces"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "description": "Deletes an AuthorizationRule for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace AuthorizationRule successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "AuthorizationRules Namespaces"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "description": "Gets an AuthorizationRule for a Namespace by rule name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace AuthorizationRule returned successfully.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": true
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "Properties supplied to create or update AuthorizationRule"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in a List or Get AuthorizationRule operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "AuthorizationRules Namespaces"
        ],
        "operationId": "Namespaces_ListKeys",
        "description": "Gets the primary and secondary connection strings for the Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings returned successfully.",
            "schema": {
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace AuthorizationRule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace AuthorizationRule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the AuthorizationRule."
                }
              },
              "description": "Namespace/EventHub Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "AuthorizationRules Namespaces"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "description": "Regenerates the primary or secondary connection strings for the specified Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "keyType": {
                  "type": "string",
                  "description": "The access key to regenerate.",
                  "enum": [
                    "PrimaryKey",
                    "SecondaryKey"
                  ],
                  "x-ms-enum": {
                    "name": "KeyType",
                    "modelAsString": true
                  }
                },
                "key": {
                  "type": "string",
                  "description": "Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType"
                }
              },
              "required": [
                "keyType"
              ],
              "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
            },
            "description": "Parameters required to regenerate the connection string."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings regenerated successfully.",
            "schema": {
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace AuthorizationRule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace AuthorizationRule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the AuthorizationRule."
                }
              },
              "description": "Namespace/EventHub Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules": {
      "get": {
        "tags": [
          "AuthorizationRules DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_ListAuthorizationRules",
        "description": "Gets a list of authorization rules for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace AuthorizationRule successfully returned.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "rights": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Manage",
                                "Send",
                                "Listen"
                              ],
                              "x-ms-enum": {
                                "name": "AccessRights",
                                "modelAsString": true
                              }
                            },
                            "description": "The rights associated with the rule."
                          }
                        },
                        "required": [
                          "rights"
                        ],
                        "description": "Properties supplied to create or update AuthorizationRule"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in a List or Get AuthorizationRule operation"
                  },
                  "description": "Result of the List Authorization Rules operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
                }
              },
              "description": "The response from the List namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "tags": [
          "AuthorizationRules DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_GetAuthorizationRule",
        "description": "Gets an AuthorizationRule for a Namespace by rule name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Alias Namespace AuthorizationRule returned successfully.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": true
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "Properties supplied to create or update AuthorizationRule"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in a List or Get AuthorizationRule operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "AuthorizationRules DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_ListKeys",
        "description": "Gets the primary and secondary connection strings for the Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings returned successfully.",
            "schema": {
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace AuthorizationRule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace AuthorizationRule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the AuthorizationRule."
                }
              },
              "description": "Namespace/EventHub Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules": {
      "get": {
        "tags": [
          "AuthorizationRules EventHubs"
        ],
        "operationId": "EventHubs_ListAuthorizationRules",
        "description": "Gets the authorization rules for an Event Hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hub AuthorizationRule returned successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "rights": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Manage",
                                "Send",
                                "Listen"
                              ],
                              "x-ms-enum": {
                                "name": "AccessRights",
                                "modelAsString": true
                              }
                            },
                            "description": "The rights associated with the rule."
                          }
                        },
                        "required": [
                          "rights"
                        ],
                        "description": "Properties supplied to create or update AuthorizationRule"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in a List or Get AuthorizationRule operation"
                  },
                  "description": "Result of the List Authorization Rules operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
                }
              },
              "description": "The response from the List namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "AuthorizationRules EventHubs"
        ],
        "operationId": "EventHubs_CreateOrUpdateAuthorizationRule",
        "description": "Creates or updates an AuthorizationRule for the specified Event Hub. Creation/update of the AuthorizationRule will take a few seconds to take effect.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": true
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "Properties supplied to create or update AuthorizationRule"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in a List or Get AuthorizationRule operation"
            },
            "description": "The shared access AuthorizationRule."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hub AuthorizationRule successfully created.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": true
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "Properties supplied to create or update AuthorizationRule"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in a List or Get AuthorizationRule operation"
            }
          }
        }
      },
      "get": {
        "tags": [
          "EventHubs"
        ],
        "operationId": "EventHubs_GetAuthorizationRule",
        "description": "Gets an AuthorizationRule for an Event Hub by rule name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hub AuthorizationRule successfully returned.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": true
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "Properties supplied to create or update AuthorizationRule"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in a List or Get AuthorizationRule operation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventHubs"
        ],
        "operationId": "EventHubs_DeleteAuthorizationRule",
        "description": "Deletes an Event Hub AuthorizationRule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hub AuthorizationRule successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "AuthorizationRules EventHubs"
        ],
        "operationId": "EventHubs_ListKeys",
        "description": "Gets the ACS and SAS connection strings for the Event Hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully returned.",
            "schema": {
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace AuthorizationRule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace AuthorizationRule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the AuthorizationRule."
                }
              },
              "description": "Namespace/EventHub Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "AuthorizationRules EventHubs"
        ],
        "operationId": "EventHubs_RegenerateKeys",
        "description": "Regenerates the ACS and SAS connection strings for the Event Hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "keyType": {
                  "type": "string",
                  "description": "The access key to regenerate.",
                  "enum": [
                    "PrimaryKey",
                    "SecondaryKey"
                  ],
                  "x-ms-enum": {
                    "name": "KeyType",
                    "modelAsString": true
                  }
                },
                "key": {
                  "type": "string",
                  "description": "Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType"
                }
              },
              "required": [
                "keyType"
              ],
              "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
            },
            "description": "Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey)."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully regenerated.",
            "schema": {
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace AuthorizationRule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace AuthorizationRule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the AuthorizationRule."
                }
              },
              "description": "Namespace/EventHub Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/availableClusterRegions": {
      "get": {
        "tags": [
          "Event Hubs Clusters AvailableClusterRegions"
        ],
        "operationId": "Clusters_ListAvailableClusterRegion",
        "description": "List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "responses": {
          "200": {
            "description": "Available clusters listed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "Location fo the Available Cluster"
                      }
                    },
                    "description": "Pre-provisioned and readily available Event Hubs Cluster count per region."
                  },
                  "description": "The count of readily available and pre-provisioned Event Hubs Clusters per region."
                }
              },
              "description": "The response of the List Available Clusters operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/checkNameAvailability": {
      "post": {
        "tags": [
          "CheckNameAvailability Namespaces"
        ],
        "operationId": "Namespaces_CheckNameAvailability",
        "description": "Check the give Namespace name availability.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name to check the namespace name availability"
                }
              },
              "required": [
                "name"
              ],
              "description": "Parameter supplied to check Namespace name availability operation "
            },
            "description": "Parameters to check availability of the given Namespace name"
          }
        ],
        "responses": {
          "200": {
            "description": "check availability returned successfully.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The detailed info regarding the reason associated with the Namespace."
                },
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false."
                },
                "reason": {
                  "description": "The reason for unavailability of a Namespace.",
                  "type": "string",
                  "enum": [
                    "None",
                    "InvalidName",
                    "SubscriptionIsDisabled",
                    "NameInUse",
                    "NameInLockdown",
                    "TooManyNamespaceInCurrentSubscription"
                  ],
                  "x-ms-enum": {
                    "name": "UnavailableReason",
                    "modelAsString": false
                  }
                }
              },
              "description": "The Result of the CheckNameAvailability operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/clusters": {
      "get": {
        "tags": [
          "EventHubs Clusters"
        ],
        "operationId": "Clusters_ListBySubscription",
        "description": "Lists the available Event Hubs Clusters within an ARM resource group",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "responses": {
          "200": {
            "description": "Clusters returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags."
                      },
                      "sku": {
                        "description": "Properties of the cluster SKU.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of this SKU.",
                            "enum": [
                              "Dedicated"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterSkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "format": "int32",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "createdAt": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The UTC time when the Event Hubs Cluster was created."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "Creating",
                              "Deleting",
                              "Scaling",
                              "Active",
                              "Failed",
                              "Succeeded",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            },
                            "description": "Provisioning state of the Cluster."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The UTC time when the Event Hubs Cluster was last updated."
                          },
                          "metricId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                          },
                          "status": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of the Cluster resource"
                          },
                          "supportsScaling": {
                            "type": "boolean",
                            "description": "A value that indicates whether Scaling is Supported."
                          }
                        },
                        "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                      }
                    },
                    "description": "Single Event Hubs Cluster resource in List or Get operations."
                  },
                  "description": "The Event Hubs Clusters present in the List Event Hubs operation results."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters."
                }
              },
              "description": "The response of the List Event Hubs Clusters operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters": {
      "get": {
        "tags": [
          "EventHubs Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "description": "Lists the available Event Hubs Clusters within an ARM resource group",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "responses": {
          "200": {
            "description": "Clusters returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags."
                      },
                      "sku": {
                        "description": "Properties of the cluster SKU.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of this SKU.",
                            "enum": [
                              "Dedicated"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterSkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "format": "int32",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "createdAt": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The UTC time when the Event Hubs Cluster was created."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "Creating",
                              "Deleting",
                              "Scaling",
                              "Active",
                              "Failed",
                              "Succeeded",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "provisioningState",
                              "modelAsString": true
                            },
                            "description": "Provisioning state of the Cluster."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The UTC time when the Event Hubs Cluster was last updated."
                          },
                          "metricId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                          },
                          "status": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of the Cluster resource"
                          },
                          "supportsScaling": {
                            "type": "boolean",
                            "description": "A value that indicates whether Scaling is Supported."
                          }
                        },
                        "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                      }
                    },
                    "description": "Single Event Hubs Cluster resource in List or Get operations."
                  },
                  "description": "The Event Hubs Clusters present in the List Event Hubs operation results."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters."
                }
              },
              "description": "The response of the List Event Hubs Clusters operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}": {
      "get": {
        "tags": [
          "EventHubs Clusters"
        ],
        "operationId": "Clusters_Get",
        "description": "Gets the resource description of the specified Event Hubs Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The name of the Event Hubs Cluster."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hubs Cluster resource description returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of the cluster SKU.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Dedicated"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 1,
                      "type": "integer",
                      "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was created."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Creating",
                        "Deleting",
                        "Scaling",
                        "Active",
                        "Failed",
                        "Succeeded",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Cluster."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was last updated."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Cluster resource"
                    },
                    "supportsScaling": {
                      "type": "boolean",
                      "description": "A value that indicates whether Scaling is Supported."
                    }
                  },
                  "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                }
              },
              "description": "Single Event Hubs Cluster resource in List or Get operations."
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventHubs Clusters"
        ],
        "operationId": "Clusters_CreateOrUpdate",
        "description": "Creates or updates an instance of an Event Hubs Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The name of the Event Hubs Cluster."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of the cluster SKU.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Dedicated"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 1,
                      "type": "integer",
                      "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was created."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Creating",
                        "Deleting",
                        "Scaling",
                        "Active",
                        "Failed",
                        "Succeeded",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Cluster."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was last updated."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Cluster resource"
                    },
                    "supportsScaling": {
                      "type": "boolean",
                      "description": "A value that indicates whether Scaling is Supported."
                    }
                  },
                  "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                }
              },
              "description": "Single Event Hubs Cluster resource in List or Get operations.",
              "required": [
                "location"
              ]
            },
            "description": "Parameters for creating a eventhub cluster resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hubs Cluster successfully created or updated.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of the cluster SKU.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Dedicated"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 1,
                      "type": "integer",
                      "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was created."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Creating",
                        "Deleting",
                        "Scaling",
                        "Active",
                        "Failed",
                        "Succeeded",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Cluster."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was last updated."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Cluster resource"
                    },
                    "supportsScaling": {
                      "type": "boolean",
                      "description": "A value that indicates whether Scaling is Supported."
                    }
                  },
                  "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                }
              },
              "description": "Single Event Hubs Cluster resource in List or Get operations."
            }
          },
          "201": {
            "description": "Event Hubs Cluster create or update request accepted.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of the cluster SKU.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Dedicated"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 1,
                      "type": "integer",
                      "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was created."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Creating",
                        "Deleting",
                        "Scaling",
                        "Active",
                        "Failed",
                        "Succeeded",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Cluster."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was last updated."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Cluster resource"
                    },
                    "supportsScaling": {
                      "type": "boolean",
                      "description": "A value that indicates whether Scaling is Supported."
                    }
                  },
                  "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                }
              },
              "description": "Single Event Hubs Cluster resource in List or Get operations."
            }
          },
          "202": {
            "description": "Event Hubs Cluster create or update request accepted."
          }
        }
      },
      "patch": {
        "tags": [
          "EventHubs Clusters"
        ],
        "operationId": "Clusters_Update",
        "description": "Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The name of the Event Hubs Cluster."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of the cluster SKU.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Dedicated"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 1,
                      "type": "integer",
                      "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was created."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Creating",
                        "Deleting",
                        "Scaling",
                        "Active",
                        "Failed",
                        "Succeeded",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Cluster."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was last updated."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Cluster resource"
                    },
                    "supportsScaling": {
                      "type": "boolean",
                      "description": "A value that indicates whether Scaling is Supported."
                    }
                  },
                  "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                }
              },
              "description": "Single Event Hubs Cluster resource in List or Get operations."
            },
            "description": "The properties of the Event Hubs Cluster which should be updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hubs Cluster successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of the cluster SKU.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Dedicated"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 1,
                      "type": "integer",
                      "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was created."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Creating",
                        "Deleting",
                        "Scaling",
                        "Active",
                        "Failed",
                        "Succeeded",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Cluster."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was last updated."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Cluster resource"
                    },
                    "supportsScaling": {
                      "type": "boolean",
                      "description": "A value that indicates whether Scaling is Supported."
                    }
                  },
                  "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                }
              },
              "description": "Single Event Hubs Cluster resource in List or Get operations."
            }
          },
          "201": {
            "description": "Event Hubs Cluster update request accepted.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of the cluster SKU.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Dedicated"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 1,
                      "type": "integer",
                      "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was created."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Creating",
                        "Deleting",
                        "Scaling",
                        "Active",
                        "Failed",
                        "Succeeded",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "provisioningState",
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Cluster."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The UTC time when the Event Hubs Cluster was last updated."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Cluster resource"
                    },
                    "supportsScaling": {
                      "type": "boolean",
                      "description": "A value that indicates whether Scaling is Supported."
                    }
                  },
                  "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
                }
              },
              "description": "Single Event Hubs Cluster resource in List or Get operations."
            }
          },
          "202": {
            "description": "Event Hubs Cluster update request accepted."
          }
        }
      },
      "delete": {
        "tags": [
          "EventHubs Clusters"
        ],
        "operationId": "Clusters_Delete",
        "description": "Deletes an existing Event Hubs Cluster. This operation is idempotent.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The name of the Event Hubs Cluster."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hubs Cluster successfully deleted."
          },
          "202": {
            "description": "Event Hubs Cluster delete request accepted."
          },
          "204": {
            "description": "No content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/namespaces": {
      "get": {
        "tags": [
          "EventHubs Clusters Namespace"
        ],
        "operationId": "Clusters_ListNamespaces",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The name of the Event Hubs Cluster."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "description": "List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster.",
        "responses": {
          "200": {
            "description": "List of Namespace IDs in Cluster successfully delivered.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id parameter"
                      }
                    },
                    "description": "The full ARM ID of an Event Hubs Namespace"
                  },
                  "description": "Result of the List Namespace IDs operation"
                }
              },
              "description": "The response of the List Namespace IDs operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups": {
      "get": {
        "tags": [
          "SchemaRegistry"
        ],
        "operationId": "SchemaRegistry_ListByNamespace",
        "description": "Gets all the Schema Groups in a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "$skip",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of SchemaGroups.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "updatedAtUtc": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "Exact time the Schema Group was updated"
                          },
                          "createdAtUtc": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "Exact time the Schema Group was created."
                          },
                          "eTag": {
                            "readOnly": true,
                            "format": "uuid",
                            "type": "string",
                            "description": "The ETag value."
                          },
                          "groupProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "dictionary object for SchemaGroup group properties"
                          },
                          "schemaCompatibility": {
                            "type": "string",
                            "description": "",
                            "enum": [
                              "None",
                              "Backward",
                              "Forward"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaCompatibility",
                              "modelAsString": true
                            }
                          },
                          "schemaType": {
                            "type": "string",
                            "description": "",
                            "enum": [
                              "Unknown",
                              "Avro"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": ""
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in List or Get Schema Group operation"
                  },
                  "description": "Result of the List SchemaGroups operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Schema Groups."
                }
              },
              "description": "The result of the List SchemaGroup operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups/{schemaGroupName}": {
      "put": {
        "tags": [
          "SchemaRegistry"
        ],
        "operationId": "SchemaRegistry_CreateOrUpdate",
        "description": "Creates or Updates an EventHub schema group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Schema Group name "
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "updatedAtUtc": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Schema Group was updated"
                    },
                    "createdAtUtc": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Schema Group was created."
                    },
                    "eTag": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The ETag value."
                    },
                    "groupProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "dictionary object for SchemaGroup group properties"
                    },
                    "schemaCompatibility": {
                      "type": "string",
                      "description": "",
                      "enum": [
                        "None",
                        "Backward",
                        "Forward"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaCompatibility",
                        "modelAsString": true
                      }
                    },
                    "schemaType": {
                      "type": "string",
                      "description": "",
                      "enum": [
                        "Unknown",
                        "Avro"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaType",
                        "modelAsString": true
                      }
                    }
                  },
                  "description": ""
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Schema Group operation"
            },
            "description": "Parameters supplied to create an Event Hub resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "SchemaGroup successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "updatedAtUtc": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Schema Group was updated"
                    },
                    "createdAtUtc": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Schema Group was created."
                    },
                    "eTag": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The ETag value."
                    },
                    "groupProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "dictionary object for SchemaGroup group properties"
                    },
                    "schemaCompatibility": {
                      "type": "string",
                      "description": "",
                      "enum": [
                        "None",
                        "Backward",
                        "Forward"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaCompatibility",
                        "modelAsString": true
                      }
                    },
                    "schemaType": {
                      "type": "string",
                      "description": "",
                      "enum": [
                        "Unknown",
                        "Avro"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaType",
                        "modelAsString": true
                      }
                    }
                  },
                  "description": ""
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Schema Group operation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SchemaRegistry"
        ],
        "operationId": "SchemaRegistry_Delete",
        "description": "Deletes an EventHub schema group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Schema Group name "
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "SchemaGroup successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "SchemaRegistry"
        ],
        "operationId": "SchemaRegistry_Get",
        "description": "Gets the details of an EventHub schema group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Schema Group name "
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Schema Group description.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "updatedAtUtc": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Schema Group was updated"
                    },
                    "createdAtUtc": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Schema Group was created."
                    },
                    "eTag": {
                      "readOnly": true,
                      "format": "uuid",
                      "type": "string",
                      "description": "The ETag value."
                    },
                    "groupProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "dictionary object for SchemaGroup group properties"
                    },
                    "schemaCompatibility": {
                      "type": "string",
                      "description": "",
                      "enum": [
                        "None",
                        "Backward",
                        "Forward"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaCompatibility",
                        "modelAsString": true
                      }
                    },
                    "schemaType": {
                      "type": "string",
                      "description": "",
                      "enum": [
                        "Unknown",
                        "Avro"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaType",
                        "modelAsString": true
                      }
                    }
                  },
                  "description": ""
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Schema Group operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}": {
      "put": {
        "tags": [
          "ConsumerGroups"
        ],
        "operationId": "ConsumerGroups_CreateOrUpdate",
        "description": "Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The consumer group name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "userMetadata": {
                      "type": "string",
                      "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
                    }
                  },
                  "description": "Single item in List or Get Consumer group operation"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Consumer group operation"
            },
            "description": "Parameters supplied to create or update a consumer group resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Consumer group successfully created.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "userMetadata": {
                      "type": "string",
                      "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
                    }
                  },
                  "description": "Single item in List or Get Consumer group operation"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Consumer group operation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConsumerGroups"
        ],
        "operationId": "ConsumerGroups_Delete",
        "description": "Deletes a consumer group from the specified Event Hub and resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The consumer group name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Consumer group deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "ConsumerGroups"
        ],
        "operationId": "ConsumerGroups_Get",
        "description": "Gets a description for the specified consumer group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The consumer group name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the consumer group description.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "userMetadata": {
                      "type": "string",
                      "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
                    }
                  },
                  "description": "Single item in List or Get Consumer group operation"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Consumer group operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups": {
      "get": {
        "tags": [
          "ConsumerGroups"
        ],
        "operationId": "ConsumerGroups_ListByEventHub",
        "description": "Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "$skip",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of consumer groups.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "createdAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "Exact time the message was created."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The exact time the message was updated."
                          },
                          "userMetadata": {
                            "type": "string",
                            "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
                          }
                        },
                        "description": "Single item in List or Get Consumer group operation"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in List or Get Consumer group operation"
                  },
                  "description": "Result of the List Consumer Group operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group"
                }
              },
              "description": "The result to the List Consumer Group operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/checkNameAvailability": {
      "post": {
        "tags": [
          "CheckNameAvailability DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_CheckNameAvailability",
        "description": "Check the give Namespace name availability.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name to check the namespace name availability"
                }
              },
              "required": [
                "name"
              ],
              "description": "Parameter supplied to check Namespace name availability operation "
            },
            "description": "Parameters to check availability of the given Alias name"
          }
        ],
        "responses": {
          "200": {
            "description": "check availability returned successfully.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The detailed info regarding the reason associated with the Namespace."
                },
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false."
                },
                "reason": {
                  "description": "The reason for unavailability of a Namespace.",
                  "type": "string",
                  "enum": [
                    "None",
                    "InvalidName",
                    "SubscriptionIsDisabled",
                    "NameInUse",
                    "NameInLockdown",
                    "TooManyNamespaceInCurrentSubscription"
                  ],
                  "x-ms-enum": {
                    "name": "UnavailableReason",
                    "modelAsString": false
                  }
                }
              },
              "description": "The Result of the CheckNameAvailability operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs": {
      "get": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_List",
        "description": "Gets all Alias(Disaster Recovery configurations)",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Alias(Disaster Recovery configurations) for eventhub namespace",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                            "enum": [
                              "Accepted",
                              "Succeeded",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStateDR",
                              "modelAsString": false
                            }
                          },
                          "partnerNamespace": {
                            "type": "string",
                            "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                          },
                          "alternateName": {
                            "type": "string",
                            "description": "Alternate name specified when alias and namespace names are same."
                          },
                          "role": {
                            "readOnly": true,
                            "type": "string",
                            "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                            "enum": [
                              "Primary",
                              "PrimaryNotReplicating",
                              "Secondary"
                            ],
                            "x-ms-enum": {
                              "name": "RoleDisasterRecovery",
                              "modelAsString": false
                            }
                          },
                          "pendingReplicationOperationsCount": {
                            "readOnly": true,
                            "format": "int64",
                            "type": "integer",
                            "description": "Number of entities pending to be replicated."
                          }
                        },
                        "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
                  },
                  "description": "List of Alias(Disaster Recovery configurations)"
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)"
                }
              },
              "description": "The result of the List Alias(Disaster Recovery configuration) operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}": {
      "put": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_CreateOrUpdate",
        "description": "Creates or updates a new Alias(Disaster Recovery configuration)",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                      "enum": [
                        "Accepted",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateDR",
                        "modelAsString": false
                      }
                    },
                    "partnerNamespace": {
                      "type": "string",
                      "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                      "enum": [
                        "Primary",
                        "PrimaryNotReplicating",
                        "Secondary"
                      ],
                      "x-ms-enum": {
                        "name": "RoleDisasterRecovery",
                        "modelAsString": false
                      }
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    }
                  },
                  "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
            },
            "description": "Parameters required to create an Alias(Disaster Recovery configuration)"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Alias(Disaster Recovery configuration) successfully created",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                      "enum": [
                        "Accepted",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateDR",
                        "modelAsString": false
                      }
                    },
                    "partnerNamespace": {
                      "type": "string",
                      "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                      "enum": [
                        "Primary",
                        "PrimaryNotReplicating",
                        "Secondary"
                      ],
                      "x-ms-enum": {
                        "name": "RoleDisasterRecovery",
                        "modelAsString": false
                      }
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    }
                  },
                  "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
            }
          },
          "201": {
            "description": "Alias(Disaster Recovery configuration) creation request received",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                      "enum": [
                        "Accepted",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateDR",
                        "modelAsString": false
                      }
                    },
                    "partnerNamespace": {
                      "type": "string",
                      "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                      "enum": [
                        "Primary",
                        "PrimaryNotReplicating",
                        "Secondary"
                      ],
                      "x-ms-enum": {
                        "name": "RoleDisasterRecovery",
                        "modelAsString": false
                      }
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    }
                  },
                  "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_Delete",
        "description": "Deletes an Alias(Disaster Recovery configuration)",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Alias(Disaster Recovery configuration) request accepted"
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_Get",
        "description": "Retrieves Alias(Disaster Recovery configuration) for primary or secondary namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Alias(Disaster Recovery configurations)",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                      "enum": [
                        "Accepted",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateDR",
                        "modelAsString": false
                      }
                    },
                    "partnerNamespace": {
                      "type": "string",
                      "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                      "enum": [
                        "Primary",
                        "PrimaryNotReplicating",
                        "Secondary"
                      ],
                      "x-ms-enum": {
                        "name": "RoleDisasterRecovery",
                        "modelAsString": false
                      }
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    }
                  },
                  "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing": {
      "post": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_BreakPairing",
        "description": "This operation disables the Disaster Recovery and stops replicating changes from primary to secondary namespaces",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Break-Pairing operation is successful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover": {
      "post": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_FailOver",
        "description": "Invokes GEO DR failover and reconfigure the alias to point to the secondary namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Failover operation is successful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs": {
      "get": {
        "tags": [
          "EventHubs"
        ],
        "operationId": "EventHubs_ListByNamespace",
        "description": "Gets all the Event Hubs in a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "$skip",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Event Hubs.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "partitionIds": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Current number of shards on the Event Hub."
                          },
                          "createdAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "Exact time the Event Hub was created."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The exact time the message was updated."
                          },
                          "messageRetentionInDays": {
                            "format": "int64",
                            "type": "integer",
                            "minimum": 1,
                            "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"
                          },
                          "partitionCount": {
                            "format": "int64",
                            "type": "integer",
                            "minimum": 1,
                            "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
                          },
                          "status": {
                            "type": "string",
                            "description": "Enumerates the possible values for the status of the Event Hub.",
                            "enum": [
                              "Active",
                              "Disabled",
                              "Restoring",
                              "SendDisabled",
                              "ReceiveDisabled",
                              "Creating",
                              "Deleting",
                              "Renaming",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "EntityStatus",
                              "modelAsString": false
                            }
                          },
                          "userMetadata": {
                            "type": "string",
                            "description": "Gets and Sets Metadata of User."
                          },
                          "captureDescription": {
                            "description": "Properties of capture description",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "A value that indicates whether capture description is enabled. "
                              },
                              "encoding": {
                                "type": "string",
                                "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
                                "enum": [
                                  "Avro",
                                  "AvroDeflate"
                                ],
                                "x-ms-enum": {
                                  "name": "EncodingCaptureDescription",
                                  "modelAsString": false
                                }
                              },
                              "intervalInSeconds": {
                                "format": "int32",
                                "type": "integer",
                                "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
                              },
                              "sizeLimitInBytes": {
                                "format": "int32",
                                "type": "integer",
                                "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
                              },
                              "destination": {
                                "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name for capture destination"
                                  },
                                  "identity": {
                                    "type": "object",
                                    "description": "A value that indicates whether capture description is enabled.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of Azure Active Directory Managed Identity.",
                                        "enum": [
                                          "SystemAssigned",
                                          "UserAssigned"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CaptureIdentityType",
                                          "modelAsString": false
                                        }
                                      },
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
                                      }
                                    }
                                  },
                                  "properties": {
                                    "x-ms-client-flatten": true,
                                    "properties": {
                                      "storageAccountResourceId": {
                                        "type": "string",
                                        "description": "Resource id of the storage account to be used to create the blobs"
                                      },
                                      "blobContainer": {
                                        "type": "string",
                                        "description": "Blob container Name"
                                      },
                                      "archiveNameFormat": {
                                        "type": "string",
                                        "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
                                      },
                                      "dataLakeSubscriptionId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Subscription Id of Azure Data Lake Store"
                                      },
                                      "dataLakeAccountName": {
                                        "type": "string",
                                        "description": "The Azure Data Lake Store name for the captured events"
                                      },
                                      "dataLakeFolderPath": {
                                        "type": "string",
                                        "description": "The destination folder path for the captured events"
                                      }
                                    },
                                    "description": "Properties describing the storage account, blob container and archive name format for capture destination"
                                  }
                                }
                              },
                              "skipEmptyArchives": {
                                "type": "boolean",
                                "description": "A value that indicates whether to Skip Empty Archives"
                              }
                            }
                          },
                          "retentionDescription": {
                            "description": "Event Hub retention settings",
                            "type": "object",
                            "properties": {
                              "cleanupPolicy": {
                                "type": "string",
                                "description": "Enumerates the possible values for cleanup policy",
                                "enum": [
                                  "Delete",
                                  "Compact"
                                ],
                                "x-ms-enum": {
                                  "name": "CleanupPolicyRetentionDescription",
                                  "modelAsString": true
                                }
                              },
                              "retentionTimeInHours": {
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue "
                              },
                              "tombstoneRetentionTimeInHours": {
                                "format": "int32",
                                "type": "integer",
                                "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
                              }
                            }
                          }
                        },
                        "description": "Properties supplied to the Create Or Update Event Hub operation."
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in List or Get Event Hub operation"
                  },
                  "description": "Result of the List EventHubs operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of EventHubs."
                }
              },
              "description": "The result of the List EventHubs operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}": {
      "put": {
        "tags": [
          "EventHubs"
        ],
        "operationId": "EventHubs_CreateOrUpdate",
        "description": "Creates or updates a new Event Hub as a nested resource within a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "partitionIds": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Current number of shards on the Event Hub."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Event Hub was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "messageRetentionInDays": {
                      "format": "int64",
                      "type": "integer",
                      "minimum": 1,
                      "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"
                    },
                    "partitionCount": {
                      "format": "int64",
                      "type": "integer",
                      "minimum": 1,
                      "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
                    },
                    "status": {
                      "type": "string",
                      "description": "Enumerates the possible values for the status of the Event Hub.",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "userMetadata": {
                      "type": "string",
                      "description": "Gets and Sets Metadata of User."
                    },
                    "captureDescription": {
                      "description": "Properties of capture description",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "A value that indicates whether capture description is enabled. "
                        },
                        "encoding": {
                          "type": "string",
                          "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
                          "enum": [
                            "Avro",
                            "AvroDeflate"
                          ],
                          "x-ms-enum": {
                            "name": "EncodingCaptureDescription",
                            "modelAsString": false
                          }
                        },
                        "intervalInSeconds": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
                        },
                        "sizeLimitInBytes": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
                        },
                        "destination": {
                          "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name for capture destination"
                            },
                            "identity": {
                              "type": "object",
                              "description": "A value that indicates whether capture description is enabled.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Type of Azure Active Directory Managed Identity.",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CaptureIdentityType",
                                    "modelAsString": false
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
                                }
                              }
                            },
                            "properties": {
                              "x-ms-client-flatten": true,
                              "properties": {
                                "storageAccountResourceId": {
                                  "type": "string",
                                  "description": "Resource id of the storage account to be used to create the blobs"
                                },
                                "blobContainer": {
                                  "type": "string",
                                  "description": "Blob container Name"
                                },
                                "archiveNameFormat": {
                                  "type": "string",
                                  "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
                                },
                                "dataLakeSubscriptionId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "Subscription Id of Azure Data Lake Store"
                                },
                                "dataLakeAccountName": {
                                  "type": "string",
                                  "description": "The Azure Data Lake Store name for the captured events"
                                },
                                "dataLakeFolderPath": {
                                  "type": "string",
                                  "description": "The destination folder path for the captured events"
                                }
                              },
                              "description": "Properties describing the storage account, blob container and archive name format for capture destination"
                            }
                          }
                        },
                        "skipEmptyArchives": {
                          "type": "boolean",
                          "description": "A value that indicates whether to Skip Empty Archives"
                        }
                      }
                    },
                    "retentionDescription": {
                      "description": "Event Hub retention settings",
                      "type": "object",
                      "properties": {
                        "cleanupPolicy": {
                          "type": "string",
                          "description": "Enumerates the possible values for cleanup policy",
                          "enum": [
                            "Delete",
                            "Compact"
                          ],
                          "x-ms-enum": {
                            "name": "CleanupPolicyRetentionDescription",
                            "modelAsString": true
                          }
                        },
                        "retentionTimeInHours": {
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue "
                        },
                        "tombstoneRetentionTimeInHours": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
                        }
                      }
                    }
                  },
                  "description": "Properties supplied to the Create Or Update Event Hub operation."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Event Hub operation"
            },
            "description": "Parameters supplied to create an Event Hub resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hub successfully created.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "partitionIds": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Current number of shards on the Event Hub."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Event Hub was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "messageRetentionInDays": {
                      "format": "int64",
                      "type": "integer",
                      "minimum": 1,
                      "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"
                    },
                    "partitionCount": {
                      "format": "int64",
                      "type": "integer",
                      "minimum": 1,
                      "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
                    },
                    "status": {
                      "type": "string",
                      "description": "Enumerates the possible values for the status of the Event Hub.",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "userMetadata": {
                      "type": "string",
                      "description": "Gets and Sets Metadata of User."
                    },
                    "captureDescription": {
                      "description": "Properties of capture description",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "A value that indicates whether capture description is enabled. "
                        },
                        "encoding": {
                          "type": "string",
                          "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
                          "enum": [
                            "Avro",
                            "AvroDeflate"
                          ],
                          "x-ms-enum": {
                            "name": "EncodingCaptureDescription",
                            "modelAsString": false
                          }
                        },
                        "intervalInSeconds": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
                        },
                        "sizeLimitInBytes": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
                        },
                        "destination": {
                          "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name for capture destination"
                            },
                            "identity": {
                              "type": "object",
                              "description": "A value that indicates whether capture description is enabled.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Type of Azure Active Directory Managed Identity.",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CaptureIdentityType",
                                    "modelAsString": false
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
                                }
                              }
                            },
                            "properties": {
                              "x-ms-client-flatten": true,
                              "properties": {
                                "storageAccountResourceId": {
                                  "type": "string",
                                  "description": "Resource id of the storage account to be used to create the blobs"
                                },
                                "blobContainer": {
                                  "type": "string",
                                  "description": "Blob container Name"
                                },
                                "archiveNameFormat": {
                                  "type": "string",
                                  "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
                                },
                                "dataLakeSubscriptionId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "Subscription Id of Azure Data Lake Store"
                                },
                                "dataLakeAccountName": {
                                  "type": "string",
                                  "description": "The Azure Data Lake Store name for the captured events"
                                },
                                "dataLakeFolderPath": {
                                  "type": "string",
                                  "description": "The destination folder path for the captured events"
                                }
                              },
                              "description": "Properties describing the storage account, blob container and archive name format for capture destination"
                            }
                          }
                        },
                        "skipEmptyArchives": {
                          "type": "boolean",
                          "description": "A value that indicates whether to Skip Empty Archives"
                        }
                      }
                    },
                    "retentionDescription": {
                      "description": "Event Hub retention settings",
                      "type": "object",
                      "properties": {
                        "cleanupPolicy": {
                          "type": "string",
                          "description": "Enumerates the possible values for cleanup policy",
                          "enum": [
                            "Delete",
                            "Compact"
                          ],
                          "x-ms-enum": {
                            "name": "CleanupPolicyRetentionDescription",
                            "modelAsString": true
                          }
                        },
                        "retentionTimeInHours": {
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue "
                        },
                        "tombstoneRetentionTimeInHours": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
                        }
                      }
                    }
                  },
                  "description": "Properties supplied to the Create Or Update Event Hub operation."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Event Hub operation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventHubs"
        ],
        "operationId": "EventHubs_Delete",
        "description": "Deletes an Event Hub from the specified Namespace and resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hub successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "EventHubs"
        ],
        "operationId": "EventHubs_Get",
        "description": "Gets an Event Hubs description for the specified Event Hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "x-ms-parameter-location": "method",
            "description": "The Event Hub name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Event Hub description.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "partitionIds": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Current number of shards on the Event Hub."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the Event Hub was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "messageRetentionInDays": {
                      "format": "int64",
                      "type": "integer",
                      "minimum": 1,
                      "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"
                    },
                    "partitionCount": {
                      "format": "int64",
                      "type": "integer",
                      "minimum": 1,
                      "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
                    },
                    "status": {
                      "type": "string",
                      "description": "Enumerates the possible values for the status of the Event Hub.",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "userMetadata": {
                      "type": "string",
                      "description": "Gets and Sets Metadata of User."
                    },
                    "captureDescription": {
                      "description": "Properties of capture description",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "A value that indicates whether capture description is enabled. "
                        },
                        "encoding": {
                          "type": "string",
                          "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
                          "enum": [
                            "Avro",
                            "AvroDeflate"
                          ],
                          "x-ms-enum": {
                            "name": "EncodingCaptureDescription",
                            "modelAsString": false
                          }
                        },
                        "intervalInSeconds": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
                        },
                        "sizeLimitInBytes": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
                        },
                        "destination": {
                          "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name for capture destination"
                            },
                            "identity": {
                              "type": "object",
                              "description": "A value that indicates whether capture description is enabled.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Type of Azure Active Directory Managed Identity.",
                                  "enum": [
                                    "SystemAssigned",
                                    "UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CaptureIdentityType",
                                    "modelAsString": false
                                  }
                                },
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
                                }
                              }
                            },
                            "properties": {
                              "x-ms-client-flatten": true,
                              "properties": {
                                "storageAccountResourceId": {
                                  "type": "string",
                                  "description": "Resource id of the storage account to be used to create the blobs"
                                },
                                "blobContainer": {
                                  "type": "string",
                                  "description": "Blob container Name"
                                },
                                "archiveNameFormat": {
                                  "type": "string",
                                  "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
                                },
                                "dataLakeSubscriptionId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "Subscription Id of Azure Data Lake Store"
                                },
                                "dataLakeAccountName": {
                                  "type": "string",
                                  "description": "The Azure Data Lake Store name for the captured events"
                                },
                                "dataLakeFolderPath": {
                                  "type": "string",
                                  "description": "The destination folder path for the captured events"
                                }
                              },
                              "description": "Properties describing the storage account, blob container and archive name format for capture destination"
                            }
                          }
                        },
                        "skipEmptyArchives": {
                          "type": "boolean",
                          "description": "A value that indicates whether to Skip Empty Archives"
                        }
                      }
                    },
                    "retentionDescription": {
                      "description": "Event Hub retention settings",
                      "type": "object",
                      "properties": {
                        "cleanupPolicy": {
                          "type": "string",
                          "description": "Enumerates the possible values for cleanup policy",
                          "enum": [
                            "Delete",
                            "Compact"
                          ],
                          "x-ms-enum": {
                            "name": "CleanupPolicyRetentionDescription",
                            "modelAsString": true
                          }
                        },
                        "retentionTimeInHours": {
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue "
                        },
                        "tombstoneRetentionTimeInHours": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
                        }
                      }
                    }
                  },
                  "description": "Properties supplied to the Create Or Update Event Hub operation."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Event Hub operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_List",
        "description": "Lists all the available Namespaces within a subscription, irrespective of the resource groups.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags."
                      },
                      "sku": {
                        "description": "Properties of sku resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of this SKU.",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "type": "string",
                            "description": "The billing tier of this particular SKU.",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "format": "int32",
                            "minimum": 0,
                            "type": "integer",
                            "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "identity": {
                        "description": "Properties of BYOK Identity description",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "ObjectId from the KeyVault",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "TenantId from the KeyVault",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "description": "Recognized Dictionary value.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "Principal Id of user assigned identity",
                                  "type": "string",
                                  "x-ms-client-name": "PrincipalId",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "description": "Client Id of user assigned identity",
                                  "type": "string",
                                  "x-ms-client-name": "ClientId",
                                  "readOnly": true
                                }
                              }
                            },
                            "description": "Properties for User Assigned Identities"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "minimumTlsVersion": {
                            "type": "string",
                            "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning state of the Namespace."
                          },
                          "status": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of the Namespace."
                          },
                          "createdAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The time the Namespace was created."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The time the Namespace was updated."
                          },
                          "serviceBusEndpoint": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Endpoint you can use to perform Service Bus operations."
                          },
                          "clusterArmId": {
                            "type": "string",
                            "description": "Cluster ARM ID of the Namespace."
                          },
                          "metricId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Identifier for Azure Insights metrics."
                          },
                          "isAutoInflateEnabled": {
                            "type": "boolean",
                            "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled",
                              "SecuredByPerimeter"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "maximumThroughputUnits": {
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0,
                            "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                          },
                          "kafkaEnabled": {
                            "type": "boolean",
                            "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                          },
                          "zoneRedundant": {
                            "type": "boolean",
                            "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                          },
                          "encryption": {
                            "description": "Properties of BYOK Encryption description",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "keyVaultProperties": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "keyName": {
                                      "type": "string",
                                      "description": "Name of the Key from KeyVault",
                                      "x-ms-client-name": "KeyName"
                                    },
                                    "keyVaultUri": {
                                      "type": "string",
                                      "description": "Uri of KeyVault",
                                      "x-ms-client-name": "KeyVaultUri"
                                    },
                                    "keyVersion": {
                                      "type": "string",
                                      "description": "Key Version",
                                      "x-ms-client-name": "KeyVersion"
                                    },
                                    "identity": {
                                      "x-ms-client-flatten": true,
                                      "type": "object",
                                      "properties": {
                                        "userAssignedIdentity": {
                                          "type": "string",
                                          "description": "ARM ID of user Identity selected for encryption"
                                        }
                                      }
                                    }
                                  },
                                  "description": "Properties to configure keyVault Properties"
                                },
                                "x-ms-client-name": "KeyVaultProperties",
                                "description": "Properties of KeyVault"
                              },
                              "keySource": {
                                "type": "string",
                                "description": "Enumerates the possible value of keySource for Encryption",
                                "default": "Microsoft.KeyVault",
                                "enum": [
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "keySource",
                                  "modelAsString": false
                                }
                              },
                              "requireInfrastructureEncryption": {
                                "type": "boolean",
                                "description": "Enable Infrastructure Encryption (Double Encryption)"
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "description": "Properties of the PrivateEndpointConnection.",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                                },
                                "location": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The geo-location where the resource lives"
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PrivateLinkConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndPointProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "systemData": {
                                  "readOnly": true,
                                  "description": "The system meta data relating to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The type of identity that last modified the resource."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disableLocalAuth": {
                            "type": "boolean",
                            "description": "This property disables SAS authentication for the Event Hubs namespace."
                          },
                          "alternateName": {
                            "type": "string",
                            "description": "Alternate name specified when alias and namespace names are same."
                          }
                        },
                        "description": "Namespace properties supplied for create namespace operation."
                      }
                    },
                    "description": "Single Namespace item in List or Get Operation"
                  },
                  "description": "Result of the List Namespace operation"
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
                }
              },
              "description": "The response of the List Namespace operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "description": "Lists the available Namespaces within a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags."
                      },
                      "sku": {
                        "description": "Properties of sku resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of this SKU.",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "type": "string",
                            "description": "The billing tier of this particular SKU.",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "format": "int32",
                            "minimum": 0,
                            "type": "integer",
                            "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "identity": {
                        "description": "Properties of BYOK Identity description",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "ObjectId from the KeyVault",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "TenantId from the KeyVault",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "description": "Recognized Dictionary value.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "Principal Id of user assigned identity",
                                  "type": "string",
                                  "x-ms-client-name": "PrincipalId",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "description": "Client Id of user assigned identity",
                                  "type": "string",
                                  "x-ms-client-name": "ClientId",
                                  "readOnly": true
                                }
                              }
                            },
                            "description": "Properties for User Assigned Identities"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "minimumTlsVersion": {
                            "type": "string",
                            "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning state of the Namespace."
                          },
                          "status": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of the Namespace."
                          },
                          "createdAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The time the Namespace was created."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The time the Namespace was updated."
                          },
                          "serviceBusEndpoint": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Endpoint you can use to perform Service Bus operations."
                          },
                          "clusterArmId": {
                            "type": "string",
                            "description": "Cluster ARM ID of the Namespace."
                          },
                          "metricId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Identifier for Azure Insights metrics."
                          },
                          "isAutoInflateEnabled": {
                            "type": "boolean",
                            "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled",
                              "SecuredByPerimeter"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "maximumThroughputUnits": {
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0,
                            "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                          },
                          "kafkaEnabled": {
                            "type": "boolean",
                            "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                          },
                          "zoneRedundant": {
                            "type": "boolean",
                            "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                          },
                          "encryption": {
                            "description": "Properties of BYOK Encryption description",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "keyVaultProperties": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "keyName": {
                                      "type": "string",
                                      "description": "Name of the Key from KeyVault",
                                      "x-ms-client-name": "KeyName"
                                    },
                                    "keyVaultUri": {
                                      "type": "string",
                                      "description": "Uri of KeyVault",
                                      "x-ms-client-name": "KeyVaultUri"
                                    },
                                    "keyVersion": {
                                      "type": "string",
                                      "description": "Key Version",
                                      "x-ms-client-name": "KeyVersion"
                                    },
                                    "identity": {
                                      "x-ms-client-flatten": true,
                                      "type": "object",
                                      "properties": {
                                        "userAssignedIdentity": {
                                          "type": "string",
                                          "description": "ARM ID of user Identity selected for encryption"
                                        }
                                      }
                                    }
                                  },
                                  "description": "Properties to configure keyVault Properties"
                                },
                                "x-ms-client-name": "KeyVaultProperties",
                                "description": "Properties of KeyVault"
                              },
                              "keySource": {
                                "type": "string",
                                "description": "Enumerates the possible value of keySource for Encryption",
                                "default": "Microsoft.KeyVault",
                                "enum": [
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "keySource",
                                  "modelAsString": false
                                }
                              },
                              "requireInfrastructureEncryption": {
                                "type": "boolean",
                                "description": "Enable Infrastructure Encryption (Double Encryption)"
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "description": "Properties of the PrivateEndpointConnection.",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                                },
                                "location": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The geo-location where the resource lives"
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PrivateLinkConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndPointProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "systemData": {
                                  "readOnly": true,
                                  "description": "The system meta data relating to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The type of identity that last modified the resource."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disableLocalAuth": {
                            "type": "boolean",
                            "description": "This property disables SAS authentication for the Event Hubs namespace."
                          },
                          "alternateName": {
                            "type": "string",
                            "description": "Alternate name specified when alias and namespace names are same."
                          }
                        },
                        "description": "Namespace properties supplied for create namespace operation."
                      }
                    },
                    "description": "Single Namespace item in List or Get Operation"
                  },
                  "description": "Result of the List Namespace operation"
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
                }
              },
              "description": "The response of the List Namespace operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of sku resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "clusterArmId": {
                      "type": "string",
                      "description": "Cluster ARM ID of the Namespace."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics."
                    },
                    "isAutoInflateEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "maximumThroughputUnits": {
                      "format": "int32",
                      "type": "integer",
                      "minimum": 0,
                      "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                    },
                    "kafkaEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Key Version",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "identity": {
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Event Hubs namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    }
                  },
                  "description": "Namespace properties supplied for create namespace operation."
                }
              },
              "description": "Single Namespace item in List or Get Operation",
              "required": [
                "location"
              ]
            },
            "description": "Parameters for creating a namespace resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully created.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of sku resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "clusterArmId": {
                      "type": "string",
                      "description": "Cluster ARM ID of the Namespace."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics."
                    },
                    "isAutoInflateEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "maximumThroughputUnits": {
                      "format": "int32",
                      "type": "integer",
                      "minimum": 0,
                      "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                    },
                    "kafkaEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Key Version",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "identity": {
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Event Hubs namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    }
                  },
                  "description": "Namespace properties supplied for create namespace operation."
                }
              },
              "description": "Single Namespace item in List or Get Operation"
            }
          },
          "201": {
            "description": "Namespace create request accepted.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of sku resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "clusterArmId": {
                      "type": "string",
                      "description": "Cluster ARM ID of the Namespace."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics."
                    },
                    "isAutoInflateEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "maximumThroughputUnits": {
                      "format": "int32",
                      "type": "integer",
                      "minimum": 0,
                      "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                    },
                    "kafkaEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Key Version",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "identity": {
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Event Hubs namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    }
                  },
                  "description": "Namespace properties supplied for create namespace operation."
                }
              },
              "description": "Single Namespace item in List or Get Operation"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully deleted."
          },
          "202": {
            "description": "Namespace delete request accepted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "description": "Gets the description of the specified namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace returned successfully.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of sku resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "clusterArmId": {
                      "type": "string",
                      "description": "Cluster ARM ID of the Namespace."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics."
                    },
                    "isAutoInflateEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "maximumThroughputUnits": {
                      "format": "int32",
                      "type": "integer",
                      "minimum": 0,
                      "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                    },
                    "kafkaEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Key Version",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "identity": {
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Event Hubs namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    }
                  },
                  "description": "Namespace properties supplied for create namespace operation."
                }
              },
              "description": "Single Namespace item in List or Get Operation"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Update",
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of sku resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "clusterArmId": {
                      "type": "string",
                      "description": "Cluster ARM ID of the Namespace."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics."
                    },
                    "isAutoInflateEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "maximumThroughputUnits": {
                      "format": "int32",
                      "type": "integer",
                      "minimum": 0,
                      "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                    },
                    "kafkaEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Key Version",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "identity": {
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Event Hubs namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    }
                  },
                  "description": "Namespace properties supplied for create namespace operation."
                }
              },
              "description": "Single Namespace item in List or Get Operation"
            },
            "description": "Parameters for updating a namespace resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully updated.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of sku resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "clusterArmId": {
                      "type": "string",
                      "description": "Cluster ARM ID of the Namespace."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics."
                    },
                    "isAutoInflateEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "maximumThroughputUnits": {
                      "format": "int32",
                      "type": "integer",
                      "minimum": 0,
                      "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                    },
                    "kafkaEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Key Version",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "identity": {
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Event Hubs namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    }
                  },
                  "description": "Namespace properties supplied for create namespace operation."
                }
              },
              "description": "Single Namespace item in List or Get Operation"
            }
          },
          "201": {
            "description": "Namespace update request accepted.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "sku": {
                  "description": "Properties of sku resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the Namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the Namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "clusterArmId": {
                      "type": "string",
                      "description": "Cluster ARM ID of the Namespace."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics."
                    },
                    "isAutoInflateEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "maximumThroughputUnits": {
                      "format": "int32",
                      "type": "integer",
                      "minimum": 0,
                      "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                    },
                    "kafkaEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Key Version",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "identity": {
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Event Hubs namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name specified when alias and namespace names are same."
                    }
                  },
                  "description": "Namespace properties supplied for create namespace operation."
                }
              },
              "description": "Single Namespace item in List or Get Operation"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "Gets the available PrivateEndpointConnections within a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "PrivateEndpointConnections successfully returned.",
            "schema": {
              "description": "Result of the list of all private endpoint connections operation.",
              "properties": {
                "value": {
                  "description": "A collection of private endpoint connection resources.",
                  "type": "array",
                  "items": {
                    "description": "Properties of the PrivateEndpointConnection.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "privateEndpoint": {
                            "description": "The Private Endpoint resource for this Connection.",
                            "properties": {
                              "id": {
                                "description": "The ARM identifier for Private Endpoint.",
                                "type": "string"
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "Details about the state of the connection.",
                            "properties": {
                              "status": {
                                "description": "Status of the connection.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected",
                                  "Disconnected"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "PrivateLinkConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "description": "Description of the connection state.",
                                "type": "string"
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Private Endpoint Connection.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EndPointProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of private endpoint connection resources.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "description": "Creates or updates PrivateEndpointConnections of service namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The PrivateEndpointConnection name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to update Status of PrivateEndPoint Connection to namespace resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Status of PrivateEndPoint Connection Created successfully.",
            "schema": {
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Request to update Status of PrivateEndPoint Connection accepted.",
            "schema": {
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request to update Status of PrivateEndPoint Connection accepted.",
            "schema": {
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The PrivateEndpointConnection name"
          }
        ],
        "responses": {
          "200": {
            "description": "Private Endpoint Connection successfully deleted."
          },
          "202": {
            "description": "Private Endpoint Connection  delete request accepted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets a description for the specified Private Endpoint Connection name.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The PrivateEndpointConnection name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Private Endpoint Connection  successfully returned.",
            "schema": {
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "Namespaces PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_Get",
        "description": "Gets lists of resources that supports Privatelinks.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Private Link resource List",
            "schema": {
              "description": "Result of the List private link resources operation.",
              "properties": {
                "value": {
                  "description": "A collection of private link resources",
                  "type": "array",
                  "items": {
                    "description": "Information of the private link resource.",
                    "properties": {
                      "properties": {
                        "description": "Properties of the private link resource.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string"
                          },
                          "requiredMembers": {
                            "type": "array",
                            "description": "The private link resource required member names.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "The private link resource Private link DNS zone name.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string"
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of private link resources.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations": {
      "get": {
        "tags": [
          "Namespaces NetworkSecurityPerimeterConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterConfiguration_List",
        "description": "Gets list of current NetworkSecurityPerimeterConfiguration for Namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Network Security Perimeter Configuration List",
            "schema": {
              "description": "Result of the List NetworkSecurityPerimeterConfiguration operation.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of NetworkSecurityPerimeterConfigurations",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "Network Security Perimeter related configurations of a given namespace",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "Properties of the Network Security Perimeter Configuration",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation",
                            "enum": [
                              "Unknown",
                              "Creating",
                              "Updating",
                              "Accepted",
                              "InvalidResponse",
                              "Succeeded",
                              "SucceededWithIssues",
                              "Failed",
                              "Deleting",
                              "Deleted",
                              "Canceled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "provisioningIssues": {
                            "description": "List of Provisioning Issues if any",
                            "type": "array",
                            "items": {
                              "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "name": {
                                  "description": "Name of the issue",
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Properties of Provisioning Issue",
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "issueType": {
                                      "description": "Type of Issue",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description of the issue",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "networkSecurityPerimeter": {
                            "description": "NetworkSecurityPerimeter related information",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "id": {
                                "description": "Fully qualified identifier of the resource",
                                "type": "string"
                              },
                              "perimeterGuid": {
                                "description": "Guid of the resource",
                                "type": "string"
                              },
                              "location": {
                                "description": "Location of the resource",
                                "type": "string"
                              }
                            }
                          },
                          "resourceAssociation": {
                            "description": "Information about resource association",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the resource association",
                                "type": "string"
                              },
                              "accessMode": {
                                "description": "Access Mode of the resource association",
                                "enum": [
                                  "NoAssociationMode",
                                  "EnforcedMode",
                                  "LearningMode",
                                  "AuditMode",
                                  "UnspecifiedMode"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ResourceAssociationAccessMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "profile": {
                            "description": "Information about current network profile",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the resource",
                                "type": "string"
                              },
                              "accessRulesVersion": {
                                "description": "Current access rules version",
                                "type": "string"
                              },
                              "accessRules": {
                                "description": "List of Access Rules",
                                "type": "array",
                                "items": {
                                  "description": "Information of Access Rule in Network Profile",
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "id": {
                                      "description": "Fully qualified identifier of the resource",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of the resource",
                                      "type": "string"
                                    },
                                    "properties": {
                                      "description": "Properties of Access Rule",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "direction": {
                                          "description": "Direction of Access Rule",
                                          "enum": [
                                            "Inbound",
                                            "Outbound"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "NspAccessRuleDirection",
                                            "modelAsString": true
                                          }
                                        },
                                        "addressPrefixes": {
                                          "description": "Address prefixes in the CIDR format for inbound rules",
                                          "type": "array",
                                          "items": {
                                            "description": "IP Address",
                                            "type": "string"
                                          }
                                        },
                                        "subscriptions": {
                                          "description": "Subscriptions for inbound rules",
                                          "type": "array",
                                          "items": {
                                            "description": "Subscription for inbound rule",
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                              "id": {
                                                "description": "Fully qualified identifier of subscription",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "networkSecurityPerimeters": {
                                          "description": "NetworkSecurityPerimeters for inbound rules",
                                          "type": "array",
                                          "readOnly": true,
                                          "items": {
                                            "description": "NetworkSecurityPerimeter related information",
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                              "id": {
                                                "description": "Fully qualified identifier of the resource",
                                                "type": "string"
                                              },
                                              "perimeterGuid": {
                                                "description": "Guid of the resource",
                                                "type": "string"
                                              },
                                              "location": {
                                                "description": "Location of the resource",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "fullyQualifiedDomainNames": {
                                          "description": "FQDN for outbound rules",
                                          "type": "array",
                                          "readOnly": true,
                                          "items": {
                                            "description": "Fully qualified domain name",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "isBackingResource": {
                            "readOnly": true,
                            "type": "boolean",
                            "description": "True if the EventHub namespace is backed by another Azure resource and not visible to end users."
                          },
                          "applicableFeatures": {
                            "readOnly": true,
                            "type": "array",
                            "description": "Indicates that the NSP controls related to backing association are only applicable to a specific feature in backing resource's data plane.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "parentAssociationName": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Source Resource Association name"
                          },
                          "sourceResourceId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ARM Id of source resource"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}/reconcile": {
      "post": {
        "tags": [
          "Namespaces NetworkSecurityPerimeterConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterConfigurations_CreateOrUpdate",
        "description": "Refreshes any information about the association.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "resourceAssociationName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The ResourceAssociation Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Association reconciled"
          },
          "202": {
            "description": "Request to reconcile the association accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}": {
      "get": {
        "tags": [
          "Namespaces NetworkSecurityPerimeterConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterConfigurations_GetResourceAssociationName",
        "description": "Return a NetworkSecurityPerimeterConfigurations resourceAssociationName",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "resourceAssociationName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The ResourceAssociation Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Network Security Perimeter Configuration associationProxyName",
            "schema": {
              "description": "Network Security Perimeter related configurations of a given namespace",
              "type": "object",
              "readOnly": true,
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the Network Security Perimeter Configuration",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation",
                      "enum": [
                        "Unknown",
                        "Creating",
                        "Updating",
                        "Accepted",
                        "InvalidResponse",
                        "Succeeded",
                        "SucceededWithIssues",
                        "Failed",
                        "Deleting",
                        "Deleted",
                        "Canceled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "provisioningIssues": {
                      "description": "List of Provisioning Issues if any",
                      "type": "array",
                      "items": {
                        "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "name": {
                            "description": "Name of the issue",
                            "type": "string"
                          },
                          "properties": {
                            "description": "Properties of Provisioning Issue",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "issueType": {
                                "description": "Type of Issue",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the issue",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "networkSecurityPerimeter": {
                      "description": "NetworkSecurityPerimeter related information",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "description": "Fully qualified identifier of the resource",
                          "type": "string"
                        },
                        "perimeterGuid": {
                          "description": "Guid of the resource",
                          "type": "string"
                        },
                        "location": {
                          "description": "Location of the resource",
                          "type": "string"
                        }
                      }
                    },
                    "resourceAssociation": {
                      "description": "Information about resource association",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the resource association",
                          "type": "string"
                        },
                        "accessMode": {
                          "description": "Access Mode of the resource association",
                          "enum": [
                            "NoAssociationMode",
                            "EnforcedMode",
                            "LearningMode",
                            "AuditMode",
                            "UnspecifiedMode"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "ResourceAssociationAccessMode",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "profile": {
                      "description": "Information about current network profile",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the resource",
                          "type": "string"
                        },
                        "accessRulesVersion": {
                          "description": "Current access rules version",
                          "type": "string"
                        },
                        "accessRules": {
                          "description": "List of Access Rules",
                          "type": "array",
                          "items": {
                            "description": "Information of Access Rule in Network Profile",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "id": {
                                "description": "Fully qualified identifier of the resource",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the resource",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the resource",
                                "type": "string"
                              },
                              "properties": {
                                "description": "Properties of Access Rule",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "direction": {
                                    "description": "Direction of Access Rule",
                                    "enum": [
                                      "Inbound",
                                      "Outbound"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "NspAccessRuleDirection",
                                      "modelAsString": true
                                    }
                                  },
                                  "addressPrefixes": {
                                    "description": "Address prefixes in the CIDR format for inbound rules",
                                    "type": "array",
                                    "items": {
                                      "description": "IP Address",
                                      "type": "string"
                                    }
                                  },
                                  "subscriptions": {
                                    "description": "Subscriptions for inbound rules",
                                    "type": "array",
                                    "items": {
                                      "description": "Subscription for inbound rule",
                                      "type": "object",
                                      "readOnly": true,
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified identifier of subscription",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "networkSecurityPerimeters": {
                                    "description": "NetworkSecurityPerimeters for inbound rules",
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "description": "NetworkSecurityPerimeter related information",
                                      "type": "object",
                                      "readOnly": true,
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified identifier of the resource",
                                          "type": "string"
                                        },
                                        "perimeterGuid": {
                                          "description": "Guid of the resource",
                                          "type": "string"
                                        },
                                        "location": {
                                          "description": "Location of the resource",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "fullyQualifiedDomainNames": {
                                    "description": "FQDN for outbound rules",
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "description": "Fully qualified domain name",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "isBackingResource": {
                      "readOnly": true,
                      "type": "boolean",
                      "description": "True if the EventHub namespace is backed by another Azure resource and not visible to end users."
                    },
                    "applicableFeatures": {
                      "readOnly": true,
                      "type": "array",
                      "description": "Indicates that the NSP controls related to backing association are only applicable to a specific feature in backing resource's data plane.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "parentAssociationName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Source Resource Association name"
                    },
                    "sourceResourceId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "ARM Id of source resource"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default": {
      "put": {
        "tags": [
          "NetworkRuleSets"
        ],
        "operationId": "Namespaces_CreateOrUpdateNetworkRuleSet",
        "description": "Create or update NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "NetworkRuleSet properties",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "trustedServiceAccessEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                    },
                    "defaultAction": {
                      "type": "string",
                      "description": "Default Action for Network Rule Set",
                      "enum": [
                        "Allow",
                        "Deny"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultAction",
                        "modelAsString": true
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "items": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "subnet": {
                            "description": "Subnet properties",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource ID of Virtual Network Subnet"
                              }
                            }
                          },
                          "ignoreMissingVnetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
                          }
                        },
                        "description": "The response from the List namespace operation."
                      },
                      "description": "List VirtualNetwork Rules"
                    },
                    "ipRules": {
                      "type": "array",
                      "items": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "ipMask": {
                            "type": "string",
                            "description": "IP Mask"
                          },
                          "action": {
                            "type": "string",
                            "description": "The IP Filter Action",
                            "enum": [
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkRuleIPAction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "The response from the List namespace operation."
                      },
                      "description": "List of IpRules"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of topic resource."
            },
            "description": "The Namespace IpFilterRule."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "NetworkRuleSet properties",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "trustedServiceAccessEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                    },
                    "defaultAction": {
                      "type": "string",
                      "description": "Default Action for Network Rule Set",
                      "enum": [
                        "Allow",
                        "Deny"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultAction",
                        "modelAsString": true
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "items": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "subnet": {
                            "description": "Subnet properties",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource ID of Virtual Network Subnet"
                              }
                            }
                          },
                          "ignoreMissingVnetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
                          }
                        },
                        "description": "The response from the List namespace operation."
                      },
                      "description": "List VirtualNetwork Rules"
                    },
                    "ipRules": {
                      "type": "array",
                      "items": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "ipMask": {
                            "type": "string",
                            "description": "IP Mask"
                          },
                          "action": {
                            "type": "string",
                            "description": "The IP Filter Action",
                            "enum": [
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkRuleIPAction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "The response from the List namespace operation."
                      },
                      "description": "List of IpRules"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of topic resource."
            }
          }
        }
      },
      "get": {
        "tags": [
          "NetworkRuleSets"
        ],
        "operationId": "Namespaces_GetNetworkRuleSet",
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "NetworkRuleSet properties",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "trustedServiceAccessEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                    },
                    "defaultAction": {
                      "type": "string",
                      "description": "Default Action for Network Rule Set",
                      "enum": [
                        "Allow",
                        "Deny"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultAction",
                        "modelAsString": true
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "items": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "subnet": {
                            "description": "Subnet properties",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource ID of Virtual Network Subnet"
                              }
                            }
                          },
                          "ignoreMissingVnetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
                          }
                        },
                        "description": "The response from the List namespace operation."
                      },
                      "description": "List VirtualNetwork Rules"
                    },
                    "ipRules": {
                      "type": "array",
                      "items": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "ipMask": {
                            "type": "string",
                            "description": "IP Mask"
                          },
                          "action": {
                            "type": "string",
                            "description": "The IP Filter Action",
                            "enum": [
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkRuleIPAction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "The response from the List namespace operation."
                      },
                      "description": "List of IpRules"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of topic resource."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets": {
      "get": {
        "tags": [
          "NetworkRuleSets"
        ],
        "operationId": "Namespaces_ListNetworkRuleSet",
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "NetworkRuleSet properties",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "trustedServiceAccessEnabled": {
                            "type": "boolean",
                            "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                          },
                          "defaultAction": {
                            "type": "string",
                            "description": "Default Action for Network Rule Set",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "DefaultAction",
                              "modelAsString": true
                            }
                          },
                          "virtualNetworkRules": {
                            "type": "array",
                            "items": {
                              "x-ms-client-flatten": true,
                              "properties": {
                                "subnet": {
                                  "description": "Subnet properties",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Resource ID of Virtual Network Subnet"
                                    }
                                  }
                                },
                                "ignoreMissingVnetServiceEndpoint": {
                                  "type": "boolean",
                                  "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
                                }
                              },
                              "description": "The response from the List namespace operation."
                            },
                            "description": "List VirtualNetwork Rules"
                          },
                          "ipRules": {
                            "type": "array",
                            "items": {
                              "x-ms-client-flatten": true,
                              "properties": {
                                "ipMask": {
                                  "type": "string",
                                  "description": "IP Mask"
                                },
                                "action": {
                                  "type": "string",
                                  "description": "The IP Filter Action",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "x-ms-enum": {
                                    "name": "NetworkRuleIPAction",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "description": "The response from the List namespace operation."
                            },
                            "description": "List of IpRules"
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
                            "enum": [
                              "Enabled",
                              "Disabled",
                              "SecuredByPerimeter"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccessFlag",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of topic resource."
                  },
                  "description": "Result of the List NetworkRuleSet operation"
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet."
                }
              },
              "description": "The response of the List NetworkRuleSet operation"
            }
          }
        }
      }
    },
    "/providers/Microsoft.EventHub/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available Event Hub REST API operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results.",
              "properties": {
                "value": {
                  "description": "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "description": "A Event Hub REST API operation",
                    "type": "object",
                    "properties": {
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Operation name: {provider}/{resource}/{operation}"
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is a data action",
                        "type": "boolean"
                      },
                      "display": {
                        "description": "Display of the operation",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "description": "Resource provider of the operation",
                            "type": "string",
                            "readOnly": true
                          },
                          "resource": {
                            "description": "Resource of the operation",
                            "type": "string",
                            "readOnly": true
                          },
                          "operation": {
                            "description": "Localized friendly name for the operation",
                            "type": "string",
                            "readOnly": true
                          },
                          "description": {
                            "description": "Localized friendly description for the operation",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "description": "Origin of the operation",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the operation",
                        "type": "object",
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "readOnly": true,
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/quotaConfiguration/default": {
      "patch": {
        "tags": [
          "Event Hubs Clusters Configuration"
        ],
        "operationId": "Configuration_Patch",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The name of the Event Hubs Cluster."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "settings"
              ],
              "type": "object",
              "properties": {
                "settings": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
                }
              },
              "description": "Contains all settings for the cluster."
            },
            "description": "Parameters for creating an Event Hubs Cluster resource."
          }
        ],
        "description": "Replace all specified Event Hubs Cluster settings with those contained in the request body. Leaves the settings not specified in the request body unmodified.",
        "responses": {
          "200": {
            "description": "Event Hubs Cluster settings configuration returned.",
            "schema": {
              "type": "object",
              "properties": {
                "settings": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
                }
              },
              "description": "Contains all settings for the cluster."
            }
          },
          "201": {
            "description": "Event Hubs Cluster setting configuration request successfully accepted.",
            "schema": {
              "type": "object",
              "properties": {
                "settings": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
                }
              },
              "description": "Contains all settings for the cluster."
            }
          },
          "202": {
            "description": "Event Hubs Cluster update request accepted."
          }
        }
      },
      "get": {
        "tags": [
          "Event Hubs Clusters Configuration"
        ],
        "operationId": "Configuration_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the resource group within the azure subscription."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The name of the Event Hubs Cluster."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API Version."
          }
        ],
        "description": "Get all Event Hubs Cluster settings - a collection of key/value pairs which represent the quotas and settings imposed on the cluster.",
        "responses": {
          "200": {
            "description": "Event Hubs Cluster settings configuration returned.",
            "schema": {
              "type": "object",
              "properties": {
                "settings": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
                }
              },
              "description": "Contains all settings for the cluster."
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationGroupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
                  },
                  "clientAppGroupIdentifier": {
                    "type": "string",
                    "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "discriminator": "type",
                      "description": "Properties of the Application Group policy",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The Name of this policy"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "ThrottlingPolicy"
                          ],
                          "x-ms-enum": {
                            "name": "ApplicationGroupPolicyType",
                            "modelAsString": true
                          },
                          "description": "Application Group Policy types"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    },
                    "x-ms-identifiers": [],
                    "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."
                  }
                },
                "required": [
                  "clientAppGroupIdentifier"
                ]
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "The Application Group object"
          },
          "description": "Result of the List Application Groups operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
        }
      },
      "description": "The response from the List Application Groups operation."
    },
    "ApplicationGroup": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "isEnabled": {
              "type": "boolean",
              "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
            },
            "clientAppGroupIdentifier": {
              "type": "string",
              "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "type",
                "description": "Properties of the Application Group policy",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The Name of this policy"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "ThrottlingPolicy"
                    ],
                    "x-ms-enum": {
                      "name": "ApplicationGroupPolicyType",
                      "modelAsString": true
                    },
                    "description": "Application Group Policy types"
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "x-ms-identifiers": [],
              "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."
            }
          },
          "required": [
            "clientAppGroupIdentifier"
          ]
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "The Application Group object"
    },
    "ApplicationGroupPolicy": {
      "type": "object",
      "discriminator": "type",
      "description": "Properties of the Application Group policy",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name of this policy"
        },
        "type": {
          "type": "string",
          "enum": [
            "ThrottlingPolicy"
          ],
          "x-ms-enum": {
            "name": "ApplicationGroupPolicyType",
            "modelAsString": true
          },
          "description": "Application Group Policy types"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ThrottlingPolicy": {
      "type": "object",
      "x-ms-discriminator-value": "ThrottlingPolicy",
      "description": "Properties of the throttling policy",
      "properties": {
        "rateLimitThreshold": {
          "format": "int64",
          "type": "integer",
          "description": "The Threshold limit above which the application group will be throttled.Rate limit is always per second."
        },
        "metricId": {
          "type": "string",
          "description": "Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal",
          "enum": [
            "IncomingBytes",
            "OutgoingBytes",
            "IncomingMessages",
            "OutgoingMessages"
          ],
          "x-ms-enum": {
            "name": "MetricId",
            "modelAsString": true
          }
        }
      },
      "required": [
        "rateLimitThreshold",
        "metricId"
      ],
      "allOf": [
        {
          "type": "object",
          "discriminator": "type",
          "description": "Properties of the Application Group policy",
          "properties": {
            "name": {
              "type": "string",
              "description": "The Name of this policy"
            },
            "type": {
              "type": "string",
              "enum": [
                "ThrottlingPolicy"
              ],
              "x-ms-enum": {
                "name": "ApplicationGroupPolicyType",
                "modelAsString": true
              },
              "description": "Application Group Policy types"
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      ]
    },
    "AuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "rights": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Manage",
                        "Send",
                        "Listen"
                      ],
                      "x-ms-enum": {
                        "name": "AccessRights",
                        "modelAsString": true
                      }
                    },
                    "description": "The rights associated with the rule."
                  }
                },
                "required": [
                  "rights"
                ],
                "description": "Properties supplied to create or update AuthorizationRule"
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Single item in a List or Get AuthorizationRule operation"
          },
          "description": "Result of the List Authorization Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
        }
      },
      "description": "The response from the List namespace operation."
    },
    "AuthorizationRule": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "rights": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": true
                }
              },
              "description": "The rights associated with the rule."
            }
          },
          "required": [
            "rights"
          ],
          "description": "Properties supplied to create or update AuthorizationRule"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Single item in a List or Get AuthorizationRule operation"
    },
    "AccessKeys": {
      "properties": {
        "primaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Primary connection string of the created namespace AuthorizationRule."
        },
        "secondaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Secondary connection string of the created namespace AuthorizationRule."
        },
        "aliasPrimaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Primary connection string of the alias if GEO DR is enabled"
        },
        "aliasSecondaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Secondary  connection string of the alias if GEO DR is enabled"
        },
        "primaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "secondaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "keyName": {
          "readOnly": true,
          "type": "string",
          "description": "A string that describes the AuthorizationRule."
        }
      },
      "description": "Namespace/EventHub Connection String"
    },
    "RegenerateAccessKeyParameters": {
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The access key to regenerate.",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": true
          }
        },
        "key": {
          "type": "string",
          "description": "Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType"
        }
      },
      "required": [
        "keyType"
      ],
      "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
    },
    "AvailableClustersList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Location fo the Available Cluster"
              }
            },
            "description": "Pre-provisioned and readily available Event Hubs Cluster count per region."
          },
          "description": "The count of readily available and pre-provisioned Event Hubs Clusters per region."
        }
      },
      "description": "The response of the List Available Clusters operation."
    },
    "AvailableCluster": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location fo the Available Cluster"
        }
      },
      "description": "Pre-provisioned and readily available Event Hubs Cluster count per region."
    },
    "UnavailableReason": {
      "type": "string",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": false
      },
      "description": "Specifies the reason for the unavailability of the service."
    },
    "CheckNameAvailabilityParameter": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name to check the namespace name availability"
        }
      },
      "required": [
        "name"
      ],
      "description": "Parameter supplied to check Namespace name availability operation "
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The detailed info regarding the reason associated with the Namespace."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false."
        },
        "reason": {
          "description": "The reason for unavailability of a Namespace.",
          "type": "string",
          "enum": [
            "None",
            "InvalidName",
            "SubscriptionIsDisabled",
            "NameInUse",
            "NameInLockdown",
            "TooManyNamespaceInCurrentSubscription"
          ],
          "x-ms-enum": {
            "name": "UnavailableReason",
            "modelAsString": false
          }
        }
      },
      "description": "The Result of the CheckNameAvailability operation"
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "sku": {
          "description": "Properties of the cluster SKU.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of this SKU.",
              "enum": [
                "Dedicated"
              ],
              "x-ms-enum": {
                "name": "ClusterSkuName",
                "modelAsString": true
              }
            },
            "capacity": {
              "format": "int32",
              "minimum": 1,
              "type": "integer",
              "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
            }
          },
          "required": [
            "name"
          ]
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        },
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "createdAt": {
              "readOnly": true,
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was created."
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unknown",
                "Creating",
                "Deleting",
                "Scaling",
                "Active",
                "Failed",
                "Succeeded",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              },
              "description": "Provisioning state of the Cluster."
            },
            "updatedAt": {
              "readOnly": true,
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was last updated."
            },
            "metricId": {
              "readOnly": true,
              "type": "string",
              "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "description": "Status of the Cluster resource"
            },
            "supportsScaling": {
              "type": "boolean",
              "description": "A value that indicates whether Scaling is Supported."
            }
          },
          "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
        }
      },
      "description": "Single Event Hubs Cluster resource in List or Get operations."
    },
    "ClusterSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Dedicated"
          ],
          "x-ms-enum": {
            "name": "ClusterSkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "minimum": 1,
          "type": "integer",
          "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU parameters particular to a cluster instance."
    },
    "ClusterListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "Resource location."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags."
              },
              "sku": {
                "description": "Properties of the cluster SKU.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of this SKU.",
                    "enum": [
                      "Dedicated"
                    ],
                    "x-ms-enum": {
                      "name": "ClusterSkuName",
                      "modelAsString": true
                    }
                  },
                  "capacity": {
                    "format": "int32",
                    "minimum": 1,
                    "type": "integer",
                    "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              },
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "createdAt": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The UTC time when the Event Hubs Cluster was created."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Unknown",
                      "Creating",
                      "Deleting",
                      "Scaling",
                      "Active",
                      "Failed",
                      "Succeeded",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "provisioningState",
                      "modelAsString": true
                    },
                    "description": "Provisioning state of the Cluster."
                  },
                  "updatedAt": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The UTC time when the Event Hubs Cluster was last updated."
                  },
                  "metricId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Status of the Cluster resource"
                  },
                  "supportsScaling": {
                    "type": "boolean",
                    "description": "A value that indicates whether Scaling is Supported."
                  }
                },
                "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
              }
            },
            "description": "Single Event Hubs Cluster resource in List or Get operations."
          },
          "description": "The Event Hubs Clusters present in the List Event Hubs operation results."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters."
        }
      },
      "description": "The response of the List Event Hubs Clusters operation."
    },
    "EHNamespaceIdListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id parameter"
              }
            },
            "description": "The full ARM ID of an Event Hubs Namespace"
          },
          "description": "Result of the List Namespace IDs operation"
        }
      },
      "description": "The response of the List Namespace IDs operation"
    },
    "EHNamespaceIdContainer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id parameter"
        }
      },
      "description": "The full ARM ID of an Event Hubs Namespace"
    },
    "SchemaGroup": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "updatedAtUtc": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "Exact time the Schema Group was updated"
            },
            "createdAtUtc": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "Exact time the Schema Group was created."
            },
            "eTag": {
              "readOnly": true,
              "format": "uuid",
              "type": "string",
              "description": "The ETag value."
            },
            "groupProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "dictionary object for SchemaGroup group properties"
            },
            "schemaCompatibility": {
              "type": "string",
              "description": "",
              "enum": [
                "None",
                "Backward",
                "Forward"
              ],
              "x-ms-enum": {
                "name": "SchemaCompatibility",
                "modelAsString": true
              }
            },
            "schemaType": {
              "type": "string",
              "description": "",
              "enum": [
                "Unknown",
                "Avro"
              ],
              "x-ms-enum": {
                "name": "SchemaType",
                "modelAsString": true
              }
            }
          },
          "description": ""
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Single item in List or Get Schema Group operation"
    },
    "SchemaGroupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "updatedAtUtc": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "Exact time the Schema Group was updated"
                  },
                  "createdAtUtc": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "Exact time the Schema Group was created."
                  },
                  "eTag": {
                    "readOnly": true,
                    "format": "uuid",
                    "type": "string",
                    "description": "The ETag value."
                  },
                  "groupProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "dictionary object for SchemaGroup group properties"
                  },
                  "schemaCompatibility": {
                    "type": "string",
                    "description": "",
                    "enum": [
                      "None",
                      "Backward",
                      "Forward"
                    ],
                    "x-ms-enum": {
                      "name": "SchemaCompatibility",
                      "modelAsString": true
                    }
                  },
                  "schemaType": {
                    "type": "string",
                    "description": "",
                    "enum": [
                      "Unknown",
                      "Avro"
                    ],
                    "x-ms-enum": {
                      "name": "SchemaType",
                      "modelAsString": true
                    }
                  }
                },
                "description": ""
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Single item in List or Get Schema Group operation"
          },
          "description": "Result of the List SchemaGroups operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Schema Groups."
        }
      },
      "description": "The result of the List SchemaGroup operation."
    },
    "ConsumerGroup": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "Exact time the message was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The exact time the message was updated."
            },
            "userMetadata": {
              "type": "string",
              "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
            }
          },
          "description": "Single item in List or Get Consumer group operation"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Single item in List or Get Consumer group operation"
    },
    "ConsumerGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "createdAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "Exact time the message was created."
                  },
                  "updatedAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "The exact time the message was updated."
                  },
                  "userMetadata": {
                    "type": "string",
                    "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
                  }
                },
                "description": "Single item in List or Get Consumer group operation"
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Single item in List or Get Consumer group operation"
          },
          "description": "Result of the List Consumer Group operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group"
        }
      },
      "description": "The result to the List Consumer Group operation."
    },
    "ArmDisasterRecovery": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
              "enum": [
                "Accepted",
                "Succeeded",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStateDR",
                "modelAsString": false
              }
            },
            "partnerNamespace": {
              "type": "string",
              "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name specified when alias and namespace names are same."
            },
            "role": {
              "readOnly": true,
              "type": "string",
              "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
              "enum": [
                "Primary",
                "PrimaryNotReplicating",
                "Secondary"
              ],
              "x-ms-enum": {
                "name": "RoleDisasterRecovery",
                "modelAsString": false
              }
            },
            "pendingReplicationOperationsCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of entities pending to be replicated."
            }
          },
          "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
    },
    "ArmDisasterRecoveryListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                    "enum": [
                      "Accepted",
                      "Succeeded",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStateDR",
                      "modelAsString": false
                    }
                  },
                  "partnerNamespace": {
                    "type": "string",
                    "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                  },
                  "alternateName": {
                    "type": "string",
                    "description": "Alternate name specified when alias and namespace names are same."
                  },
                  "role": {
                    "readOnly": true,
                    "type": "string",
                    "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                    "enum": [
                      "Primary",
                      "PrimaryNotReplicating",
                      "Secondary"
                    ],
                    "x-ms-enum": {
                      "name": "RoleDisasterRecovery",
                      "modelAsString": false
                    }
                  },
                  "pendingReplicationOperationsCount": {
                    "readOnly": true,
                    "format": "int64",
                    "type": "integer",
                    "description": "Number of entities pending to be replicated."
                  }
                },
                "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
          },
          "description": "List of Alias(Disaster Recovery configurations)"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)"
        }
      },
      "description": "The result of the List Alias(Disaster Recovery configuration) operation."
    },
    "CaptureDescription": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "A value that indicates whether capture description is enabled. "
        },
        "encoding": {
          "type": "string",
          "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
          "enum": [
            "Avro",
            "AvroDeflate"
          ],
          "x-ms-enum": {
            "name": "EncodingCaptureDescription",
            "modelAsString": false
          }
        },
        "intervalInSeconds": {
          "format": "int32",
          "type": "integer",
          "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
        },
        "sizeLimitInBytes": {
          "format": "int32",
          "type": "integer",
          "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
        },
        "destination": {
          "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for capture destination"
            },
            "identity": {
              "type": "object",
              "description": "A value that indicates whether capture description is enabled.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of Azure Active Directory Managed Identity.",
                  "enum": [
                    "SystemAssigned",
                    "UserAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "CaptureIdentityType",
                    "modelAsString": false
                  }
                },
                "userAssignedIdentity": {
                  "type": "string",
                  "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
                }
              }
            },
            "properties": {
              "x-ms-client-flatten": true,
              "properties": {
                "storageAccountResourceId": {
                  "type": "string",
                  "description": "Resource id of the storage account to be used to create the blobs"
                },
                "blobContainer": {
                  "type": "string",
                  "description": "Blob container Name"
                },
                "archiveNameFormat": {
                  "type": "string",
                  "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
                },
                "dataLakeSubscriptionId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Subscription Id of Azure Data Lake Store"
                },
                "dataLakeAccountName": {
                  "type": "string",
                  "description": "The Azure Data Lake Store name for the captured events"
                },
                "dataLakeFolderPath": {
                  "type": "string",
                  "description": "The destination folder path for the captured events"
                }
              },
              "description": "Properties describing the storage account, blob container and archive name format for capture destination"
            }
          }
        },
        "skipEmptyArchives": {
          "type": "boolean",
          "description": "A value that indicates whether to Skip Empty Archives"
        }
      },
      "description": "Properties to configure capture description for eventhub"
    },
    "RetentionDescription": {
      "type": "object",
      "properties": {
        "cleanupPolicy": {
          "type": "string",
          "description": "Enumerates the possible values for cleanup policy",
          "enum": [
            "Delete",
            "Compact"
          ],
          "x-ms-enum": {
            "name": "CleanupPolicyRetentionDescription",
            "modelAsString": true
          }
        },
        "retentionTimeInHours": {
          "format": "int64",
          "type": "integer",
          "description": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue "
        },
        "tombstoneRetentionTimeInHours": {
          "format": "int32",
          "type": "integer",
          "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
        }
      },
      "description": "Properties to configure retention settings for the  eventhub"
    },
    "Eventhub": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "partitionIds": {
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Current number of shards on the Event Hub."
            },
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "Exact time the Event Hub was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The exact time the message was updated."
            },
            "messageRetentionInDays": {
              "format": "int64",
              "type": "integer",
              "minimum": 1,
              "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"
            },
            "partitionCount": {
              "format": "int64",
              "type": "integer",
              "minimum": 1,
              "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
            },
            "status": {
              "type": "string",
              "description": "Enumerates the possible values for the status of the Event Hub.",
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "EntityStatus",
                "modelAsString": false
              }
            },
            "userMetadata": {
              "type": "string",
              "description": "Gets and Sets Metadata of User."
            },
            "captureDescription": {
              "description": "Properties of capture description",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "A value that indicates whether capture description is enabled. "
                },
                "encoding": {
                  "type": "string",
                  "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
                  "enum": [
                    "Avro",
                    "AvroDeflate"
                  ],
                  "x-ms-enum": {
                    "name": "EncodingCaptureDescription",
                    "modelAsString": false
                  }
                },
                "intervalInSeconds": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
                },
                "sizeLimitInBytes": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
                },
                "destination": {
                  "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name for capture destination"
                    },
                    "identity": {
                      "type": "object",
                      "description": "A value that indicates whether capture description is enabled.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of Azure Active Directory Managed Identity.",
                          "enum": [
                            "SystemAssigned",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "CaptureIdentityType",
                            "modelAsString": false
                          }
                        },
                        "userAssignedIdentity": {
                          "type": "string",
                          "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
                        }
                      }
                    },
                    "properties": {
                      "x-ms-client-flatten": true,
                      "properties": {
                        "storageAccountResourceId": {
                          "type": "string",
                          "description": "Resource id of the storage account to be used to create the blobs"
                        },
                        "blobContainer": {
                          "type": "string",
                          "description": "Blob container Name"
                        },
                        "archiveNameFormat": {
                          "type": "string",
                          "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
                        },
                        "dataLakeSubscriptionId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Subscription Id of Azure Data Lake Store"
                        },
                        "dataLakeAccountName": {
                          "type": "string",
                          "description": "The Azure Data Lake Store name for the captured events"
                        },
                        "dataLakeFolderPath": {
                          "type": "string",
                          "description": "The destination folder path for the captured events"
                        }
                      },
                      "description": "Properties describing the storage account, blob container and archive name format for capture destination"
                    }
                  }
                },
                "skipEmptyArchives": {
                  "type": "boolean",
                  "description": "A value that indicates whether to Skip Empty Archives"
                }
              }
            },
            "retentionDescription": {
              "description": "Event Hub retention settings",
              "type": "object",
              "properties": {
                "cleanupPolicy": {
                  "type": "string",
                  "description": "Enumerates the possible values for cleanup policy",
                  "enum": [
                    "Delete",
                    "Compact"
                  ],
                  "x-ms-enum": {
                    "name": "CleanupPolicyRetentionDescription",
                    "modelAsString": true
                  }
                },
                "retentionTimeInHours": {
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue "
                },
                "tombstoneRetentionTimeInHours": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
                }
              }
            }
          },
          "description": "Properties supplied to the Create Or Update Event Hub operation."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Single item in List or Get Event Hub operation"
    },
    "EventHubListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "partitionIds": {
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Current number of shards on the Event Hub."
                  },
                  "createdAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "Exact time the Event Hub was created."
                  },
                  "updatedAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "The exact time the message was updated."
                  },
                  "messageRetentionInDays": {
                    "format": "int64",
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"
                  },
                  "partitionCount": {
                    "format": "int64",
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
                  },
                  "status": {
                    "type": "string",
                    "description": "Enumerates the possible values for the status of the Event Hub.",
                    "enum": [
                      "Active",
                      "Disabled",
                      "Restoring",
                      "SendDisabled",
                      "ReceiveDisabled",
                      "Creating",
                      "Deleting",
                      "Renaming",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "EntityStatus",
                      "modelAsString": false
                    }
                  },
                  "userMetadata": {
                    "type": "string",
                    "description": "Gets and Sets Metadata of User."
                  },
                  "captureDescription": {
                    "description": "Properties of capture description",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "A value that indicates whether capture description is enabled. "
                      },
                      "encoding": {
                        "type": "string",
                        "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
                        "enum": [
                          "Avro",
                          "AvroDeflate"
                        ],
                        "x-ms-enum": {
                          "name": "EncodingCaptureDescription",
                          "modelAsString": false
                        }
                      },
                      "intervalInSeconds": {
                        "format": "int32",
                        "type": "integer",
                        "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
                      },
                      "sizeLimitInBytes": {
                        "format": "int32",
                        "type": "integer",
                        "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
                      },
                      "destination": {
                        "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name for capture destination"
                          },
                          "identity": {
                            "type": "object",
                            "description": "A value that indicates whether capture description is enabled.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of Azure Active Directory Managed Identity.",
                                "enum": [
                                  "SystemAssigned",
                                  "UserAssigned"
                                ],
                                "x-ms-enum": {
                                  "name": "CaptureIdentityType",
                                  "modelAsString": false
                                }
                              },
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
                              }
                            }
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "properties": {
                              "storageAccountResourceId": {
                                "type": "string",
                                "description": "Resource id of the storage account to be used to create the blobs"
                              },
                              "blobContainer": {
                                "type": "string",
                                "description": "Blob container Name"
                              },
                              "archiveNameFormat": {
                                "type": "string",
                                "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
                              },
                              "dataLakeSubscriptionId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Subscription Id of Azure Data Lake Store"
                              },
                              "dataLakeAccountName": {
                                "type": "string",
                                "description": "The Azure Data Lake Store name for the captured events"
                              },
                              "dataLakeFolderPath": {
                                "type": "string",
                                "description": "The destination folder path for the captured events"
                              }
                            },
                            "description": "Properties describing the storage account, blob container and archive name format for capture destination"
                          }
                        }
                      },
                      "skipEmptyArchives": {
                        "type": "boolean",
                        "description": "A value that indicates whether to Skip Empty Archives"
                      }
                    }
                  },
                  "retentionDescription": {
                    "description": "Event Hub retention settings",
                    "type": "object",
                    "properties": {
                      "cleanupPolicy": {
                        "type": "string",
                        "description": "Enumerates the possible values for cleanup policy",
                        "enum": [
                          "Delete",
                          "Compact"
                        ],
                        "x-ms-enum": {
                          "name": "CleanupPolicyRetentionDescription",
                          "modelAsString": true
                        }
                      },
                      "retentionTimeInHours": {
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue "
                      },
                      "tombstoneRetentionTimeInHours": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
                      }
                    }
                  }
                },
                "description": "Properties supplied to the Create Or Update Event Hub operation."
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Single item in List or Get Event Hub operation"
          },
          "description": "Result of the List EventHubs operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of EventHubs."
        }
      },
      "description": "The result of the List EventHubs operation."
    },
    "CaptureIdentity": {
      "type": "object",
      "description": "A value that indicates whether capture description is enabled.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of Azure Active Directory Managed Identity.",
          "enum": [
            "SystemAssigned",
            "UserAssigned"
          ],
          "x-ms-enum": {
            "name": "CaptureIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentity": {
          "type": "string",
          "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
        }
      }
    },
    "Destination": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for capture destination"
        },
        "identity": {
          "type": "object",
          "description": "A value that indicates whether capture description is enabled.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of Azure Active Directory Managed Identity.",
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "x-ms-enum": {
                "name": "CaptureIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentity": {
              "type": "string",
              "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "storageAccountResourceId": {
              "type": "string",
              "description": "Resource id of the storage account to be used to create the blobs"
            },
            "blobContainer": {
              "type": "string",
              "description": "Blob container Name"
            },
            "archiveNameFormat": {
              "type": "string",
              "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
            },
            "dataLakeSubscriptionId": {
              "type": "string",
              "format": "uuid",
              "description": "Subscription Id of Azure Data Lake Store"
            },
            "dataLakeAccountName": {
              "type": "string",
              "description": "The Azure Data Lake Store name for the captured events"
            },
            "dataLakeFolderPath": {
              "type": "string",
              "description": "The destination folder path for the captured events"
            }
          },
          "description": "Properties describing the storage account, blob container and archive name format for capture destination"
        }
      },
      "description": "Capture storage details for capture description"
    },
    "EHNamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "Resource location."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags."
              },
              "sku": {
                "description": "Properties of sku resource",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of this SKU.",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": true
                    }
                  },
                  "tier": {
                    "type": "string",
                    "description": "The billing tier of this particular SKU.",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": true
                    }
                  },
                  "capacity": {
                    "format": "int32",
                    "minimum": 0,
                    "type": "integer",
                    "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "identity": {
                "description": "Properties of BYOK Identity description",
                "x-ms-client-flatten": true,
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "ObjectId from the KeyVault",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "TenantId from the KeyVault",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": false
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "additionalProperties": {
                      "description": "Recognized Dictionary value.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "description": "Principal Id of user assigned identity",
                          "type": "string",
                          "x-ms-client-name": "PrincipalId",
                          "readOnly": true
                        },
                        "clientId": {
                          "description": "Client Id of user assigned identity",
                          "type": "string",
                          "x-ms-client-name": "ClientId",
                          "readOnly": true
                        }
                      }
                    },
                    "description": "Properties for User Assigned Identities"
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "minimumTlsVersion": {
                    "type": "string",
                    "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                    "enum": [
                      "1.0",
                      "1.1",
                      "1.2"
                    ],
                    "x-ms-enum": {
                      "name": "TlsVersion",
                      "modelAsString": true
                    }
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Provisioning state of the Namespace."
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Status of the Namespace."
                  },
                  "createdAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "The time the Namespace was created."
                  },
                  "updatedAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "The time the Namespace was updated."
                  },
                  "serviceBusEndpoint": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Endpoint you can use to perform Service Bus operations."
                  },
                  "clusterArmId": {
                    "type": "string",
                    "description": "Cluster ARM ID of the Namespace."
                  },
                  "metricId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Identifier for Azure Insights metrics."
                  },
                  "isAutoInflateEnabled": {
                    "type": "boolean",
                    "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "publicNetworkAccess": {
                    "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                    "enum": [
                      "Enabled",
                      "Disabled",
                      "SecuredByPerimeter"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  },
                  "maximumThroughputUnits": {
                    "format": "int32",
                    "type": "integer",
                    "minimum": 0,
                    "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
                  },
                  "kafkaEnabled": {
                    "type": "boolean",
                    "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "zoneRedundant": {
                    "type": "boolean",
                    "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  },
                  "encryption": {
                    "description": "Properties of BYOK Encryption description",
                    "x-ms-client-flatten": true,
                    "properties": {
                      "keyVaultProperties": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "Name of the Key from KeyVault",
                              "x-ms-client-name": "KeyName"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "description": "Uri of KeyVault",
                              "x-ms-client-name": "KeyVaultUri"
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "Key Version",
                              "x-ms-client-name": "KeyVersion"
                            },
                            "identity": {
                              "x-ms-client-flatten": true,
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "ARM ID of user Identity selected for encryption"
                                }
                              }
                            }
                          },
                          "description": "Properties to configure keyVault Properties"
                        },
                        "x-ms-client-name": "KeyVaultProperties",
                        "description": "Properties of KeyVault"
                      },
                      "keySource": {
                        "type": "string",
                        "description": "Enumerates the possible value of keySource for Encryption",
                        "default": "Microsoft.KeyVault",
                        "enum": [
                          "Microsoft.KeyVault"
                        ],
                        "x-ms-enum": {
                          "name": "keySource",
                          "modelAsString": false
                        }
                      },
                      "requireInfrastructureEncryption": {
                        "type": "boolean",
                        "description": "Enable Infrastructure Encryption (Double Encryption)"
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "description": "List of private endpoint connections.",
                    "type": "array",
                    "items": {
                      "description": "Properties of the PrivateEndpointConnection.",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                        },
                        "location": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The geo-location where the resource lives"
                        },
                        "properties": {
                          "description": "Properties of the PrivateEndpointConnection.",
                          "x-ms-client-flatten": true,
                          "properties": {
                            "privateEndpoint": {
                              "description": "The Private Endpoint resource for this Connection.",
                              "properties": {
                                "id": {
                                  "description": "The ARM identifier for Private Endpoint.",
                                  "type": "string"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Details about the state of the connection.",
                              "properties": {
                                "status": {
                                  "description": "Status of the connection.",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PrivateLinkConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "description": "Description of the connection state.",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the Private Endpoint Connection.",
                              "enum": [
                                "Creating",
                                "Updating",
                                "Deleting",
                                "Succeeded",
                                "Canceled",
                                "Failed"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndPointProvisioningState",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "systemData": {
                          "readOnly": true,
                          "description": "The system meta data relating to this resource.",
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The type of identity that last modified the resource."
                            }
                          }
                        }
                      }
                    }
                  },
                  "disableLocalAuth": {
                    "type": "boolean",
                    "description": "This property disables SAS authentication for the Event Hubs namespace."
                  },
                  "alternateName": {
                    "type": "string",
                    "description": "Alternate name specified when alias and namespace names are same."
                  }
                },
                "description": "Namespace properties supplied for create namespace operation."
              }
            },
            "description": "Single Namespace item in List or Get Operation"
          },
          "description": "Result of the List Namespace operation"
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
        }
      },
      "description": "The response of the List Namespace operation"
    },
    "EHNamespace": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "sku": {
          "description": "Properties of sku resource",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of this SKU.",
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "tier": {
              "type": "string",
              "description": "The billing tier of this particular SKU.",
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true
              }
            },
            "capacity": {
              "format": "int32",
              "minimum": 0,
              "type": "integer",
              "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
            }
          },
          "required": [
            "name"
          ]
        },
        "identity": {
          "description": "Properties of BYOK Identity description",
          "x-ms-client-flatten": true,
          "properties": {
            "principalId": {
              "type": "string",
              "description": "ObjectId from the KeyVault",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "TenantId from the KeyVault",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity.",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "description": "Recognized Dictionary value.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "Principal Id of user assigned identity",
                    "type": "string",
                    "x-ms-client-name": "PrincipalId",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "Client Id of user assigned identity",
                    "type": "string",
                    "x-ms-client-name": "ClientId",
                    "readOnly": true
                  }
                }
              },
              "description": "Properties for User Assigned Identities"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning state of the Namespace."
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "description": "Status of the Namespace."
            },
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the Namespace was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the Namespace was updated."
            },
            "serviceBusEndpoint": {
              "readOnly": true,
              "type": "string",
              "description": "Endpoint you can use to perform Service Bus operations."
            },
            "clusterArmId": {
              "type": "string",
              "description": "Cluster ARM ID of the Namespace."
            },
            "metricId": {
              "readOnly": true,
              "type": "string",
              "description": "Identifier for Azure Insights metrics."
            },
            "isAutoInflateEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled.",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "maximumThroughputUnits": {
              "format": "int32",
              "type": "integer",
              "minimum": 0,
              "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
            },
            "kafkaEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
            },
            "zoneRedundant": {
              "type": "boolean",
              "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
            },
            "encryption": {
              "description": "Properties of BYOK Encryption description",
              "x-ms-client-flatten": true,
              "properties": {
                "keyVaultProperties": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "keyName": {
                        "type": "string",
                        "description": "Name of the Key from KeyVault",
                        "x-ms-client-name": "KeyName"
                      },
                      "keyVaultUri": {
                        "type": "string",
                        "description": "Uri of KeyVault",
                        "x-ms-client-name": "KeyVaultUri"
                      },
                      "keyVersion": {
                        "type": "string",
                        "description": "Key Version",
                        "x-ms-client-name": "KeyVersion"
                      },
                      "identity": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "ARM ID of user Identity selected for encryption"
                          }
                        }
                      }
                    },
                    "description": "Properties to configure keyVault Properties"
                  },
                  "x-ms-client-name": "KeyVaultProperties",
                  "description": "Properties of KeyVault"
                },
                "keySource": {
                  "type": "string",
                  "description": "Enumerates the possible value of keySource for Encryption",
                  "default": "Microsoft.KeyVault",
                  "enum": [
                    "Microsoft.KeyVault"
                  ],
                  "x-ms-enum": {
                    "name": "keySource",
                    "modelAsString": false
                  }
                },
                "requireInfrastructureEncryption": {
                  "type": "boolean",
                  "description": "Enable Infrastructure Encryption (Double Encryption)"
                }
              }
            },
            "privateEndpointConnections": {
              "description": "List of private endpoint connections.",
              "type": "array",
              "items": {
                "description": "Properties of the PrivateEndpointConnection.",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                  },
                  "location": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The geo-location where the resource lives"
                  },
                  "properties": {
                    "description": "Properties of the PrivateEndpointConnection.",
                    "x-ms-client-flatten": true,
                    "properties": {
                      "privateEndpoint": {
                        "description": "The Private Endpoint resource for this Connection.",
                        "properties": {
                          "id": {
                            "description": "The ARM identifier for Private Endpoint.",
                            "type": "string"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Details about the state of the connection.",
                        "properties": {
                          "status": {
                            "description": "Status of the connection.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrivateLinkConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Description of the connection state.",
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the Private Endpoint Connection.",
                        "enum": [
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Succeeded",
                          "Canceled",
                          "Failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "EndPointProvisioningState",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "systemData": {
                    "readOnly": true,
                    "description": "The system meta data relating to this resource.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The type of identity that last modified the resource."
                      }
                    }
                  }
                }
              }
            },
            "disableLocalAuth": {
              "type": "boolean",
              "description": "This property disables SAS authentication for the Event Hubs namespace."
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name specified when alias and namespace names are same."
            }
          },
          "description": "Namespace properties supplied for create namespace operation."
        }
      },
      "description": "Single Namespace item in List or Get Operation"
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "The billing tier of this particular SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "minimum": 0,
          "type": "integer",
          "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU parameters supplied to the create namespace operation"
    },
    "Identity": {
      "x-ms-client-flatten": true,
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of managed service identity.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "description": "Recognized Dictionary value.",
            "type": "object",
            "properties": {
              "principalId": {
                "description": "Principal Id of user assigned identity",
                "type": "string",
                "x-ms-client-name": "PrincipalId",
                "readOnly": true
              },
              "clientId": {
                "description": "Client Id of user assigned identity",
                "type": "string",
                "x-ms-client-name": "ClientId",
                "readOnly": true
              }
            }
          },
          "description": "Properties for User Assigned Identities"
        }
      },
      "description": "Properties to configure Identity for Bring your Own Keys"
    },
    "UserAssignedIdentity": {
      "description": "Recognized Dictionary value.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "PrincipalId",
          "readOnly": true
        },
        "clientId": {
          "description": "Client Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "ClientId",
          "readOnly": true
        }
      }
    },
    "Encryption": {
      "x-ms-client-flatten": true,
      "properties": {
        "keyVaultProperties": {
          "type": "array",
          "items": {
            "properties": {
              "keyName": {
                "type": "string",
                "description": "Name of the Key from KeyVault",
                "x-ms-client-name": "KeyName"
              },
              "keyVaultUri": {
                "type": "string",
                "description": "Uri of KeyVault",
                "x-ms-client-name": "KeyVaultUri"
              },
              "keyVersion": {
                "type": "string",
                "description": "Key Version",
                "x-ms-client-name": "KeyVersion"
              },
              "identity": {
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "ARM ID of user Identity selected for encryption"
                  }
                }
              }
            },
            "description": "Properties to configure keyVault Properties"
          },
          "x-ms-client-name": "KeyVaultProperties",
          "description": "Properties of KeyVault"
        },
        "keySource": {
          "type": "string",
          "description": "Enumerates the possible value of keySource for Encryption",
          "default": "Microsoft.KeyVault",
          "enum": [
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "keySource",
            "modelAsString": false
          }
        },
        "requireInfrastructureEncryption": {
          "type": "boolean",
          "description": "Enable Infrastructure Encryption (Double Encryption)"
        }
      },
      "description": "Properties to configure Encryption"
    },
    "KeyVaultProperties": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault",
          "x-ms-client-name": "KeyName"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault",
          "x-ms-client-name": "KeyVaultUri"
        },
        "keyVersion": {
          "type": "string",
          "description": "Key Version",
          "x-ms-client-name": "KeyVersion"
        },
        "identity": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "ARM ID of user Identity selected for encryption"
            }
          }
        }
      },
      "description": "Properties to configure keyVault Properties"
    },
    "PrivateEndpointConnection": {
      "description": "Properties of the PrivateEndpointConnection.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "x-ms-client-flatten": true,
          "properties": {
            "privateEndpoint": {
              "description": "The Private Endpoint resource for this Connection.",
              "properties": {
                "id": {
                  "description": "The ARM identifier for Private Endpoint.",
                  "type": "string"
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Details about the state of the connection.",
              "properties": {
                "status": {
                  "description": "Status of the connection.",
                  "enum": [
                    "Pending",
                    "Approved",
                    "Rejected",
                    "Disconnected"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "PrivateLinkConnectionStatus",
                    "modelAsString": true
                  }
                },
                "description": {
                  "description": "Description of the connection state.",
                  "type": "string"
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Private Endpoint Connection.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndPointProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "description": "The Private Endpoint resource for this Connection.",
          "properties": {
            "id": {
              "description": "The ARM identifier for Private Endpoint.",
              "type": "string"
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "Details about the state of the connection.",
          "properties": {
            "status": {
              "description": "Status of the connection.",
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PrivateLinkConnectionStatus",
                "modelAsString": true
              }
            },
            "description": {
              "description": "Description of the connection state.",
              "type": "string"
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndPointProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      }
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "properties": {
        "status": {
          "description": "Status of the connection.",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrivateLinkConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "description": "Result of the list of all private endpoint connections operation.",
      "properties": {
        "value": {
          "description": "A collection of private endpoint connection resources.",
          "type": "array",
          "items": {
            "description": "Properties of the PrivateEndpointConnection.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PrivateLinkConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "EndPointProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of private endpoint connection resources.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResource": {
      "description": "Information of the private link resource.",
      "properties": {
        "properties": {
          "description": "Properties of the private link resource.",
          "x-ms-client-flatten": true,
          "properties": {
            "groupId": {
              "description": "The private link resource group id.",
              "type": "string"
            },
            "requiredMembers": {
              "type": "array",
              "description": "The private link resource required member names.",
              "items": {
                "type": "string"
              }
            },
            "requiredZoneNames": {
              "type": "array",
              "description": "The private link resource Private link DNS zone name.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource",
          "type": "string"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of PrivateLinkResource",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "description": "Result of the List private link resources operation.",
      "properties": {
        "value": {
          "description": "A collection of private link resources",
          "type": "array",
          "items": {
            "description": "Information of the private link resource.",
            "properties": {
              "properties": {
                "description": "Properties of the private link resource.",
                "x-ms-client-flatten": true,
                "properties": {
                  "groupId": {
                    "description": "The private link resource group id.",
                    "type": "string"
                  },
                  "requiredMembers": {
                    "type": "array",
                    "description": "The private link resource required member names.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "description": "The private link resource Private link DNS zone name.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string"
              },
              "name": {
                "description": "Name of the resource",
                "type": "string"
              },
              "type": {
                "description": "Type of the resource",
                "type": "string"
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of private link resources.",
          "type": "string"
        }
      }
    },
    "userAssignedIdentityProperties": {
      "x-ms-client-flatten": true,
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "ARM ID of user Identity selected for encryption"
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationList": {
      "description": "Result of the List NetworkSecurityPerimeterConfiguration operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of NetworkSecurityPerimeterConfigurations",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Network Security Perimeter related configurations of a given namespace",
            "type": "object",
            "readOnly": true,
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Properties of the Network Security Perimeter Configuration",
                "x-ms-client-flatten": true,
                "type": "object",
                "readOnly": true,
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation",
                    "enum": [
                      "Unknown",
                      "Creating",
                      "Updating",
                      "Accepted",
                      "InvalidResponse",
                      "Succeeded",
                      "SucceededWithIssues",
                      "Failed",
                      "Deleting",
                      "Deleted",
                      "Canceled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "provisioningIssues": {
                    "description": "List of Provisioning Issues if any",
                    "type": "array",
                    "items": {
                      "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "name": {
                          "description": "Name of the issue",
                          "type": "string"
                        },
                        "properties": {
                          "description": "Properties of Provisioning Issue",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "issueType": {
                              "description": "Type of Issue",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description of the issue",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "networkSecurityPerimeter": {
                    "description": "NetworkSecurityPerimeter related information",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource",
                        "type": "string"
                      },
                      "perimeterGuid": {
                        "description": "Guid of the resource",
                        "type": "string"
                      },
                      "location": {
                        "description": "Location of the resource",
                        "type": "string"
                      }
                    }
                  },
                  "resourceAssociation": {
                    "description": "Information about resource association",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the resource association",
                        "type": "string"
                      },
                      "accessMode": {
                        "description": "Access Mode of the resource association",
                        "enum": [
                          "NoAssociationMode",
                          "EnforcedMode",
                          "LearningMode",
                          "AuditMode",
                          "UnspecifiedMode"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ResourceAssociationAccessMode",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "profile": {
                    "description": "Information about current network profile",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the resource",
                        "type": "string"
                      },
                      "accessRulesVersion": {
                        "description": "Current access rules version",
                        "type": "string"
                      },
                      "accessRules": {
                        "description": "List of Access Rules",
                        "type": "array",
                        "items": {
                          "description": "Information of Access Rule in Network Profile",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "id": {
                              "description": "Fully qualified identifier of the resource",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the resource",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of the resource",
                              "type": "string"
                            },
                            "properties": {
                              "description": "Properties of Access Rule",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "direction": {
                                  "description": "Direction of Access Rule",
                                  "enum": [
                                    "Inbound",
                                    "Outbound"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "NspAccessRuleDirection",
                                    "modelAsString": true
                                  }
                                },
                                "addressPrefixes": {
                                  "description": "Address prefixes in the CIDR format for inbound rules",
                                  "type": "array",
                                  "items": {
                                    "description": "IP Address",
                                    "type": "string"
                                  }
                                },
                                "subscriptions": {
                                  "description": "Subscriptions for inbound rules",
                                  "type": "array",
                                  "items": {
                                    "description": "Subscription for inbound rule",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "id": {
                                        "description": "Fully qualified identifier of subscription",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "networkSecurityPerimeters": {
                                  "description": "NetworkSecurityPerimeters for inbound rules",
                                  "type": "array",
                                  "readOnly": true,
                                  "items": {
                                    "description": "NetworkSecurityPerimeter related information",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "id": {
                                        "description": "Fully qualified identifier of the resource",
                                        "type": "string"
                                      },
                                      "perimeterGuid": {
                                        "description": "Guid of the resource",
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "Location of the resource",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "fullyQualifiedDomainNames": {
                                  "description": "FQDN for outbound rules",
                                  "type": "array",
                                  "readOnly": true,
                                  "items": {
                                    "description": "Fully qualified domain name",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "isBackingResource": {
                    "readOnly": true,
                    "type": "boolean",
                    "description": "True if the EventHub namespace is backed by another Azure resource and not visible to end users."
                  },
                  "applicableFeatures": {
                    "readOnly": true,
                    "type": "array",
                    "description": "Indicates that the NSP controls related to backing association are only applicable to a specific feature in backing resource's data plane.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "parentAssociationName": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Source Resource Association name"
                  },
                  "sourceResourceId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "ARM Id of source resource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "NetworkSecurityPerimeterConfiguration": {
      "description": "Network Security Perimeter related configurations of a given namespace",
      "type": "object",
      "readOnly": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Properties of the Network Security Perimeter Configuration",
          "x-ms-client-flatten": true,
          "type": "object",
          "readOnly": true,
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation",
              "enum": [
                "Unknown",
                "Creating",
                "Updating",
                "Accepted",
                "InvalidResponse",
                "Succeeded",
                "SucceededWithIssues",
                "Failed",
                "Deleting",
                "Deleted",
                "Canceled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
                "modelAsString": true
              }
            },
            "provisioningIssues": {
              "description": "List of Provisioning Issues if any",
              "type": "array",
              "items": {
                "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "name": {
                    "description": "Name of the issue",
                    "type": "string"
                  },
                  "properties": {
                    "description": "Properties of Provisioning Issue",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "issueType": {
                        "description": "Type of Issue",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description of the issue",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "networkSecurityPerimeter": {
              "description": "NetworkSecurityPerimeter related information",
              "type": "object",
              "readOnly": true,
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string"
                },
                "perimeterGuid": {
                  "description": "Guid of the resource",
                  "type": "string"
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                }
              }
            },
            "resourceAssociation": {
              "description": "Information about resource association",
              "readOnly": true,
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the resource association",
                  "type": "string"
                },
                "accessMode": {
                  "description": "Access Mode of the resource association",
                  "enum": [
                    "NoAssociationMode",
                    "EnforcedMode",
                    "LearningMode",
                    "AuditMode",
                    "UnspecifiedMode"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "ResourceAssociationAccessMode",
                    "modelAsString": true
                  }
                }
              }
            },
            "profile": {
              "description": "Information about current network profile",
              "readOnly": true,
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the resource",
                  "type": "string"
                },
                "accessRulesVersion": {
                  "description": "Current access rules version",
                  "type": "string"
                },
                "accessRules": {
                  "description": "List of Access Rules",
                  "type": "array",
                  "items": {
                    "description": "Information of Access Rule in Network Profile",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of Access Rule",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "direction": {
                            "description": "Direction of Access Rule",
                            "enum": [
                              "Inbound",
                              "Outbound"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "NspAccessRuleDirection",
                              "modelAsString": true
                            }
                          },
                          "addressPrefixes": {
                            "description": "Address prefixes in the CIDR format for inbound rules",
                            "type": "array",
                            "items": {
                              "description": "IP Address",
                              "type": "string"
                            }
                          },
                          "subscriptions": {
                            "description": "Subscriptions for inbound rules",
                            "type": "array",
                            "items": {
                              "description": "Subscription for inbound rule",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of subscription",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "networkSecurityPerimeters": {
                            "description": "NetworkSecurityPerimeters for inbound rules",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "NetworkSecurityPerimeter related information",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "id": {
                                  "description": "Fully qualified identifier of the resource",
                                  "type": "string"
                                },
                                "perimeterGuid": {
                                  "description": "Guid of the resource",
                                  "type": "string"
                                },
                                "location": {
                                  "description": "Location of the resource",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "fullyQualifiedDomainNames": {
                            "description": "FQDN for outbound rules",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "Fully qualified domain name",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "isBackingResource": {
              "readOnly": true,
              "type": "boolean",
              "description": "True if the EventHub namespace is backed by another Azure resource and not visible to end users."
            },
            "applicableFeatures": {
              "readOnly": true,
              "type": "array",
              "description": "Indicates that the NSP controls related to backing association are only applicable to a specific feature in backing resource's data plane.",
              "items": {
                "type": "string"
              }
            },
            "parentAssociationName": {
              "readOnly": true,
              "type": "string",
              "description": "Source Resource Association name"
            },
            "sourceResourceId": {
              "readOnly": true,
              "type": "string",
              "description": "ARM Id of source resource"
            }
          }
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationProperties": {
      "description": "Properties of NetworkSecurityPerimeterConfiguration",
      "type": "object",
      "readOnly": true,
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation",
          "enum": [
            "Unknown",
            "Creating",
            "Updating",
            "Accepted",
            "InvalidResponse",
            "Succeeded",
            "SucceededWithIssues",
            "Failed",
            "Deleting",
            "Deleted",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
            "modelAsString": true
          }
        },
        "provisioningIssues": {
          "description": "List of Provisioning Issues if any",
          "type": "array",
          "items": {
            "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
            "type": "object",
            "readOnly": true,
            "properties": {
              "name": {
                "description": "Name of the issue",
                "type": "string"
              },
              "properties": {
                "description": "Properties of Provisioning Issue",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "issueType": {
                    "description": "Type of Issue",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the issue",
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "networkSecurityPerimeter": {
          "description": "NetworkSecurityPerimeter related information",
          "type": "object",
          "readOnly": true,
          "properties": {
            "id": {
              "description": "Fully qualified identifier of the resource",
              "type": "string"
            },
            "perimeterGuid": {
              "description": "Guid of the resource",
              "type": "string"
            },
            "location": {
              "description": "Location of the resource",
              "type": "string"
            }
          }
        },
        "resourceAssociation": {
          "description": "Information about resource association",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the resource association",
              "type": "string"
            },
            "accessMode": {
              "description": "Access Mode of the resource association",
              "enum": [
                "NoAssociationMode",
                "EnforcedMode",
                "LearningMode",
                "AuditMode",
                "UnspecifiedMode"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResourceAssociationAccessMode",
                "modelAsString": true
              }
            }
          }
        },
        "profile": {
          "description": "Information about current network profile",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the resource",
              "type": "string"
            },
            "accessRulesVersion": {
              "description": "Current access rules version",
              "type": "string"
            },
            "accessRules": {
              "description": "List of Access Rules",
              "type": "array",
              "items": {
                "description": "Information of Access Rule in Network Profile",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "id": {
                    "description": "Fully qualified identifier of the resource",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the resource",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the resource",
                    "type": "string"
                  },
                  "properties": {
                    "description": "Properties of Access Rule",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "direction": {
                        "description": "Direction of Access Rule",
                        "enum": [
                          "Inbound",
                          "Outbound"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "NspAccessRuleDirection",
                          "modelAsString": true
                        }
                      },
                      "addressPrefixes": {
                        "description": "Address prefixes in the CIDR format for inbound rules",
                        "type": "array",
                        "items": {
                          "description": "IP Address",
                          "type": "string"
                        }
                      },
                      "subscriptions": {
                        "description": "Subscriptions for inbound rules",
                        "type": "array",
                        "items": {
                          "description": "Subscription for inbound rule",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "id": {
                              "description": "Fully qualified identifier of subscription",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "networkSecurityPerimeters": {
                        "description": "NetworkSecurityPerimeters for inbound rules",
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "description": "NetworkSecurityPerimeter related information",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "id": {
                              "description": "Fully qualified identifier of the resource",
                              "type": "string"
                            },
                            "perimeterGuid": {
                              "description": "Guid of the resource",
                              "type": "string"
                            },
                            "location": {
                              "description": "Location of the resource",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "fullyQualifiedDomainNames": {
                        "description": "FQDN for outbound rules",
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "description": "Fully qualified domain name",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "isBackingResource": {
          "readOnly": true,
          "type": "boolean",
          "description": "True if the EventHub namespace is backed by another Azure resource and not visible to end users."
        },
        "applicableFeatures": {
          "readOnly": true,
          "type": "array",
          "description": "Indicates that the NSP controls related to backing association are only applicable to a specific feature in backing resource's data plane.",
          "items": {
            "type": "string"
          }
        },
        "parentAssociationName": {
          "readOnly": true,
          "type": "string",
          "description": "Source Resource Association name"
        },
        "sourceResourceId": {
          "readOnly": true,
          "type": "string",
          "description": "ARM Id of source resource"
        }
      }
    },
    "ProvisioningIssue": {
      "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "description": "Name of the issue",
          "type": "string"
        },
        "properties": {
          "description": "Properties of Provisioning Issue",
          "type": "object",
          "readOnly": true,
          "properties": {
            "issueType": {
              "description": "Type of Issue",
              "type": "string"
            },
            "description": {
              "description": "Description of the issue",
              "type": "string"
            }
          }
        }
      }
    },
    "NspAccessRule": {
      "description": "Information of Access Rule in Network Profile",
      "type": "object",
      "readOnly": true,
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource",
          "type": "string"
        },
        "properties": {
          "description": "Properties of Access Rule",
          "readOnly": true,
          "type": "object",
          "properties": {
            "direction": {
              "description": "Direction of Access Rule",
              "enum": [
                "Inbound",
                "Outbound"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "NspAccessRuleDirection",
                "modelAsString": true
              }
            },
            "addressPrefixes": {
              "description": "Address prefixes in the CIDR format for inbound rules",
              "type": "array",
              "items": {
                "description": "IP Address",
                "type": "string"
              }
            },
            "subscriptions": {
              "description": "Subscriptions for inbound rules",
              "type": "array",
              "items": {
                "description": "Subscription for inbound rule",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "id": {
                    "description": "Fully qualified identifier of subscription",
                    "type": "string"
                  }
                }
              }
            },
            "networkSecurityPerimeters": {
              "description": "NetworkSecurityPerimeters for inbound rules",
              "type": "array",
              "readOnly": true,
              "items": {
                "description": "NetworkSecurityPerimeter related information",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "id": {
                    "description": "Fully qualified identifier of the resource",
                    "type": "string"
                  },
                  "perimeterGuid": {
                    "description": "Guid of the resource",
                    "type": "string"
                  },
                  "location": {
                    "description": "Location of the resource",
                    "type": "string"
                  }
                }
              }
            },
            "fullyQualifiedDomainNames": {
              "description": "FQDN for outbound rules",
              "type": "array",
              "readOnly": true,
              "items": {
                "description": "Fully qualified domain name",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "NetworkSecurityPerimeter": {
      "description": "NetworkSecurityPerimeter related information",
      "type": "object",
      "readOnly": true,
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource",
          "type": "string"
        },
        "perimeterGuid": {
          "description": "Guid of the resource",
          "type": "string"
        },
        "location": {
          "description": "Location of the resource",
          "type": "string"
        }
      }
    },
    "Subnet": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of Virtual Network Subnet"
        }
      },
      "description": "Properties supplied for Subnet"
    },
    "NWRuleSetIpRules": {
      "x-ms-client-flatten": true,
      "properties": {
        "ipMask": {
          "type": "string",
          "description": "IP Mask"
        },
        "action": {
          "type": "string",
          "description": "The IP Filter Action",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleIPAction",
            "modelAsString": true
          }
        }
      },
      "description": "The response from the List namespace operation."
    },
    "NWRuleSetVirtualNetworkRules": {
      "x-ms-client-flatten": true,
      "properties": {
        "subnet": {
          "description": "Subnet properties",
          "properties": {
            "id": {
              "type": "string",
              "description": "Resource ID of Virtual Network Subnet"
            }
          }
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
        }
      },
      "description": "The response from the List namespace operation."
    },
    "NetworkRuleSet": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "NetworkRuleSet properties",
          "x-ms-client-flatten": true,
          "properties": {
            "trustedServiceAccessEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Trusted Service Access is Enabled or not."
            },
            "defaultAction": {
              "type": "string",
              "description": "Default Action for Network Rule Set",
              "enum": [
                "Allow",
                "Deny"
              ],
              "x-ms-enum": {
                "name": "DefaultAction",
                "modelAsString": true
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "items": {
                "x-ms-client-flatten": true,
                "properties": {
                  "subnet": {
                    "description": "Subnet properties",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource ID of Virtual Network Subnet"
                      }
                    }
                  },
                  "ignoreMissingVnetServiceEndpoint": {
                    "type": "boolean",
                    "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
                  }
                },
                "description": "The response from the List namespace operation."
              },
              "description": "List VirtualNetwork Rules"
            },
            "ipRules": {
              "type": "array",
              "items": {
                "x-ms-client-flatten": true,
                "properties": {
                  "ipMask": {
                    "type": "string",
                    "description": "IP Mask"
                  },
                  "action": {
                    "type": "string",
                    "description": "The IP Filter Action",
                    "enum": [
                      "Allow"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkRuleIPAction",
                      "modelAsString": true
                    }
                  }
                },
                "description": "The response from the List namespace operation."
              },
              "description": "List of IpRules"
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccessFlag",
                "modelAsString": true
              },
              "default": "Enabled"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Description of topic resource."
    },
    "NetworkRuleSetListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "NetworkRuleSet properties",
                "x-ms-client-flatten": true,
                "properties": {
                  "trustedServiceAccessEnabled": {
                    "type": "boolean",
                    "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                  },
                  "defaultAction": {
                    "type": "string",
                    "description": "Default Action for Network Rule Set",
                    "enum": [
                      "Allow",
                      "Deny"
                    ],
                    "x-ms-enum": {
                      "name": "DefaultAction",
                      "modelAsString": true
                    }
                  },
                  "virtualNetworkRules": {
                    "type": "array",
                    "items": {
                      "x-ms-client-flatten": true,
                      "properties": {
                        "subnet": {
                          "description": "Subnet properties",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Resource ID of Virtual Network Subnet"
                            }
                          }
                        },
                        "ignoreMissingVnetServiceEndpoint": {
                          "type": "boolean",
                          "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
                        }
                      },
                      "description": "The response from the List namespace operation."
                    },
                    "description": "List VirtualNetwork Rules"
                  },
                  "ipRules": {
                    "type": "array",
                    "items": {
                      "x-ms-client-flatten": true,
                      "properties": {
                        "ipMask": {
                          "type": "string",
                          "description": "IP Mask"
                        },
                        "action": {
                          "type": "string",
                          "description": "The IP Filter Action",
                          "enum": [
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "NetworkRuleIPAction",
                            "modelAsString": true
                          }
                        }
                      },
                      "description": "The response from the List namespace operation."
                    },
                    "description": "List of IpRules"
                  },
                  "publicNetworkAccess": {
                    "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
                    "enum": [
                      "Enabled",
                      "Disabled",
                      "SecuredByPerimeter"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccessFlag",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Description of topic resource."
          },
          "description": "Result of the List NetworkRuleSet operation"
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet."
        }
      },
      "description": "The response of the List NetworkRuleSet operation"
    },
    "OperationListResult": {
      "description": "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "A Event Hub REST API operation",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Operation name: {provider}/{resource}/{operation}"
              },
              "isDataAction": {
                "description": "Indicates whether the operation is a data action",
                "type": "boolean"
              },
              "display": {
                "description": "Display of the operation",
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Resource provider of the operation",
                    "type": "string",
                    "readOnly": true
                  },
                  "resource": {
                    "description": "Resource of the operation",
                    "type": "string",
                    "readOnly": true
                  },
                  "operation": {
                    "description": "Localized friendly name for the operation",
                    "type": "string",
                    "readOnly": true
                  },
                  "description": {
                    "description": "Localized friendly description for the operation",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "origin": {
                "description": "Origin of the operation",
                "type": "string"
              },
              "properties": {
                "description": "Properties of the operation",
                "type": "object",
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "description": "A Event Hub REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "description": "Display of the operation",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Resource provider of the operation",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource of the operation",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Localized friendly name for the operation",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Localized friendly description for the operation",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the operation",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display payload",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Resource provider of the operation",
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "description": "Resource of the operation",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "Localized friendly name for the operation",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Localized friendly description for the operation",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClusterQuotaConfigurationProperties": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
        }
      },
      "description": "Contains all settings for the cluster."
    }
  },
  "parameters": {}
}