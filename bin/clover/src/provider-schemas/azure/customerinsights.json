{
  "swagger": "2.0",
  "info": {
    "title": "Azure customerinsights",
    "version": "2017-04-26",
    "description": "Azure customerinsights service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.CustomerInsights/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available Customer Insights REST API operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Result of the request to list Customer Insights operations. It contains a list of operations and a URL link to get the next set of results.",
              "properties": {
                "value": {
                  "description": "List of Customer Insights operations supported by the Microsoft.CustomerInsights resource provider.",
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "description": "A Customer Insights REST API operation",
                    "type": "object",
                    "properties": {
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Operation name: {provider}/{resource}/{operation}"
                      },
                      "display": {
                        "description": "The object that represents the operation.",
                        "properties": {
                          "provider": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Service provider: Microsoft.CustomerInsights"
                          },
                          "resource": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Resource on which the operation is performed: Invoice, etc."
                          },
                          "operation": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Operation type: Read, write, delete, etc."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "readOnly": true,
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}": {
      "put": {
        "tags": [
          "Hubs"
        ],
        "operationId": "Hubs_CreateOrUpdate",
        "description": "Creates a hub, or updates an existing hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Hub.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9]+$",
            "minLength": 1,
            "maxLength": 64
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "apiEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "API endpoint URL of the hub."
                    },
                    "webEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Web endpoint URL of the hub."
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the hub."
                    },
                    "tenantFeatures": {
                      "type": "integer",
                      "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                    },
                    "hubBillingInfo": {
                      "description": "Billing settings of the hub.",
                      "properties": {
                        "skuName": {
                          "type": "string",
                          "description": "The sku name."
                        },
                        "minUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                        },
                        "maxUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                        }
                      }
                    }
                  },
                  "description": "Properties of hub."
                }
              },
              "description": "Hub resource."
            },
            "description": "Parameters supplied to the CreateOrUpdate Hub operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. An existing hub is updated.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "apiEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "API endpoint URL of the hub."
                    },
                    "webEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Web endpoint URL of the hub."
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the hub."
                    },
                    "tenantFeatures": {
                      "type": "integer",
                      "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                    },
                    "hubBillingInfo": {
                      "description": "Billing settings of the hub.",
                      "properties": {
                        "skuName": {
                          "type": "string",
                          "description": "The sku name."
                        },
                        "minUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                        },
                        "maxUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                        }
                      }
                    }
                  },
                  "description": "Properties of hub."
                }
              },
              "description": "Hub resource."
            }
          },
          "201": {
            "description": "Created. A new hub is created.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "apiEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "API endpoint URL of the hub."
                    },
                    "webEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Web endpoint URL of the hub."
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the hub."
                    },
                    "tenantFeatures": {
                      "type": "integer",
                      "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                    },
                    "hubBillingInfo": {
                      "description": "Billing settings of the hub.",
                      "properties": {
                        "skuName": {
                          "type": "string",
                          "description": "The sku name."
                        },
                        "minUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                        },
                        "maxUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                        }
                      }
                    }
                  },
                  "description": "Properties of hub."
                }
              },
              "description": "Hub resource."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Hubs"
        ],
        "operationId": "Hubs_Update",
        "description": "Updates a Hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Hub."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "apiEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "API endpoint URL of the hub."
                    },
                    "webEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Web endpoint URL of the hub."
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the hub."
                    },
                    "tenantFeatures": {
                      "type": "integer",
                      "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                    },
                    "hubBillingInfo": {
                      "description": "Billing settings of the hub.",
                      "properties": {
                        "skuName": {
                          "type": "string",
                          "description": "The sku name."
                        },
                        "minUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                        },
                        "maxUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                        }
                      }
                    }
                  },
                  "description": "Properties of hub."
                }
              },
              "description": "Hub resource."
            },
            "description": "Parameters supplied to the Update Hub operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The hub is updated.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "apiEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "API endpoint URL of the hub."
                    },
                    "webEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Web endpoint URL of the hub."
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the hub."
                    },
                    "tenantFeatures": {
                      "type": "integer",
                      "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                    },
                    "hubBillingInfo": {
                      "description": "Billing settings of the hub.",
                      "properties": {
                        "skuName": {
                          "type": "string",
                          "description": "The sku name."
                        },
                        "minUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                        },
                        "maxUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                        }
                      }
                    }
                  },
                  "description": "Properties of hub."
                }
              },
              "description": "Hub resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hubs"
        ],
        "operationId": "Hubs_Delete",
        "description": "Deletes the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The hub is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          },
          "204": {
            "description": "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      },
      "get": {
        "tags": [
          "Hubs"
        ],
        "operationId": "Hubs_Get",
        "description": "Gets information about the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the hub.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "apiEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "API endpoint URL of the hub."
                    },
                    "webEndpoint": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Web endpoint URL of the hub."
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the hub."
                    },
                    "tenantFeatures": {
                      "type": "integer",
                      "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                    },
                    "hubBillingInfo": {
                      "description": "Billing settings of the hub.",
                      "properties": {
                        "skuName": {
                          "type": "string",
                          "description": "The sku name."
                        },
                        "minUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                        },
                        "maxUnits": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10,
                          "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                        }
                      }
                    }
                  },
                  "description": "Properties of hub."
                }
              },
              "description": "Hub resource."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs": {
      "get": {
        "tags": [
          "Hubs"
        ],
        "operationId": "Hubs_ListByResourceGroup",
        "description": "Gets all the hubs in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the hubs in the resource group.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "apiEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "API endpoint URL of the hub."
                          },
                          "webEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Web endpoint URL of the hub."
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Provisioning state of the hub."
                          },
                          "tenantFeatures": {
                            "type": "integer",
                            "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                          },
                          "hubBillingInfo": {
                            "description": "Billing settings of the hub.",
                            "properties": {
                              "skuName": {
                                "type": "string",
                                "description": "The sku name."
                              },
                              "minUnits": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 10,
                                "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                              },
                              "maxUnits": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 10,
                                "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                              }
                            }
                          }
                        },
                        "description": "Properties of hub."
                      }
                    },
                    "description": "Hub resource."
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link for next set of results."
                }
              },
              "description": "Response of list hub operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CustomerInsights/hubs": {
      "get": {
        "tags": [
          "Hubs"
        ],
        "operationId": "Hubs_List",
        "description": "Gets all hubs in the specified subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the hubs in the subscription.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "apiEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "API endpoint URL of the hub."
                          },
                          "webEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Web endpoint URL of the hub."
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Provisioning state of the hub."
                          },
                          "tenantFeatures": {
                            "type": "integer",
                            "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                          },
                          "hubBillingInfo": {
                            "description": "Billing settings of the hub.",
                            "properties": {
                              "skuName": {
                                "type": "string",
                                "description": "The sku name."
                              },
                              "minUnits": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 10,
                                "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                              },
                              "maxUnits": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 10,
                                "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                              }
                            }
                          }
                        },
                        "description": "Properties of hub."
                      }
                    },
                    "description": "Hub resource."
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link for next set of results."
                }
              },
              "description": "Response of list hub operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}": {
      "put": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_CreateOrUpdate",
        "description": "Creates a profile within a Hub, or updates an existing profile.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the profile.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 128
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The profile resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The profile type definition.",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "description": "The attributes for the Type."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the property."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the property."
                    },
                    "localizedAttributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": "Any custom localized attributes for the Type."
                    },
                    "smallImage": {
                      "type": "string",
                      "description": "Small Image associated with the Property or EntityType."
                    },
                    "mediumImage": {
                      "type": "string",
                      "description": "Medium Image associated with the Property or EntityType."
                    },
                    "largeImage": {
                      "type": "string",
                      "description": "Large Image associated with the Property or EntityType."
                    },
                    "apiEntitySetName": {
                      "type": "string",
                      "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Type of entity."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Profile."
                    },
                    "instancesCount": {
                      "type": "integer",
                      "description": "The instance count."
                    },
                    "lastChangedUtc": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last changed time for the type definition."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "schemaItemTypeLink": {
                      "type": "string",
                      "description": "The schema org link. This helps ACI identify and suggest semantic models."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "timestampFieldName": {
                      "type": "string",
                      "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The name of the entity."
                    },
                    "strongIds": {
                      "type": "array",
                      "items": {
                        "required": [
                          "keyPropertyNames",
                          "strongIdName"
                        ],
                        "properties": {
                          "keyPropertyNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The properties which make up the unique ID."
                          },
                          "strongIdName": {
                            "type": "string",
                            "description": "The Name identifying the strong ID."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions."
                          }
                        },
                        "description": "Property/Properties which represent a unique ID."
                      },
                      "description": "The strong IDs."
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to the create/delete Profile type operation"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the profile.",
            "schema": {
              "description": "The profile resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The profile type definition.",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "description": "The attributes for the Type."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the property."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the property."
                    },
                    "localizedAttributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": "Any custom localized attributes for the Type."
                    },
                    "smallImage": {
                      "type": "string",
                      "description": "Small Image associated with the Property or EntityType."
                    },
                    "mediumImage": {
                      "type": "string",
                      "description": "Medium Image associated with the Property or EntityType."
                    },
                    "largeImage": {
                      "type": "string",
                      "description": "Large Image associated with the Property or EntityType."
                    },
                    "apiEntitySetName": {
                      "type": "string",
                      "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Type of entity."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Profile."
                    },
                    "instancesCount": {
                      "type": "integer",
                      "description": "The instance count."
                    },
                    "lastChangedUtc": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last changed time for the type definition."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "schemaItemTypeLink": {
                      "type": "string",
                      "description": "The schema org link. This helps ACI identify and suggest semantic models."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "timestampFieldName": {
                      "type": "string",
                      "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The name of the entity."
                    },
                    "strongIds": {
                      "type": "array",
                      "items": {
                        "required": [
                          "keyPropertyNames",
                          "strongIdName"
                        ],
                        "properties": {
                          "keyPropertyNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The properties which make up the unique ID."
                          },
                          "strongIdName": {
                            "type": "string",
                            "description": "The Name identifying the strong ID."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions."
                          }
                        },
                        "description": "Property/Properties which represent a unique ID."
                      },
                      "description": "The strong IDs."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create profile operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_Get",
        "description": "Gets information about the specified profile.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the profile."
          },
          {
            "name": "locale-code",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "en-us",
            "description": "Locale of profile to retrieve, default is en-us."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the profile.",
            "schema": {
              "description": "The profile resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The profile type definition.",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "description": "The attributes for the Type."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the property."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the property."
                    },
                    "localizedAttributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": "Any custom localized attributes for the Type."
                    },
                    "smallImage": {
                      "type": "string",
                      "description": "Small Image associated with the Property or EntityType."
                    },
                    "mediumImage": {
                      "type": "string",
                      "description": "Medium Image associated with the Property or EntityType."
                    },
                    "largeImage": {
                      "type": "string",
                      "description": "Large Image associated with the Property or EntityType."
                    },
                    "apiEntitySetName": {
                      "type": "string",
                      "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Type of entity."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Profile."
                    },
                    "instancesCount": {
                      "type": "integer",
                      "description": "The instance count."
                    },
                    "lastChangedUtc": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last changed time for the type definition."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "schemaItemTypeLink": {
                      "type": "string",
                      "description": "The schema org link. This helps ACI identify and suggest semantic models."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "timestampFieldName": {
                      "type": "string",
                      "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The name of the entity."
                    },
                    "strongIds": {
                      "type": "array",
                      "items": {
                        "required": [
                          "keyPropertyNames",
                          "strongIdName"
                        ],
                        "properties": {
                          "keyPropertyNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The properties which make up the unique ID."
                          },
                          "strongIdName": {
                            "type": "string",
                            "description": "The Name identifying the strong ID."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions."
                          }
                        },
                        "description": "Property/Properties which represent a unique ID."
                      },
                      "description": "The strong IDs."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_Delete",
        "description": "Deletes a profile within a hub",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the profile."
          },
          {
            "name": "locale-code",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "en-us",
            "description": "Locale of profile to retrieve, default is en-us."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The profile is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          },
          "204": {
            "description": "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_ListByHub",
        "description": "Gets all profile in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "locale-code",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "en-us",
            "description": "Locale of profile to retrieve, default is en-us."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the profiles in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The profile resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The profile type definition.",
                        "properties": {
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "description": "The attributes for the Type."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions for the property."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display names for the property."
                          },
                          "localizedAttributes": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "description": "Any custom localized attributes for the Type."
                          },
                          "smallImage": {
                            "type": "string",
                            "description": "Small Image associated with the Property or EntityType."
                          },
                          "mediumImage": {
                            "type": "string",
                            "description": "Medium Image associated with the Property or EntityType."
                          },
                          "largeImage": {
                            "type": "string",
                            "description": "Large Image associated with the Property or EntityType."
                          },
                          "apiEntitySetName": {
                            "type": "string",
                            "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "None",
                              "Profile",
                              "Interaction",
                              "Relationship"
                            ],
                            "x-ms-enum": {
                              "name": "EntityTypes",
                              "modelAsString": false
                            },
                            "description": "Type of entity."
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "required": [
                                "fieldName",
                                "fieldType"
                              ],
                              "properties": {
                                "arrayValueSeparator": {
                                  "type": "string",
                                  "description": "Array value separator for properties with isArray set."
                                },
                                "enumValidValues": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "description": "The integer value of the enum member."
                                      },
                                      "localizedValueNames": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Localized names of the enum member."
                                      }
                                    },
                                    "description": "Valid enum values in case of an enum property."
                                  },
                                  "description": "Describes valid values for an enum property."
                                },
                                "fieldName": {
                                  "type": "string",
                                  "description": "Name of the property."
                                },
                                "fieldType": {
                                  "type": "string",
                                  "description": "Type of the property."
                                },
                                "isArray": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                                },
                                "isEnum": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is an enum."
                                },
                                "isFlagEnum": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is an flag enum."
                                },
                                "isImage": {
                                  "type": "boolean",
                                  "description": "Whether the property is an Image."
                                },
                                "isLocalizedString": {
                                  "type": "boolean",
                                  "description": "Whether the property is a localized string."
                                },
                                "isName": {
                                  "type": "boolean",
                                  "description": "Whether the property is a name or a part of name."
                                },
                                "isRequired": {
                                  "type": "boolean",
                                  "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                                },
                                "propertyId": {
                                  "type": "string",
                                  "description": "The ID associated with the property."
                                },
                                "schemaItemPropLink": {
                                  "type": "string",
                                  "description": "URL encoded schema.org item prop link for the property."
                                },
                                "maxLength": {
                                  "type": "integer",
                                  "description": "Max length of string. Used only if type is string."
                                },
                                "isAvailableInGraph": {
                                  "type": "boolean",
                                  "description": "Whether property is available in graph or not."
                                },
                                "dataSourcePrecedenceRules": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "dataSource": {
                                        "x-ms-client-flatten": true,
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "readOnly": true,
                                            "description": "The data source name"
                                          },
                                          "dataSourceType": {
                                            "type": "string",
                                            "enum": [
                                              "Connector",
                                              "LinkInteraction",
                                              "SystemDefault"
                                            ],
                                            "x-ms-enum": {
                                              "name": "DataSourceType",
                                              "modelAsString": true
                                            },
                                            "readOnly": true,
                                            "description": "The data source type."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "None",
                                              "Active",
                                              "Deleted"
                                            ],
                                            "x-ms-enum": {
                                              "name": "Status",
                                              "modelAsString": true
                                            },
                                            "readOnly": true,
                                            "description": "The data source status."
                                          },
                                          "id": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "description": "The data source ID."
                                          },
                                          "dataSourceReferenceId": {
                                            "type": "string",
                                            "readOnly": true,
                                            "description": "The data source reference id."
                                          }
                                        },
                                        "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                      },
                                      "precedence": {
                                        "type": "integer",
                                        "description": "the precedence value."
                                      }
                                    },
                                    "description": "The data source precedence is a way to know the precedence of each data source."
                                  },
                                  "readOnly": true,
                                  "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                                }
                              },
                              "description": "Property definition."
                            },
                            "description": "The properties of the Profile."
                          },
                          "instancesCount": {
                            "type": "integer",
                            "description": "The instance count."
                          },
                          "lastChangedUtc": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The last changed time for the type definition."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Provisioning state.",
                            "type": "string",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Expiring",
                              "Deleting",
                              "HumanIntervention",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStates",
                              "modelAsString": true
                            }
                          },
                          "schemaItemTypeLink": {
                            "type": "string",
                            "description": "The schema org link. This helps ACI identify and suggest semantic models."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          },
                          "timestampFieldName": {
                            "type": "string",
                            "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                          },
                          "typeName": {
                            "type": "string",
                            "description": "The name of the entity."
                          },
                          "strongIds": {
                            "type": "array",
                            "items": {
                              "required": [
                                "keyPropertyNames",
                                "strongIdName"
                              ],
                              "properties": {
                                "keyPropertyNames": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The properties which make up the unique ID."
                                },
                                "strongIdName": {
                                  "type": "string",
                                  "description": "The Name identifying the strong ID."
                                },
                                "displayName": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized display name."
                                },
                                "description": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized descriptions."
                                }
                              },
                              "description": "Property/Properties which represent a unique ID."
                            },
                            "description": "The strong IDs."
                          }
                        }
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list profile operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}/getEnrichingKpis": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_GetEnrichingKpis",
        "description": "Gets the KPIs that enrich the profile Type identified by the supplied name. Enrichment happens through participants of the Interaction on an Interaction KPI and through Relationships for Profile KPIs.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the profile."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the enriching KPIs.",
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "entityType",
                  "entityTypeName",
                  "calculationWindow",
                  "function",
                  "expression"
                ],
                "properties": {
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Profile",
                      "Interaction",
                      "Relationship"
                    ],
                    "x-ms-enum": {
                      "name": "EntityTypes",
                      "modelAsString": false
                    },
                    "description": "The mapping entity type."
                  },
                  "entityTypeName": {
                    "type": "string",
                    "description": "The mapping entity name."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "kpiName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The KPI name."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name for the KPI."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized description for the KPI."
                  },
                  "calculationWindow": {
                    "type": "string",
                    "enum": [
                      "Lifetime",
                      "Hour",
                      "Day",
                      "Week",
                      "Month"
                    ],
                    "x-ms-enum": {
                      "name": "CalculationWindowTypes",
                      "modelAsString": false
                    },
                    "description": "The calculation window."
                  },
                  "calculationWindowFieldName": {
                    "type": "string",
                    "description": "Name of calculation window field."
                  },
                  "function": {
                    "type": "string",
                    "enum": [
                      "Sum",
                      "Avg",
                      "Min",
                      "Max",
                      "Last",
                      "Count",
                      "None",
                      "CountDistinct"
                    ],
                    "x-ms-enum": {
                      "name": "KpiFunctions",
                      "modelAsString": false
                    },
                    "description": "The computation function for the KPI."
                  },
                  "expression": {
                    "type": "string",
                    "description": "The computation expression for the KPI."
                  },
                  "unit": {
                    "type": "string",
                    "description": "The unit of measurement for the KPI."
                  },
                  "filter": {
                    "type": "string",
                    "description": "The filter expression for the KPI."
                  },
                  "groupBy": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "the group by properties for the KPI."
                  },
                  "groupByMetadata": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "properties": {
                        "displayName": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The display name."
                        },
                        "fieldName": {
                          "type": "string",
                          "description": "The name of the field."
                        },
                        "fieldType": {
                          "type": "string",
                          "description": "The type of the field."
                        }
                      },
                      "description": "The KPI GroupBy field metadata."
                    },
                    "description": "The KPI GroupByMetadata."
                  },
                  "participantProfilesMetadata": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "required": [
                        "typeName"
                      ],
                      "properties": {
                        "typeName": {
                          "type": "string",
                          "description": "Name of the type."
                        }
                      },
                      "description": "The KPI participant profile metadata."
                    },
                    "description": "The participant profiles."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "thresHolds": {
                    "description": "The KPI thresholds.",
                    "properties": {
                      "lowerLimit": {
                        "type": "number",
                        "format": "decimal",
                        "description": "The lower threshold limit."
                      },
                      "upperLimit": {
                        "type": "number",
                        "format": "decimal",
                        "description": "The upper threshold limit."
                      },
                      "increasingKpi": {
                        "type": "boolean",
                        "description": "Whether or not the KPI is an increasing KPI."
                      }
                    },
                    "required": [
                      "lowerLimit",
                      "upperLimit",
                      "increasingKpi"
                    ]
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "required": [
                        "aliasName",
                        "expression"
                      ],
                      "properties": {
                        "aliasName": {
                          "type": "string",
                          "description": "KPI alias name."
                        },
                        "expression": {
                          "type": "string",
                          "description": "The expression."
                        }
                      },
                      "description": "The KPI alias."
                    },
                    "description": "The aliases."
                  },
                  "extracts": {
                    "type": "array",
                    "items": {
                      "required": [
                        "extractName",
                        "expression"
                      ],
                      "properties": {
                        "extractName": {
                          "type": "string",
                          "description": "KPI extract name."
                        },
                        "expression": {
                          "type": "string",
                          "description": "The expression."
                        }
                      },
                      "description": "The KPI extract."
                    },
                    "description": "The KPI extracts."
                  }
                },
                "description": "Defines the KPI Threshold limits."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}": {
      "put": {
        "tags": [
          "Interactions"
        ],
        "operationId": "Interactions_CreateOrUpdate",
        "description": "Creates an interaction or updates an existing interaction within a hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "interactionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the interaction.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 128
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The interaction resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The Interaction Type Definition",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "description": "The attributes for the Type."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the property."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the property."
                    },
                    "localizedAttributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": "Any custom localized attributes for the Type."
                    },
                    "smallImage": {
                      "type": "string",
                      "description": "Small Image associated with the Property or EntityType."
                    },
                    "mediumImage": {
                      "type": "string",
                      "description": "Medium Image associated with the Property or EntityType."
                    },
                    "largeImage": {
                      "type": "string",
                      "description": "Large Image associated with the Property or EntityType."
                    },
                    "apiEntitySetName": {
                      "type": "string",
                      "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Type of entity."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Profile."
                    },
                    "instancesCount": {
                      "type": "integer",
                      "description": "The instance count."
                    },
                    "lastChangedUtc": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last changed time for the type definition."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "schemaItemTypeLink": {
                      "type": "string",
                      "description": "The schema org link. This helps ACI identify and suggest semantic models."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "timestampFieldName": {
                      "type": "string",
                      "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The name of the entity."
                    },
                    "idPropertyNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The id property names. Properties which uniquely identify an interaction instance."
                    },
                    "participantProfiles": {
                      "type": "array",
                      "items": {
                        "required": [
                          "participantName",
                          "profileTypeName",
                          "participantPropertyReferences"
                        ],
                        "properties": {
                          "profileTypeName": {
                            "type": "string",
                            "description": "Profile type name."
                          },
                          "participantPropertyReferences": {
                            "type": "array",
                            "items": {
                              "required": [
                                "sourcePropertyName",
                                "targetPropertyName"
                              ],
                              "properties": {
                                "sourcePropertyName": {
                                  "type": "string",
                                  "description": "The source property that maps to the target property."
                                },
                                "targetPropertyName": {
                                  "type": "string",
                                  "description": "The target property that maps to the source property."
                                }
                              },
                              "description": "The participant property reference."
                            },
                            "description": "The property references."
                          },
                          "participantName": {
                            "type": "string",
                            "description": "Participant name."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role that the participant is playing in the interaction."
                          }
                        },
                        "description": "Describes a profile type participating in an interaction."
                      },
                      "description": "Profiles that participated in the interaction."
                    },
                    "primaryParticipantProfilePropertyName": {
                      "type": "string",
                      "description": "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
                    },
                    "dataSourcePrecedenceRules": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "dataSource": {
                            "x-ms-client-flatten": true,
                            "properties": {
                              "name": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The data source name"
                              },
                              "dataSourceType": {
                                "type": "string",
                                "enum": [
                                  "Connector",
                                  "LinkInteraction",
                                  "SystemDefault"
                                ],
                                "x-ms-enum": {
                                  "name": "DataSourceType",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The data source type."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Active",
                                  "Deleted"
                                ],
                                "x-ms-enum": {
                                  "name": "Status",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The data source status."
                              },
                              "id": {
                                "type": "integer",
                                "readOnly": true,
                                "description": "The data source ID."
                              },
                              "dataSourceReferenceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The data source reference id."
                              }
                            },
                            "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                          },
                          "precedence": {
                            "type": "integer",
                            "description": "the precedence value."
                          }
                        },
                        "description": "The data source precedence is a way to know the precedence of each data source."
                      },
                      "readOnly": true,
                      "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                    },
                    "defaultDataSource": {
                      "x-ms-client-flatten": true,
                      "description": "Default data source is specifically used in cases where data source is not specified in an instance.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source name"
                        },
                        "dataSourceType": {
                          "type": "string",
                          "enum": [
                            "Connector",
                            "LinkInteraction",
                            "SystemDefault"
                          ],
                          "x-ms-enum": {
                            "name": "DataSourceType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source type."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "None",
                            "Active",
                            "Deleted"
                          ],
                          "x-ms-enum": {
                            "name": "Status",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source status."
                        },
                        "id": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The data source ID."
                        },
                        "dataSourceReferenceId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source reference id."
                        }
                      }
                    },
                    "isActivity": {
                      "type": "boolean",
                      "description": "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate Interaction operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the interaction.",
            "schema": {
              "description": "The interaction resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The Interaction Type Definition",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "description": "The attributes for the Type."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the property."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the property."
                    },
                    "localizedAttributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": "Any custom localized attributes for the Type."
                    },
                    "smallImage": {
                      "type": "string",
                      "description": "Small Image associated with the Property or EntityType."
                    },
                    "mediumImage": {
                      "type": "string",
                      "description": "Medium Image associated with the Property or EntityType."
                    },
                    "largeImage": {
                      "type": "string",
                      "description": "Large Image associated with the Property or EntityType."
                    },
                    "apiEntitySetName": {
                      "type": "string",
                      "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Type of entity."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Profile."
                    },
                    "instancesCount": {
                      "type": "integer",
                      "description": "The instance count."
                    },
                    "lastChangedUtc": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last changed time for the type definition."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "schemaItemTypeLink": {
                      "type": "string",
                      "description": "The schema org link. This helps ACI identify and suggest semantic models."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "timestampFieldName": {
                      "type": "string",
                      "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The name of the entity."
                    },
                    "idPropertyNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The id property names. Properties which uniquely identify an interaction instance."
                    },
                    "participantProfiles": {
                      "type": "array",
                      "items": {
                        "required": [
                          "participantName",
                          "profileTypeName",
                          "participantPropertyReferences"
                        ],
                        "properties": {
                          "profileTypeName": {
                            "type": "string",
                            "description": "Profile type name."
                          },
                          "participantPropertyReferences": {
                            "type": "array",
                            "items": {
                              "required": [
                                "sourcePropertyName",
                                "targetPropertyName"
                              ],
                              "properties": {
                                "sourcePropertyName": {
                                  "type": "string",
                                  "description": "The source property that maps to the target property."
                                },
                                "targetPropertyName": {
                                  "type": "string",
                                  "description": "The target property that maps to the source property."
                                }
                              },
                              "description": "The participant property reference."
                            },
                            "description": "The property references."
                          },
                          "participantName": {
                            "type": "string",
                            "description": "Participant name."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role that the participant is playing in the interaction."
                          }
                        },
                        "description": "Describes a profile type participating in an interaction."
                      },
                      "description": "Profiles that participated in the interaction."
                    },
                    "primaryParticipantProfilePropertyName": {
                      "type": "string",
                      "description": "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
                    },
                    "dataSourcePrecedenceRules": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "dataSource": {
                            "x-ms-client-flatten": true,
                            "properties": {
                              "name": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The data source name"
                              },
                              "dataSourceType": {
                                "type": "string",
                                "enum": [
                                  "Connector",
                                  "LinkInteraction",
                                  "SystemDefault"
                                ],
                                "x-ms-enum": {
                                  "name": "DataSourceType",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The data source type."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Active",
                                  "Deleted"
                                ],
                                "x-ms-enum": {
                                  "name": "Status",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The data source status."
                              },
                              "id": {
                                "type": "integer",
                                "readOnly": true,
                                "description": "The data source ID."
                              },
                              "dataSourceReferenceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The data source reference id."
                              }
                            },
                            "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                          },
                          "precedence": {
                            "type": "integer",
                            "description": "the precedence value."
                          }
                        },
                        "description": "The data source precedence is a way to know the precedence of each data source."
                      },
                      "readOnly": true,
                      "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                    },
                    "defaultDataSource": {
                      "x-ms-client-flatten": true,
                      "description": "Default data source is specifically used in cases where data source is not specified in an instance.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source name"
                        },
                        "dataSourceType": {
                          "type": "string",
                          "enum": [
                            "Connector",
                            "LinkInteraction",
                            "SystemDefault"
                          ],
                          "x-ms-enum": {
                            "name": "DataSourceType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source type."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "None",
                            "Active",
                            "Deleted"
                          ],
                          "x-ms-enum": {
                            "name": "Status",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source status."
                        },
                        "id": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The data source ID."
                        },
                        "dataSourceReferenceId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source reference id."
                        }
                      }
                    },
                    "isActivity": {
                      "type": "boolean",
                      "description": "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create interaction operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "Interactions"
        ],
        "operationId": "Interactions_Get",
        "description": "Gets information about the specified interaction.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "interactionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the interaction."
          },
          {
            "name": "locale-code",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "en-us",
            "description": "Locale of interaction to retrieve, default is en-us."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the interaction.",
            "schema": {
              "description": "The interaction resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The Interaction Type Definition",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "description": "The attributes for the Type."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the property."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the property."
                    },
                    "localizedAttributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": "Any custom localized attributes for the Type."
                    },
                    "smallImage": {
                      "type": "string",
                      "description": "Small Image associated with the Property or EntityType."
                    },
                    "mediumImage": {
                      "type": "string",
                      "description": "Medium Image associated with the Property or EntityType."
                    },
                    "largeImage": {
                      "type": "string",
                      "description": "Large Image associated with the Property or EntityType."
                    },
                    "apiEntitySetName": {
                      "type": "string",
                      "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Type of entity."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Profile."
                    },
                    "instancesCount": {
                      "type": "integer",
                      "description": "The instance count."
                    },
                    "lastChangedUtc": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last changed time for the type definition."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "schemaItemTypeLink": {
                      "type": "string",
                      "description": "The schema org link. This helps ACI identify and suggest semantic models."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "timestampFieldName": {
                      "type": "string",
                      "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The name of the entity."
                    },
                    "idPropertyNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The id property names. Properties which uniquely identify an interaction instance."
                    },
                    "participantProfiles": {
                      "type": "array",
                      "items": {
                        "required": [
                          "participantName",
                          "profileTypeName",
                          "participantPropertyReferences"
                        ],
                        "properties": {
                          "profileTypeName": {
                            "type": "string",
                            "description": "Profile type name."
                          },
                          "participantPropertyReferences": {
                            "type": "array",
                            "items": {
                              "required": [
                                "sourcePropertyName",
                                "targetPropertyName"
                              ],
                              "properties": {
                                "sourcePropertyName": {
                                  "type": "string",
                                  "description": "The source property that maps to the target property."
                                },
                                "targetPropertyName": {
                                  "type": "string",
                                  "description": "The target property that maps to the source property."
                                }
                              },
                              "description": "The participant property reference."
                            },
                            "description": "The property references."
                          },
                          "participantName": {
                            "type": "string",
                            "description": "Participant name."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role that the participant is playing in the interaction."
                          }
                        },
                        "description": "Describes a profile type participating in an interaction."
                      },
                      "description": "Profiles that participated in the interaction."
                    },
                    "primaryParticipantProfilePropertyName": {
                      "type": "string",
                      "description": "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
                    },
                    "dataSourcePrecedenceRules": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "dataSource": {
                            "x-ms-client-flatten": true,
                            "properties": {
                              "name": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The data source name"
                              },
                              "dataSourceType": {
                                "type": "string",
                                "enum": [
                                  "Connector",
                                  "LinkInteraction",
                                  "SystemDefault"
                                ],
                                "x-ms-enum": {
                                  "name": "DataSourceType",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The data source type."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Active",
                                  "Deleted"
                                ],
                                "x-ms-enum": {
                                  "name": "Status",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The data source status."
                              },
                              "id": {
                                "type": "integer",
                                "readOnly": true,
                                "description": "The data source ID."
                              },
                              "dataSourceReferenceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The data source reference id."
                              }
                            },
                            "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                          },
                          "precedence": {
                            "type": "integer",
                            "description": "the precedence value."
                          }
                        },
                        "description": "The data source precedence is a way to know the precedence of each data source."
                      },
                      "readOnly": true,
                      "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                    },
                    "defaultDataSource": {
                      "x-ms-client-flatten": true,
                      "description": "Default data source is specifically used in cases where data source is not specified in an instance.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source name"
                        },
                        "dataSourceType": {
                          "type": "string",
                          "enum": [
                            "Connector",
                            "LinkInteraction",
                            "SystemDefault"
                          ],
                          "x-ms-enum": {
                            "name": "DataSourceType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source type."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "None",
                            "Active",
                            "Deleted"
                          ],
                          "x-ms-enum": {
                            "name": "Status",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source status."
                        },
                        "id": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The data source ID."
                        },
                        "dataSourceReferenceId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source reference id."
                        }
                      }
                    },
                    "isActivity": {
                      "type": "boolean",
                      "description": "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions": {
      "get": {
        "tags": [
          "Interactions"
        ],
        "operationId": "Interactions_ListByHub",
        "description": "Gets all interactions in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "locale-code",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "en-us",
            "description": "Locale of interaction to retrieve, default is en-us."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the interactions in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The interaction resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The Interaction Type Definition",
                        "properties": {
                          "attributes": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "description": "The attributes for the Type."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions for the property."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display names for the property."
                          },
                          "localizedAttributes": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "description": "Any custom localized attributes for the Type."
                          },
                          "smallImage": {
                            "type": "string",
                            "description": "Small Image associated with the Property or EntityType."
                          },
                          "mediumImage": {
                            "type": "string",
                            "description": "Medium Image associated with the Property or EntityType."
                          },
                          "largeImage": {
                            "type": "string",
                            "description": "Large Image associated with the Property or EntityType."
                          },
                          "apiEntitySetName": {
                            "type": "string",
                            "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "None",
                              "Profile",
                              "Interaction",
                              "Relationship"
                            ],
                            "x-ms-enum": {
                              "name": "EntityTypes",
                              "modelAsString": false
                            },
                            "description": "Type of entity."
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "required": [
                                "fieldName",
                                "fieldType"
                              ],
                              "properties": {
                                "arrayValueSeparator": {
                                  "type": "string",
                                  "description": "Array value separator for properties with isArray set."
                                },
                                "enumValidValues": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "description": "The integer value of the enum member."
                                      },
                                      "localizedValueNames": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Localized names of the enum member."
                                      }
                                    },
                                    "description": "Valid enum values in case of an enum property."
                                  },
                                  "description": "Describes valid values for an enum property."
                                },
                                "fieldName": {
                                  "type": "string",
                                  "description": "Name of the property."
                                },
                                "fieldType": {
                                  "type": "string",
                                  "description": "Type of the property."
                                },
                                "isArray": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                                },
                                "isEnum": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is an enum."
                                },
                                "isFlagEnum": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is an flag enum."
                                },
                                "isImage": {
                                  "type": "boolean",
                                  "description": "Whether the property is an Image."
                                },
                                "isLocalizedString": {
                                  "type": "boolean",
                                  "description": "Whether the property is a localized string."
                                },
                                "isName": {
                                  "type": "boolean",
                                  "description": "Whether the property is a name or a part of name."
                                },
                                "isRequired": {
                                  "type": "boolean",
                                  "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                                },
                                "propertyId": {
                                  "type": "string",
                                  "description": "The ID associated with the property."
                                },
                                "schemaItemPropLink": {
                                  "type": "string",
                                  "description": "URL encoded schema.org item prop link for the property."
                                },
                                "maxLength": {
                                  "type": "integer",
                                  "description": "Max length of string. Used only if type is string."
                                },
                                "isAvailableInGraph": {
                                  "type": "boolean",
                                  "description": "Whether property is available in graph or not."
                                },
                                "dataSourcePrecedenceRules": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "dataSource": {
                                        "x-ms-client-flatten": true,
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "readOnly": true,
                                            "description": "The data source name"
                                          },
                                          "dataSourceType": {
                                            "type": "string",
                                            "enum": [
                                              "Connector",
                                              "LinkInteraction",
                                              "SystemDefault"
                                            ],
                                            "x-ms-enum": {
                                              "name": "DataSourceType",
                                              "modelAsString": true
                                            },
                                            "readOnly": true,
                                            "description": "The data source type."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "None",
                                              "Active",
                                              "Deleted"
                                            ],
                                            "x-ms-enum": {
                                              "name": "Status",
                                              "modelAsString": true
                                            },
                                            "readOnly": true,
                                            "description": "The data source status."
                                          },
                                          "id": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "description": "The data source ID."
                                          },
                                          "dataSourceReferenceId": {
                                            "type": "string",
                                            "readOnly": true,
                                            "description": "The data source reference id."
                                          }
                                        },
                                        "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                      },
                                      "precedence": {
                                        "type": "integer",
                                        "description": "the precedence value."
                                      }
                                    },
                                    "description": "The data source precedence is a way to know the precedence of each data source."
                                  },
                                  "readOnly": true,
                                  "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                                }
                              },
                              "description": "Property definition."
                            },
                            "description": "The properties of the Profile."
                          },
                          "instancesCount": {
                            "type": "integer",
                            "description": "The instance count."
                          },
                          "lastChangedUtc": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The last changed time for the type definition."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Provisioning state.",
                            "type": "string",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Expiring",
                              "Deleting",
                              "HumanIntervention",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStates",
                              "modelAsString": true
                            }
                          },
                          "schemaItemTypeLink": {
                            "type": "string",
                            "description": "The schema org link. This helps ACI identify and suggest semantic models."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          },
                          "timestampFieldName": {
                            "type": "string",
                            "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                          },
                          "typeName": {
                            "type": "string",
                            "description": "The name of the entity."
                          },
                          "idPropertyNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The id property names. Properties which uniquely identify an interaction instance."
                          },
                          "participantProfiles": {
                            "type": "array",
                            "items": {
                              "required": [
                                "participantName",
                                "profileTypeName",
                                "participantPropertyReferences"
                              ],
                              "properties": {
                                "profileTypeName": {
                                  "type": "string",
                                  "description": "Profile type name."
                                },
                                "participantPropertyReferences": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "sourcePropertyName",
                                      "targetPropertyName"
                                    ],
                                    "properties": {
                                      "sourcePropertyName": {
                                        "type": "string",
                                        "description": "The source property that maps to the target property."
                                      },
                                      "targetPropertyName": {
                                        "type": "string",
                                        "description": "The target property that maps to the source property."
                                      }
                                    },
                                    "description": "The participant property reference."
                                  },
                                  "description": "The property references."
                                },
                                "participantName": {
                                  "type": "string",
                                  "description": "Participant name."
                                },
                                "displayName": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized display name."
                                },
                                "description": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized descriptions."
                                },
                                "role": {
                                  "type": "string",
                                  "description": "The role that the participant is playing in the interaction."
                                }
                              },
                              "description": "Describes a profile type participating in an interaction."
                            },
                            "description": "Profiles that participated in the interaction."
                          },
                          "primaryParticipantProfilePropertyName": {
                            "type": "string",
                            "description": "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          },
                          "defaultDataSource": {
                            "x-ms-client-flatten": true,
                            "description": "Default data source is specifically used in cases where data source is not specified in an instance.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The data source name"
                              },
                              "dataSourceType": {
                                "type": "string",
                                "enum": [
                                  "Connector",
                                  "LinkInteraction",
                                  "SystemDefault"
                                ],
                                "x-ms-enum": {
                                  "name": "DataSourceType",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The data source type."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Active",
                                  "Deleted"
                                ],
                                "x-ms-enum": {
                                  "name": "Status",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The data source status."
                              },
                              "id": {
                                "type": "integer",
                                "readOnly": true,
                                "description": "The data source ID."
                              },
                              "dataSourceReferenceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The data source reference id."
                              }
                            }
                          },
                          "isActivity": {
                            "type": "boolean",
                            "description": "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
                          }
                        }
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list interaction operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}/suggestRelationshipLinks": {
      "post": {
        "tags": [
          "Interactions"
        ],
        "operationId": "Interactions_SuggestRelationshipLinks",
        "description": "Suggests relationships to create relationship links.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "interactionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the interaction."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get suggested Relationship Links.",
            "schema": {
              "properties": {
                "interactionName": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The interaction name."
                },
                "suggestedRelationships": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "profileName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The relationship profile."
                      },
                      "profilePropertyReferences": {
                        "type": "array",
                        "items": {
                          "required": [
                            "interactionPropertyName",
                            "profilePropertyName"
                          ],
                          "properties": {
                            "interactionPropertyName": {
                              "type": "string",
                              "description": "The source interaction property that maps to the target profile property."
                            },
                            "profilePropertyName": {
                              "type": "string",
                              "description": "The target profile property that maps to the source interaction property."
                            }
                          },
                          "description": "The participant profile property reference."
                        },
                        "readOnly": true,
                        "description": "The property references for the profile type."
                      },
                      "relatedProfileName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The related profile."
                      },
                      "relatedProfilePropertyReferences": {
                        "type": "array",
                        "items": {
                          "required": [
                            "interactionPropertyName",
                            "profilePropertyName"
                          ],
                          "properties": {
                            "interactionPropertyName": {
                              "type": "string",
                              "description": "The source interaction property that maps to the target profile property."
                            },
                            "profilePropertyName": {
                              "type": "string",
                              "description": "The target profile property that maps to the source interaction property."
                            }
                          },
                          "description": "The participant profile property reference."
                        },
                        "readOnly": true,
                        "description": "The property references for the related profile type."
                      },
                      "existingRelationshipName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of existing Relationship."
                      }
                    },
                    "description": "The definition of suggested relationship for the type."
                  },
                  "readOnly": true,
                  "description": "Suggested relationships for the type."
                }
              },
              "description": "The response of suggest relationship links operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}": {
      "put": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationships_CreateOrUpdate",
        "description": "Creates a relationship or updates an existing relationship within a hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Relationship.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 512
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The relationship resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "profileType",
                    "relatedProfileType"
                  ],
                  "properties": {
                    "cardinality": {
                      "type": "string",
                      "enum": [
                        "OneToOne",
                        "OneToMany",
                        "ManyToMany"
                      ],
                      "x-ms-enum": {
                        "name": "CardinalityTypes",
                        "modelAsString": false
                      },
                      "description": "The Relationship Cardinality."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Relationship."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Relationship."
                    },
                    "expiryDateTimeUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiry date time in UTC."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Relationship."
                    },
                    "lookupMappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldMappings"
                        ],
                        "properties": {
                          "fieldMappings": {
                            "type": "array",
                            "items": {
                              "required": [
                                "profileFieldName",
                                "relatedProfileKeyProperty"
                              ],
                              "properties": {
                                "profileFieldName": {
                                  "type": "string",
                                  "description": "Specifies the fieldName in profile."
                                },
                                "relatedProfileKeyProperty": {
                                  "type": "string",
                                  "description": "Specifies the KeyProperty (from StrongId) of the related profile."
                                }
                              },
                              "description": "Map a field of profile to its corresponding StrongId in Related Profile."
                            },
                            "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well."
                          }
                        },
                        "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile."
                      },
                      "description": "Optional property to be used to map fields in profile to their strong ids in related profile."
                    },
                    "profileType": {
                      "type": "string",
                      "description": "Profile type."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "relationshipName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The Relationship name."
                    },
                    "relatedProfileType": {
                      "type": "string",
                      "description": "Related profile being referenced."
                    },
                    "relationshipGuidId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The relationship guid id."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The definition of Relationship."
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate Relationship operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the relationship.",
            "schema": {
              "description": "The relationship resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "profileType",
                    "relatedProfileType"
                  ],
                  "properties": {
                    "cardinality": {
                      "type": "string",
                      "enum": [
                        "OneToOne",
                        "OneToMany",
                        "ManyToMany"
                      ],
                      "x-ms-enum": {
                        "name": "CardinalityTypes",
                        "modelAsString": false
                      },
                      "description": "The Relationship Cardinality."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Relationship."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Relationship."
                    },
                    "expiryDateTimeUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiry date time in UTC."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Relationship."
                    },
                    "lookupMappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldMappings"
                        ],
                        "properties": {
                          "fieldMappings": {
                            "type": "array",
                            "items": {
                              "required": [
                                "profileFieldName",
                                "relatedProfileKeyProperty"
                              ],
                              "properties": {
                                "profileFieldName": {
                                  "type": "string",
                                  "description": "Specifies the fieldName in profile."
                                },
                                "relatedProfileKeyProperty": {
                                  "type": "string",
                                  "description": "Specifies the KeyProperty (from StrongId) of the related profile."
                                }
                              },
                              "description": "Map a field of profile to its corresponding StrongId in Related Profile."
                            },
                            "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well."
                          }
                        },
                        "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile."
                      },
                      "description": "Optional property to be used to map fields in profile to their strong ids in related profile."
                    },
                    "profileType": {
                      "type": "string",
                      "description": "Profile type."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "relationshipName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The Relationship name."
                    },
                    "relatedProfileType": {
                      "type": "string",
                      "description": "Related profile being referenced."
                    },
                    "relationshipGuidId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The relationship guid id."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The definition of Relationship."
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create relationship operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationships_Get",
        "description": "Gets information about the specified relationship.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relationship."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the relationship.",
            "schema": {
              "description": "The relationship resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "profileType",
                    "relatedProfileType"
                  ],
                  "properties": {
                    "cardinality": {
                      "type": "string",
                      "enum": [
                        "OneToOne",
                        "OneToMany",
                        "ManyToMany"
                      ],
                      "x-ms-enum": {
                        "name": "CardinalityTypes",
                        "modelAsString": false
                      },
                      "description": "The Relationship Cardinality."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Relationship."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Relationship."
                    },
                    "expiryDateTimeUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiry date time in UTC."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "arrayValueSeparator": {
                            "type": "string",
                            "description": "Array value separator for properties with isArray set."
                          },
                          "enumValidValues": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "The integer value of the enum member."
                                },
                                "localizedValueNames": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Localized names of the enum member."
                                }
                              },
                              "description": "Valid enum values in case of an enum property."
                            },
                            "description": "Describes valid values for an enum property."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "Name of the property."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "Type of the property."
                          },
                          "isArray": {
                            "type": "boolean",
                            "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                          },
                          "isEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an enum."
                          },
                          "isFlagEnum": {
                            "type": "boolean",
                            "description": "Indicates if the property is an flag enum."
                          },
                          "isImage": {
                            "type": "boolean",
                            "description": "Whether the property is an Image."
                          },
                          "isLocalizedString": {
                            "type": "boolean",
                            "description": "Whether the property is a localized string."
                          },
                          "isName": {
                            "type": "boolean",
                            "description": "Whether the property is a name or a part of name."
                          },
                          "isRequired": {
                            "type": "boolean",
                            "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "The ID associated with the property."
                          },
                          "schemaItemPropLink": {
                            "type": "string",
                            "description": "URL encoded schema.org item prop link for the property."
                          },
                          "maxLength": {
                            "type": "integer",
                            "description": "Max length of string. Used only if type is string."
                          },
                          "isAvailableInGraph": {
                            "type": "boolean",
                            "description": "Whether property is available in graph or not."
                          },
                          "dataSourcePrecedenceRules": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "dataSource": {
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source name"
                                    },
                                    "dataSourceType": {
                                      "type": "string",
                                      "enum": [
                                        "Connector",
                                        "LinkInteraction",
                                        "SystemDefault"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataSourceType",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source type."
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Active",
                                        "Deleted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Status",
                                        "modelAsString": true
                                      },
                                      "readOnly": true,
                                      "description": "The data source status."
                                    },
                                    "id": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "description": "The data source ID."
                                    },
                                    "dataSourceReferenceId": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "The data source reference id."
                                    }
                                  },
                                  "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                },
                                "precedence": {
                                  "type": "integer",
                                  "description": "the precedence value."
                                }
                              },
                              "description": "The data source precedence is a way to know the precedence of each data source."
                            },
                            "readOnly": true,
                            "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                          }
                        },
                        "description": "Property definition."
                      },
                      "description": "The properties of the Relationship."
                    },
                    "lookupMappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "fieldMappings"
                        ],
                        "properties": {
                          "fieldMappings": {
                            "type": "array",
                            "items": {
                              "required": [
                                "profileFieldName",
                                "relatedProfileKeyProperty"
                              ],
                              "properties": {
                                "profileFieldName": {
                                  "type": "string",
                                  "description": "Specifies the fieldName in profile."
                                },
                                "relatedProfileKeyProperty": {
                                  "type": "string",
                                  "description": "Specifies the KeyProperty (from StrongId) of the related profile."
                                }
                              },
                              "description": "Map a field of profile to its corresponding StrongId in Related Profile."
                            },
                            "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well."
                          }
                        },
                        "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile."
                      },
                      "description": "Optional property to be used to map fields in profile to their strong ids in related profile."
                    },
                    "profileType": {
                      "type": "string",
                      "description": "Profile type."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "relationshipName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The Relationship name."
                    },
                    "relatedProfileType": {
                      "type": "string",
                      "description": "Related profile being referenced."
                    },
                    "relationshipGuidId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The relationship guid id."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The definition of Relationship."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationships_Delete",
        "description": "Deletes a relationship within a hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relationship."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The relationship is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationships_ListByHub",
        "description": "Gets all relationships in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the relationships in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The relationship resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "profileType",
                          "relatedProfileType"
                        ],
                        "properties": {
                          "cardinality": {
                            "type": "string",
                            "enum": [
                              "OneToOne",
                              "OneToMany",
                              "ManyToMany"
                            ],
                            "x-ms-enum": {
                              "name": "CardinalityTypes",
                              "modelAsString": false
                            },
                            "description": "The Relationship Cardinality."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name for the Relationship."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions for the Relationship."
                          },
                          "expiryDateTimeUtc": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The expiry date time in UTC."
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "required": [
                                "fieldName",
                                "fieldType"
                              ],
                              "properties": {
                                "arrayValueSeparator": {
                                  "type": "string",
                                  "description": "Array value separator for properties with isArray set."
                                },
                                "enumValidValues": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "description": "The integer value of the enum member."
                                      },
                                      "localizedValueNames": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Localized names of the enum member."
                                      }
                                    },
                                    "description": "Valid enum values in case of an enum property."
                                  },
                                  "description": "Describes valid values for an enum property."
                                },
                                "fieldName": {
                                  "type": "string",
                                  "description": "Name of the property."
                                },
                                "fieldType": {
                                  "type": "string",
                                  "description": "Type of the property."
                                },
                                "isArray": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                                },
                                "isEnum": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is an enum."
                                },
                                "isFlagEnum": {
                                  "type": "boolean",
                                  "description": "Indicates if the property is an flag enum."
                                },
                                "isImage": {
                                  "type": "boolean",
                                  "description": "Whether the property is an Image."
                                },
                                "isLocalizedString": {
                                  "type": "boolean",
                                  "description": "Whether the property is a localized string."
                                },
                                "isName": {
                                  "type": "boolean",
                                  "description": "Whether the property is a name or a part of name."
                                },
                                "isRequired": {
                                  "type": "boolean",
                                  "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                                },
                                "propertyId": {
                                  "type": "string",
                                  "description": "The ID associated with the property."
                                },
                                "schemaItemPropLink": {
                                  "type": "string",
                                  "description": "URL encoded schema.org item prop link for the property."
                                },
                                "maxLength": {
                                  "type": "integer",
                                  "description": "Max length of string. Used only if type is string."
                                },
                                "isAvailableInGraph": {
                                  "type": "boolean",
                                  "description": "Whether property is available in graph or not."
                                },
                                "dataSourcePrecedenceRules": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "dataSource": {
                                        "x-ms-client-flatten": true,
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "readOnly": true,
                                            "description": "The data source name"
                                          },
                                          "dataSourceType": {
                                            "type": "string",
                                            "enum": [
                                              "Connector",
                                              "LinkInteraction",
                                              "SystemDefault"
                                            ],
                                            "x-ms-enum": {
                                              "name": "DataSourceType",
                                              "modelAsString": true
                                            },
                                            "readOnly": true,
                                            "description": "The data source type."
                                          },
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "None",
                                              "Active",
                                              "Deleted"
                                            ],
                                            "x-ms-enum": {
                                              "name": "Status",
                                              "modelAsString": true
                                            },
                                            "readOnly": true,
                                            "description": "The data source status."
                                          },
                                          "id": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "description": "The data source ID."
                                          },
                                          "dataSourceReferenceId": {
                                            "type": "string",
                                            "readOnly": true,
                                            "description": "The data source reference id."
                                          }
                                        },
                                        "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                                      },
                                      "precedence": {
                                        "type": "integer",
                                        "description": "the precedence value."
                                      }
                                    },
                                    "description": "The data source precedence is a way to know the precedence of each data source."
                                  },
                                  "readOnly": true,
                                  "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                                }
                              },
                              "description": "Property definition."
                            },
                            "description": "The properties of the Relationship."
                          },
                          "lookupMappings": {
                            "type": "array",
                            "items": {
                              "required": [
                                "fieldMappings"
                              ],
                              "properties": {
                                "fieldMappings": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "profileFieldName",
                                      "relatedProfileKeyProperty"
                                    ],
                                    "properties": {
                                      "profileFieldName": {
                                        "type": "string",
                                        "description": "Specifies the fieldName in profile."
                                      },
                                      "relatedProfileKeyProperty": {
                                        "type": "string",
                                        "description": "Specifies the KeyProperty (from StrongId) of the related profile."
                                      }
                                    },
                                    "description": "Map a field of profile to its corresponding StrongId in Related Profile."
                                  },
                                  "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well."
                                }
                              },
                              "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile."
                            },
                            "description": "Optional property to be used to map fields in profile to their strong ids in related profile."
                          },
                          "profileType": {
                            "type": "string",
                            "description": "Profile type."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Provisioning state.",
                            "type": "string",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Expiring",
                              "Deleting",
                              "HumanIntervention",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStates",
                              "modelAsString": true
                            }
                          },
                          "relationshipName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The Relationship name."
                          },
                          "relatedProfileType": {
                            "type": "string",
                            "description": "Related profile being referenced."
                          },
                          "relationshipGuidId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The relationship guid id."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          }
                        },
                        "description": "The definition of Relationship."
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list relationship operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}": {
      "put": {
        "tags": [
          "RelationshipLinks"
        ],
        "operationId": "RelationshipLinks_CreateOrUpdate",
        "description": "Creates a relationship link or updates an existing relationship link within a hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "relationshipLinkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relationship link.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 512
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The relationship link resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "interactionType",
                    "profilePropertyReferences",
                    "relatedProfilePropertyReferences",
                    "relationshipName"
                  ],
                  "properties": {
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Relationship Link."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Relationship Link."
                    },
                    "interactionType": {
                      "type": "string",
                      "description": "The InteractionType associated with the Relationship Link."
                    },
                    "linkName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The name of the Relationship Link."
                    },
                    "mappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionFieldName",
                          "relationshipFieldName"
                        ],
                        "properties": {
                          "interactionFieldName": {
                            "type": "string",
                            "description": "The field name on the Interaction Type."
                          },
                          "linkType": {
                            "type": "string",
                            "enum": [
                              "UpdateAlways",
                              "CopyIfNull"
                            ],
                            "x-ms-enum": {
                              "name": "LinkTypes",
                              "modelAsString": false
                            },
                            "description": "Link type."
                          },
                          "relationshipFieldName": {
                            "type": "string",
                            "description": "The field name on the Relationship metadata."
                          }
                        },
                        "description": "The fields mapping for Relationships."
                      },
                      "description": "The mappings between Interaction and Relationship fields."
                    },
                    "profilePropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionPropertyName",
                          "profilePropertyName"
                        ],
                        "properties": {
                          "interactionPropertyName": {
                            "type": "string",
                            "description": "The source interaction property that maps to the target profile property."
                          },
                          "profilePropertyName": {
                            "type": "string",
                            "description": "The target profile property that maps to the source interaction property."
                          }
                        },
                        "description": "The participant profile property reference."
                      },
                      "description": "The property references for the Profile of the Relationship."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "relatedProfilePropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionPropertyName",
                          "profilePropertyName"
                        ],
                        "properties": {
                          "interactionPropertyName": {
                            "type": "string",
                            "description": "The source interaction property that maps to the target profile property."
                          },
                          "profilePropertyName": {
                            "type": "string",
                            "description": "The target profile property that maps to the source interaction property."
                          }
                        },
                        "description": "The participant profile property reference."
                      },
                      "description": "The property references for the Related Profile of the Relationship."
                    },
                    "relationshipName": {
                      "type": "string",
                      "description": "The Relationship associated with the Link."
                    },
                    "relationshipGuidId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The relationship guid id."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The definition of relationship link."
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate relationship link operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the relationship link.",
            "schema": {
              "description": "The relationship link resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "interactionType",
                    "profilePropertyReferences",
                    "relatedProfilePropertyReferences",
                    "relationshipName"
                  ],
                  "properties": {
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Relationship Link."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Relationship Link."
                    },
                    "interactionType": {
                      "type": "string",
                      "description": "The InteractionType associated with the Relationship Link."
                    },
                    "linkName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The name of the Relationship Link."
                    },
                    "mappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionFieldName",
                          "relationshipFieldName"
                        ],
                        "properties": {
                          "interactionFieldName": {
                            "type": "string",
                            "description": "The field name on the Interaction Type."
                          },
                          "linkType": {
                            "type": "string",
                            "enum": [
                              "UpdateAlways",
                              "CopyIfNull"
                            ],
                            "x-ms-enum": {
                              "name": "LinkTypes",
                              "modelAsString": false
                            },
                            "description": "Link type."
                          },
                          "relationshipFieldName": {
                            "type": "string",
                            "description": "The field name on the Relationship metadata."
                          }
                        },
                        "description": "The fields mapping for Relationships."
                      },
                      "description": "The mappings between Interaction and Relationship fields."
                    },
                    "profilePropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionPropertyName",
                          "profilePropertyName"
                        ],
                        "properties": {
                          "interactionPropertyName": {
                            "type": "string",
                            "description": "The source interaction property that maps to the target profile property."
                          },
                          "profilePropertyName": {
                            "type": "string",
                            "description": "The target profile property that maps to the source interaction property."
                          }
                        },
                        "description": "The participant profile property reference."
                      },
                      "description": "The property references for the Profile of the Relationship."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "relatedProfilePropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionPropertyName",
                          "profilePropertyName"
                        ],
                        "properties": {
                          "interactionPropertyName": {
                            "type": "string",
                            "description": "The source interaction property that maps to the target profile property."
                          },
                          "profilePropertyName": {
                            "type": "string",
                            "description": "The target profile property that maps to the source interaction property."
                          }
                        },
                        "description": "The participant profile property reference."
                      },
                      "description": "The property references for the Related Profile of the Relationship."
                    },
                    "relationshipName": {
                      "type": "string",
                      "description": "The Relationship associated with the Link."
                    },
                    "relationshipGuidId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The relationship guid id."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The definition of relationship link."
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create relationship operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "RelationshipLinks"
        ],
        "operationId": "RelationshipLinks_Get",
        "description": "Gets information about the specified relationship Link.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "relationshipLinkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relationship link."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the relationship link.",
            "schema": {
              "description": "The relationship link resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "interactionType",
                    "profilePropertyReferences",
                    "relatedProfilePropertyReferences",
                    "relationshipName"
                  ],
                  "properties": {
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Relationship Link."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Relationship Link."
                    },
                    "interactionType": {
                      "type": "string",
                      "description": "The InteractionType associated with the Relationship Link."
                    },
                    "linkName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The name of the Relationship Link."
                    },
                    "mappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionFieldName",
                          "relationshipFieldName"
                        ],
                        "properties": {
                          "interactionFieldName": {
                            "type": "string",
                            "description": "The field name on the Interaction Type."
                          },
                          "linkType": {
                            "type": "string",
                            "enum": [
                              "UpdateAlways",
                              "CopyIfNull"
                            ],
                            "x-ms-enum": {
                              "name": "LinkTypes",
                              "modelAsString": false
                            },
                            "description": "Link type."
                          },
                          "relationshipFieldName": {
                            "type": "string",
                            "description": "The field name on the Relationship metadata."
                          }
                        },
                        "description": "The fields mapping for Relationships."
                      },
                      "description": "The mappings between Interaction and Relationship fields."
                    },
                    "profilePropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionPropertyName",
                          "profilePropertyName"
                        ],
                        "properties": {
                          "interactionPropertyName": {
                            "type": "string",
                            "description": "The source interaction property that maps to the target profile property."
                          },
                          "profilePropertyName": {
                            "type": "string",
                            "description": "The target profile property that maps to the source interaction property."
                          }
                        },
                        "description": "The participant profile property reference."
                      },
                      "description": "The property references for the Profile of the Relationship."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "relatedProfilePropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "interactionPropertyName",
                          "profilePropertyName"
                        ],
                        "properties": {
                          "interactionPropertyName": {
                            "type": "string",
                            "description": "The source interaction property that maps to the target profile property."
                          },
                          "profilePropertyName": {
                            "type": "string",
                            "description": "The target profile property that maps to the source interaction property."
                          }
                        },
                        "description": "The participant profile property reference."
                      },
                      "description": "The property references for the Related Profile of the Relationship."
                    },
                    "relationshipName": {
                      "type": "string",
                      "description": "The Relationship associated with the Link."
                    },
                    "relationshipGuidId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The relationship guid id."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The definition of relationship link."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RelationshipLinks"
        ],
        "operationId": "RelationshipLinks_Delete",
        "description": "Deletes a relationship link within a hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "relationshipLinkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relationship."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The relationship link is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks": {
      "get": {
        "tags": [
          "RelationshipLinks"
        ],
        "operationId": "RelationshipLinks_ListByHub",
        "description": "Gets all relationship links in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the relationship links in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The relationship link resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "interactionType",
                          "profilePropertyReferences",
                          "relatedProfilePropertyReferences",
                          "relationshipName"
                        ],
                        "properties": {
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name for the Relationship Link."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions for the Relationship Link."
                          },
                          "interactionType": {
                            "type": "string",
                            "description": "The InteractionType associated with the Relationship Link."
                          },
                          "linkName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The name of the Relationship Link."
                          },
                          "mappings": {
                            "type": "array",
                            "items": {
                              "required": [
                                "interactionFieldName",
                                "relationshipFieldName"
                              ],
                              "properties": {
                                "interactionFieldName": {
                                  "type": "string",
                                  "description": "The field name on the Interaction Type."
                                },
                                "linkType": {
                                  "type": "string",
                                  "enum": [
                                    "UpdateAlways",
                                    "CopyIfNull"
                                  ],
                                  "x-ms-enum": {
                                    "name": "LinkTypes",
                                    "modelAsString": false
                                  },
                                  "description": "Link type."
                                },
                                "relationshipFieldName": {
                                  "type": "string",
                                  "description": "The field name on the Relationship metadata."
                                }
                              },
                              "description": "The fields mapping for Relationships."
                            },
                            "description": "The mappings between Interaction and Relationship fields."
                          },
                          "profilePropertyReferences": {
                            "type": "array",
                            "items": {
                              "required": [
                                "interactionPropertyName",
                                "profilePropertyName"
                              ],
                              "properties": {
                                "interactionPropertyName": {
                                  "type": "string",
                                  "description": "The source interaction property that maps to the target profile property."
                                },
                                "profilePropertyName": {
                                  "type": "string",
                                  "description": "The target profile property that maps to the source interaction property."
                                }
                              },
                              "description": "The participant profile property reference."
                            },
                            "description": "The property references for the Profile of the Relationship."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Provisioning state.",
                            "type": "string",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Expiring",
                              "Deleting",
                              "HumanIntervention",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStates",
                              "modelAsString": true
                            }
                          },
                          "relatedProfilePropertyReferences": {
                            "type": "array",
                            "items": {
                              "required": [
                                "interactionPropertyName",
                                "profilePropertyName"
                              ],
                              "properties": {
                                "interactionPropertyName": {
                                  "type": "string",
                                  "description": "The source interaction property that maps to the target profile property."
                                },
                                "profilePropertyName": {
                                  "type": "string",
                                  "description": "The target profile property that maps to the source interaction property."
                                }
                              },
                              "description": "The participant profile property reference."
                            },
                            "description": "The property references for the Related Profile of the Relationship."
                          },
                          "relationshipName": {
                            "type": "string",
                            "description": "The Relationship associated with the Link."
                          },
                          "relationshipGuidId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The relationship guid id."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          }
                        },
                        "description": "The definition of relationship link."
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list relationship link operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}": {
      "put": {
        "tags": [
          "AuthorizationPolicies"
        ],
        "operationId": "AuthorizationPolicies_CreateOrUpdate",
        "description": "Creates an authorization policy or updates an existing authorization policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "authorizationPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the policy.",
            "pattern": "^[A-Za-z0-9]$|^[A-Za-z0-9][\\w-\\.]*[A-Za-z0-9]$",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The authorization policy resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "permissions"
                  ],
                  "properties": {
                    "policyName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Name of the policy."
                    },
                    "permissions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "Read",
                          "Write",
                          "Manage"
                        ],
                        "x-ms-enum": {
                          "name": "PermissionTypes",
                          "modelAsString": false
                        },
                        "description": "Supported permission types."
                      },
                      "description": "The permissions associated with the policy."
                    },
                    "primaryKey": {
                      "type": "string",
                      "description": "Primary key associated with the policy."
                    },
                    "secondaryKey": {
                      "type": "string",
                      "description": "Secondary key associated with the policy."
                    }
                  },
                  "description": "The authorization policy."
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate authorization policy operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully update an existing authorization policy.",
            "schema": {
              "description": "The authorization policy resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "permissions"
                  ],
                  "properties": {
                    "policyName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Name of the policy."
                    },
                    "permissions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "Read",
                          "Write",
                          "Manage"
                        ],
                        "x-ms-enum": {
                          "name": "PermissionTypes",
                          "modelAsString": false
                        },
                        "description": "Supported permission types."
                      },
                      "description": "The permissions associated with the policy."
                    },
                    "primaryKey": {
                      "type": "string",
                      "description": "Primary key associated with the policy."
                    },
                    "secondaryKey": {
                      "type": "string",
                      "description": "Secondary key associated with the policy."
                    }
                  },
                  "description": "The authorization policy."
                }
              }
            }
          },
          "201": {
            "description": "Created. A new authorization policy is created.",
            "schema": {
              "description": "The authorization policy resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "permissions"
                  ],
                  "properties": {
                    "policyName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Name of the policy."
                    },
                    "permissions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "Read",
                          "Write",
                          "Manage"
                        ],
                        "x-ms-enum": {
                          "name": "PermissionTypes",
                          "modelAsString": false
                        },
                        "description": "Supported permission types."
                      },
                      "description": "The permissions associated with the policy."
                    },
                    "primaryKey": {
                      "type": "string",
                      "description": "Primary key associated with the policy."
                    },
                    "secondaryKey": {
                      "type": "string",
                      "description": "Secondary key associated with the policy."
                    }
                  },
                  "description": "The authorization policy."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AuthorizationPolicies"
        ],
        "operationId": "AuthorizationPolicies_Get",
        "description": "Gets an authorization policy in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "authorizationPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the policy."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the authorization policy.",
            "schema": {
              "description": "The authorization policy resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "permissions"
                  ],
                  "properties": {
                    "policyName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Name of the policy."
                    },
                    "permissions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "Read",
                          "Write",
                          "Manage"
                        ],
                        "x-ms-enum": {
                          "name": "PermissionTypes",
                          "modelAsString": false
                        },
                        "description": "Supported permission types."
                      },
                      "description": "The permissions associated with the policy."
                    },
                    "primaryKey": {
                      "type": "string",
                      "description": "Primary key associated with the policy."
                    },
                    "secondaryKey": {
                      "type": "string",
                      "description": "Secondary key associated with the policy."
                    }
                  },
                  "description": "The authorization policy."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies": {
      "get": {
        "tags": [
          "AuthorizationPolicies"
        ],
        "operationId": "AuthorizationPolicies_ListByHub",
        "description": "Gets all the authorization policies in a specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the authorization policies in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The authorization policy resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "permissions"
                        ],
                        "properties": {
                          "policyName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the policy."
                          },
                          "permissions": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "type": "string",
                              "enum": [
                                "Read",
                                "Write",
                                "Manage"
                              ],
                              "x-ms-enum": {
                                "name": "PermissionTypes",
                                "modelAsString": false
                              },
                              "description": "Supported permission types."
                            },
                            "description": "The permissions associated with the policy."
                          },
                          "primaryKey": {
                            "type": "string",
                            "description": "Primary key associated with the policy."
                          },
                          "secondaryKey": {
                            "type": "string",
                            "description": "Secondary key associated with the policy."
                          }
                        },
                        "description": "The authorization policy."
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list authorization policy operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regeneratePrimaryKey": {
      "post": {
        "tags": [
          "AuthorizationPolicies"
        ],
        "operationId": "AuthorizationPolicies_RegeneratePrimaryKey",
        "description": "Regenerates the primary policy key of the specified authorization policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "authorizationPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the policy."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The primary key of the authorization policy is regenerated.",
            "schema": {
              "required": [
                "permissions"
              ],
              "properties": {
                "policyName": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Name of the policy."
                },
                "permissions": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "enum": [
                      "Read",
                      "Write",
                      "Manage"
                    ],
                    "x-ms-enum": {
                      "name": "PermissionTypes",
                      "modelAsString": false
                    },
                    "description": "Supported permission types."
                  },
                  "description": "The permissions associated with the policy."
                },
                "primaryKey": {
                  "type": "string",
                  "description": "Primary key associated with the policy."
                },
                "secondaryKey": {
                  "type": "string",
                  "description": "Secondary key associated with the policy."
                }
              },
              "description": "The authorization policy."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regenerateSecondaryKey": {
      "post": {
        "tags": [
          "AuthorizationPolicies"
        ],
        "operationId": "AuthorizationPolicies_RegenerateSecondaryKey",
        "description": "Regenerates the secondary policy key of the specified authorization policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "authorizationPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the policy."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The secondary key of the authorization policy is regenerated.",
            "schema": {
              "required": [
                "permissions"
              ],
              "properties": {
                "policyName": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Name of the policy."
                },
                "permissions": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "enum": [
                      "Read",
                      "Write",
                      "Manage"
                    ],
                    "x-ms-enum": {
                      "name": "PermissionTypes",
                      "modelAsString": false
                    },
                    "description": "Supported permission types."
                  },
                  "description": "The permissions associated with the policy."
                },
                "primaryKey": {
                  "type": "string",
                  "description": "Primary key associated with the policy."
                },
                "secondaryKey": {
                  "type": "string",
                  "description": "Secondary key associated with the policy."
                }
              },
              "description": "The authorization policy."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}": {
      "put": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connectors_CreateOrUpdate",
        "description": "Creates a connector or updates an existing connector in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 128
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The connector resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "connectorType",
                    "connectorProperties"
                  ],
                  "properties": {
                    "connectorId": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "ID of the connector."
                    },
                    "connectorName": {
                      "type": "string",
                      "description": "Name of the connector."
                    },
                    "connectorType": {
                      "description": "Type of connector.",
                      "type": "string",
                      "enum": [
                        "None",
                        "CRM",
                        "AzureBlob",
                        "Salesforce",
                        "ExchangeOnline",
                        "Outbound"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorTypes",
                        "modelAsString": true
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the connector."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the connector."
                    },
                    "connectorProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "description": "The connector properties."
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The created time."
                    },
                    "lastModified": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last modified time."
                    },
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Creating",
                        "Created",
                        "Ready",
                        "Expiring",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorStates",
                        "modelAsString": false
                      },
                      "description": "State of connector."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "isInternal": {
                      "type": "boolean",
                      "description": "If this is an internal connector."
                    }
                  },
                  "description": "Properties of connector."
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate Connector operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the connector.",
            "schema": {
              "description": "The connector resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "connectorType",
                    "connectorProperties"
                  ],
                  "properties": {
                    "connectorId": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "ID of the connector."
                    },
                    "connectorName": {
                      "type": "string",
                      "description": "Name of the connector."
                    },
                    "connectorType": {
                      "description": "Type of connector.",
                      "type": "string",
                      "enum": [
                        "None",
                        "CRM",
                        "AzureBlob",
                        "Salesforce",
                        "ExchangeOnline",
                        "Outbound"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorTypes",
                        "modelAsString": true
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the connector."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the connector."
                    },
                    "connectorProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "description": "The connector properties."
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The created time."
                    },
                    "lastModified": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last modified time."
                    },
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Creating",
                        "Created",
                        "Ready",
                        "Expiring",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorStates",
                        "modelAsString": false
                      },
                      "description": "State of connector."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "isInternal": {
                      "type": "boolean",
                      "description": "If this is an internal connector."
                    }
                  },
                  "description": "Properties of connector."
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create connector operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connectors_Get",
        "description": "Gets a connector in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the connector.",
            "schema": {
              "description": "The connector resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "connectorType",
                    "connectorProperties"
                  ],
                  "properties": {
                    "connectorId": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "ID of the connector."
                    },
                    "connectorName": {
                      "type": "string",
                      "description": "Name of the connector."
                    },
                    "connectorType": {
                      "description": "Type of connector.",
                      "type": "string",
                      "enum": [
                        "None",
                        "CRM",
                        "AzureBlob",
                        "Salesforce",
                        "ExchangeOnline",
                        "Outbound"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorTypes",
                        "modelAsString": true
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the connector."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the connector."
                    },
                    "connectorProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "description": "The connector properties."
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The created time."
                    },
                    "lastModified": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last modified time."
                    },
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Creating",
                        "Created",
                        "Ready",
                        "Expiring",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorStates",
                        "modelAsString": false
                      },
                      "description": "State of connector."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "isInternal": {
                      "type": "boolean",
                      "description": "If this is an internal connector."
                    }
                  },
                  "description": "Properties of connector."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connectors_Delete",
        "description": "Deletes a connector in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The connector is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          },
          "204": {
            "description": "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connectors_ListByHub",
        "description": "Gets all the connectors in the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the connectors in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The connector resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "connectorType",
                          "connectorProperties"
                        ],
                        "properties": {
                          "connectorId": {
                            "type": "integer",
                            "readOnly": true,
                            "description": "ID of the connector."
                          },
                          "connectorName": {
                            "type": "string",
                            "description": "Name of the connector."
                          },
                          "connectorType": {
                            "description": "Type of connector.",
                            "type": "string",
                            "enum": [
                              "None",
                              "CRM",
                              "AzureBlob",
                              "Salesforce",
                              "ExchangeOnline",
                              "Outbound"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectorTypes",
                              "modelAsString": true
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the connector."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the connector."
                          },
                          "connectorProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            },
                            "description": "The connector properties."
                          },
                          "created": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The created time."
                          },
                          "lastModified": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The last modified time."
                          },
                          "state": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Creating",
                              "Created",
                              "Ready",
                              "Expiring",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectorStates",
                              "modelAsString": false
                            },
                            "description": "State of connector."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          },
                          "isInternal": {
                            "type": "boolean",
                            "description": "If this is an internal connector."
                          }
                        },
                        "description": "Properties of connector."
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list connector operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}": {
      "put": {
        "tags": [
          "ConnectorMappings"
        ],
        "operationId": "ConnectorMappings_CreateOrUpdate",
        "description": "Creates a connector mapping or updates an existing connector mapping in the connector.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector."
          },
          {
            "name": "mappingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector mapping.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 128
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The connector mapping resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "entityType",
                    "entityTypeName",
                    "mappingProperties"
                  ],
                  "properties": {
                    "connectorName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The connector name."
                    },
                    "connectorType": {
                      "description": "Type of connector.",
                      "type": "string",
                      "enum": [
                        "None",
                        "CRM",
                        "AzureBlob",
                        "Salesforce",
                        "ExchangeOnline",
                        "Outbound"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorTypes",
                        "modelAsString": true
                      }
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The created time."
                    },
                    "lastModified": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last modified time."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Defines which entity type the file should map to."
                    },
                    "entityTypeName": {
                      "type": "string",
                      "description": "The mapping entity name."
                    },
                    "connectorMappingName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The connector mapping name"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name for the connector mapping."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the connector mapping."
                    },
                    "dataFormatId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The DataFormat ID."
                    },
                    "mappingProperties": {
                      "description": "The properties of the mapping.",
                      "required": [
                        "availability",
                        "completeOperation",
                        "errorManagement",
                        "format",
                        "structure"
                      ],
                      "properties": {
                        "folderPath": {
                          "type": "string",
                          "description": "The folder path for the mapping."
                        },
                        "fileFilter": {
                          "type": "string",
                          "description": "The file filter for the mapping."
                        },
                        "hasHeader": {
                          "type": "boolean",
                          "description": "If the file contains a header or not."
                        },
                        "errorManagement": {
                          "description": "The error management setting for the mapping.",
                          "required": [
                            "errorManagementType"
                          ],
                          "properties": {
                            "errorManagementType": {
                              "type": "string",
                              "enum": [
                                "RejectAndContinue",
                                "StopImport",
                                "RejectUntilLimit"
                              ],
                              "x-ms-enum": {
                                "name": "ErrorManagementTypes",
                                "modelAsString": false
                              },
                              "description": "The type of error management to use for the mapping."
                            },
                            "errorLimit": {
                              "type": "integer",
                              "description": "The error limit allowed while importing data."
                            }
                          }
                        },
                        "format": {
                          "description": "The format of mapping property.",
                          "required": [
                            "formatType"
                          ],
                          "properties": {
                            "formatType": {
                              "type": "string",
                              "enum": [
                                "TextFormat"
                              ],
                              "x-ms-enum": {
                                "name": "FormatTypes",
                                "modelAsString": false
                              },
                              "description": "The type mapping format."
                            },
                            "columnDelimiter": {
                              "type": "string",
                              "description": "The character that signifies a break between columns."
                            },
                            "acceptLanguage": {
                              "type": "string",
                              "description": "The oData language."
                            },
                            "quoteCharacter": {
                              "type": "string",
                              "description": "Quote character, used to indicate enquoted fields."
                            },
                            "quoteEscapeCharacter": {
                              "type": "string",
                              "description": "Escape character for quotes, can be the same as the quoteCharacter."
                            },
                            "arraySeparator": {
                              "type": "string",
                              "description": "Character separating array elements."
                            }
                          }
                        },
                        "availability": {
                          "description": "The availability of mapping property.",
                          "required": [
                            "interval"
                          ],
                          "properties": {
                            "frequency": {
                              "type": "string",
                              "enum": [
                                "Minute",
                                "Hour",
                                "Day",
                                "Week",
                                "Month"
                              ],
                              "x-ms-enum": {
                                "name": "FrequencyTypes",
                                "modelAsString": false
                              },
                              "description": "The frequency to update."
                            },
                            "interval": {
                              "type": "integer",
                              "description": "The interval of the given frequency to use."
                            }
                          }
                        },
                        "structure": {
                          "type": "array",
                          "items": {
                            "required": [
                              "propertyName",
                              "columnName"
                            ],
                            "properties": {
                              "propertyName": {
                                "type": "string",
                                "description": "The property name of the mapping entity."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "The column name of the import file."
                              },
                              "customFormatSpecifier": {
                                "type": "string",
                                "description": "Custom format specifier for input parsing."
                              },
                              "isEncrypted": {
                                "type": "boolean",
                                "description": "Indicates if the column is encrypted."
                              }
                            },
                            "description": "Connector mapping property structure."
                          },
                          "description": "Ingestion mapping information at property level."
                        },
                        "completeOperation": {
                          "description": "The operation after import is done.",
                          "properties": {
                            "completionOperationType": {
                              "type": "string",
                              "enum": [
                                "DoNothing",
                                "DeleteFile",
                                "MoveFile"
                              ],
                              "x-ms-enum": {
                                "name": "CompletionOperationTypes",
                                "modelAsString": false
                              },
                              "description": "The type of completion operation."
                            },
                            "destinationFolder": {
                              "type": "string",
                              "description": "The destination folder where files will be moved to once the import is done."
                            }
                          }
                        }
                      }
                    },
                    "nextRunTime": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The next run time based on customer's settings."
                    },
                    "runId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The RunId."
                    },
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Creating",
                        "Created",
                        "Failed",
                        "Ready",
                        "Running",
                        "Stopped",
                        "Expiring"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorMappingStates",
                        "modelAsString": false
                      },
                      "description": "State of connector mapping."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The connector mapping definition."
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate Connector Mapping operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the connector mapping.",
            "schema": {
              "description": "The connector mapping resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "entityType",
                    "entityTypeName",
                    "mappingProperties"
                  ],
                  "properties": {
                    "connectorName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The connector name."
                    },
                    "connectorType": {
                      "description": "Type of connector.",
                      "type": "string",
                      "enum": [
                        "None",
                        "CRM",
                        "AzureBlob",
                        "Salesforce",
                        "ExchangeOnline",
                        "Outbound"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorTypes",
                        "modelAsString": true
                      }
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The created time."
                    },
                    "lastModified": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last modified time."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Defines which entity type the file should map to."
                    },
                    "entityTypeName": {
                      "type": "string",
                      "description": "The mapping entity name."
                    },
                    "connectorMappingName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The connector mapping name"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name for the connector mapping."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the connector mapping."
                    },
                    "dataFormatId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The DataFormat ID."
                    },
                    "mappingProperties": {
                      "description": "The properties of the mapping.",
                      "required": [
                        "availability",
                        "completeOperation",
                        "errorManagement",
                        "format",
                        "structure"
                      ],
                      "properties": {
                        "folderPath": {
                          "type": "string",
                          "description": "The folder path for the mapping."
                        },
                        "fileFilter": {
                          "type": "string",
                          "description": "The file filter for the mapping."
                        },
                        "hasHeader": {
                          "type": "boolean",
                          "description": "If the file contains a header or not."
                        },
                        "errorManagement": {
                          "description": "The error management setting for the mapping.",
                          "required": [
                            "errorManagementType"
                          ],
                          "properties": {
                            "errorManagementType": {
                              "type": "string",
                              "enum": [
                                "RejectAndContinue",
                                "StopImport",
                                "RejectUntilLimit"
                              ],
                              "x-ms-enum": {
                                "name": "ErrorManagementTypes",
                                "modelAsString": false
                              },
                              "description": "The type of error management to use for the mapping."
                            },
                            "errorLimit": {
                              "type": "integer",
                              "description": "The error limit allowed while importing data."
                            }
                          }
                        },
                        "format": {
                          "description": "The format of mapping property.",
                          "required": [
                            "formatType"
                          ],
                          "properties": {
                            "formatType": {
                              "type": "string",
                              "enum": [
                                "TextFormat"
                              ],
                              "x-ms-enum": {
                                "name": "FormatTypes",
                                "modelAsString": false
                              },
                              "description": "The type mapping format."
                            },
                            "columnDelimiter": {
                              "type": "string",
                              "description": "The character that signifies a break between columns."
                            },
                            "acceptLanguage": {
                              "type": "string",
                              "description": "The oData language."
                            },
                            "quoteCharacter": {
                              "type": "string",
                              "description": "Quote character, used to indicate enquoted fields."
                            },
                            "quoteEscapeCharacter": {
                              "type": "string",
                              "description": "Escape character for quotes, can be the same as the quoteCharacter."
                            },
                            "arraySeparator": {
                              "type": "string",
                              "description": "Character separating array elements."
                            }
                          }
                        },
                        "availability": {
                          "description": "The availability of mapping property.",
                          "required": [
                            "interval"
                          ],
                          "properties": {
                            "frequency": {
                              "type": "string",
                              "enum": [
                                "Minute",
                                "Hour",
                                "Day",
                                "Week",
                                "Month"
                              ],
                              "x-ms-enum": {
                                "name": "FrequencyTypes",
                                "modelAsString": false
                              },
                              "description": "The frequency to update."
                            },
                            "interval": {
                              "type": "integer",
                              "description": "The interval of the given frequency to use."
                            }
                          }
                        },
                        "structure": {
                          "type": "array",
                          "items": {
                            "required": [
                              "propertyName",
                              "columnName"
                            ],
                            "properties": {
                              "propertyName": {
                                "type": "string",
                                "description": "The property name of the mapping entity."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "The column name of the import file."
                              },
                              "customFormatSpecifier": {
                                "type": "string",
                                "description": "Custom format specifier for input parsing."
                              },
                              "isEncrypted": {
                                "type": "boolean",
                                "description": "Indicates if the column is encrypted."
                              }
                            },
                            "description": "Connector mapping property structure."
                          },
                          "description": "Ingestion mapping information at property level."
                        },
                        "completeOperation": {
                          "description": "The operation after import is done.",
                          "properties": {
                            "completionOperationType": {
                              "type": "string",
                              "enum": [
                                "DoNothing",
                                "DeleteFile",
                                "MoveFile"
                              ],
                              "x-ms-enum": {
                                "name": "CompletionOperationTypes",
                                "modelAsString": false
                              },
                              "description": "The type of completion operation."
                            },
                            "destinationFolder": {
                              "type": "string",
                              "description": "The destination folder where files will be moved to once the import is done."
                            }
                          }
                        }
                      }
                    },
                    "nextRunTime": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The next run time based on customer's settings."
                    },
                    "runId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The RunId."
                    },
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Creating",
                        "Created",
                        "Failed",
                        "Ready",
                        "Running",
                        "Stopped",
                        "Expiring"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorMappingStates",
                        "modelAsString": false
                      },
                      "description": "State of connector mapping."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The connector mapping definition."
                }
              }
            }
          },
          "201": {
            "description": "Created. A new connector mapping is created.",
            "schema": {
              "description": "The connector mapping resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "entityType",
                    "entityTypeName",
                    "mappingProperties"
                  ],
                  "properties": {
                    "connectorName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The connector name."
                    },
                    "connectorType": {
                      "description": "Type of connector.",
                      "type": "string",
                      "enum": [
                        "None",
                        "CRM",
                        "AzureBlob",
                        "Salesforce",
                        "ExchangeOnline",
                        "Outbound"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorTypes",
                        "modelAsString": true
                      }
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The created time."
                    },
                    "lastModified": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last modified time."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Defines which entity type the file should map to."
                    },
                    "entityTypeName": {
                      "type": "string",
                      "description": "The mapping entity name."
                    },
                    "connectorMappingName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The connector mapping name"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name for the connector mapping."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the connector mapping."
                    },
                    "dataFormatId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The DataFormat ID."
                    },
                    "mappingProperties": {
                      "description": "The properties of the mapping.",
                      "required": [
                        "availability",
                        "completeOperation",
                        "errorManagement",
                        "format",
                        "structure"
                      ],
                      "properties": {
                        "folderPath": {
                          "type": "string",
                          "description": "The folder path for the mapping."
                        },
                        "fileFilter": {
                          "type": "string",
                          "description": "The file filter for the mapping."
                        },
                        "hasHeader": {
                          "type": "boolean",
                          "description": "If the file contains a header or not."
                        },
                        "errorManagement": {
                          "description": "The error management setting for the mapping.",
                          "required": [
                            "errorManagementType"
                          ],
                          "properties": {
                            "errorManagementType": {
                              "type": "string",
                              "enum": [
                                "RejectAndContinue",
                                "StopImport",
                                "RejectUntilLimit"
                              ],
                              "x-ms-enum": {
                                "name": "ErrorManagementTypes",
                                "modelAsString": false
                              },
                              "description": "The type of error management to use for the mapping."
                            },
                            "errorLimit": {
                              "type": "integer",
                              "description": "The error limit allowed while importing data."
                            }
                          }
                        },
                        "format": {
                          "description": "The format of mapping property.",
                          "required": [
                            "formatType"
                          ],
                          "properties": {
                            "formatType": {
                              "type": "string",
                              "enum": [
                                "TextFormat"
                              ],
                              "x-ms-enum": {
                                "name": "FormatTypes",
                                "modelAsString": false
                              },
                              "description": "The type mapping format."
                            },
                            "columnDelimiter": {
                              "type": "string",
                              "description": "The character that signifies a break between columns."
                            },
                            "acceptLanguage": {
                              "type": "string",
                              "description": "The oData language."
                            },
                            "quoteCharacter": {
                              "type": "string",
                              "description": "Quote character, used to indicate enquoted fields."
                            },
                            "quoteEscapeCharacter": {
                              "type": "string",
                              "description": "Escape character for quotes, can be the same as the quoteCharacter."
                            },
                            "arraySeparator": {
                              "type": "string",
                              "description": "Character separating array elements."
                            }
                          }
                        },
                        "availability": {
                          "description": "The availability of mapping property.",
                          "required": [
                            "interval"
                          ],
                          "properties": {
                            "frequency": {
                              "type": "string",
                              "enum": [
                                "Minute",
                                "Hour",
                                "Day",
                                "Week",
                                "Month"
                              ],
                              "x-ms-enum": {
                                "name": "FrequencyTypes",
                                "modelAsString": false
                              },
                              "description": "The frequency to update."
                            },
                            "interval": {
                              "type": "integer",
                              "description": "The interval of the given frequency to use."
                            }
                          }
                        },
                        "structure": {
                          "type": "array",
                          "items": {
                            "required": [
                              "propertyName",
                              "columnName"
                            ],
                            "properties": {
                              "propertyName": {
                                "type": "string",
                                "description": "The property name of the mapping entity."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "The column name of the import file."
                              },
                              "customFormatSpecifier": {
                                "type": "string",
                                "description": "Custom format specifier for input parsing."
                              },
                              "isEncrypted": {
                                "type": "boolean",
                                "description": "Indicates if the column is encrypted."
                              }
                            },
                            "description": "Connector mapping property structure."
                          },
                          "description": "Ingestion mapping information at property level."
                        },
                        "completeOperation": {
                          "description": "The operation after import is done.",
                          "properties": {
                            "completionOperationType": {
                              "type": "string",
                              "enum": [
                                "DoNothing",
                                "DeleteFile",
                                "MoveFile"
                              ],
                              "x-ms-enum": {
                                "name": "CompletionOperationTypes",
                                "modelAsString": false
                              },
                              "description": "The type of completion operation."
                            },
                            "destinationFolder": {
                              "type": "string",
                              "description": "The destination folder where files will be moved to once the import is done."
                            }
                          }
                        }
                      }
                    },
                    "nextRunTime": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The next run time based on customer's settings."
                    },
                    "runId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The RunId."
                    },
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Creating",
                        "Created",
                        "Failed",
                        "Ready",
                        "Running",
                        "Stopped",
                        "Expiring"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorMappingStates",
                        "modelAsString": false
                      },
                      "description": "State of connector mapping."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The connector mapping definition."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ConnectorMappings"
        ],
        "operationId": "ConnectorMappings_Get",
        "description": "Gets a connector mapping in the connector.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector."
          },
          {
            "name": "mappingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector mapping."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the connector mapping.",
            "schema": {
              "description": "The connector mapping resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "entityType",
                    "entityTypeName",
                    "mappingProperties"
                  ],
                  "properties": {
                    "connectorName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The connector name."
                    },
                    "connectorType": {
                      "description": "Type of connector.",
                      "type": "string",
                      "enum": [
                        "None",
                        "CRM",
                        "AzureBlob",
                        "Salesforce",
                        "ExchangeOnline",
                        "Outbound"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorTypes",
                        "modelAsString": true
                      }
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The created time."
                    },
                    "lastModified": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The last modified time."
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "Defines which entity type the file should map to."
                    },
                    "entityTypeName": {
                      "type": "string",
                      "description": "The mapping entity name."
                    },
                    "connectorMappingName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The connector mapping name"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name for the connector mapping."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the connector mapping."
                    },
                    "dataFormatId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The DataFormat ID."
                    },
                    "mappingProperties": {
                      "description": "The properties of the mapping.",
                      "required": [
                        "availability",
                        "completeOperation",
                        "errorManagement",
                        "format",
                        "structure"
                      ],
                      "properties": {
                        "folderPath": {
                          "type": "string",
                          "description": "The folder path for the mapping."
                        },
                        "fileFilter": {
                          "type": "string",
                          "description": "The file filter for the mapping."
                        },
                        "hasHeader": {
                          "type": "boolean",
                          "description": "If the file contains a header or not."
                        },
                        "errorManagement": {
                          "description": "The error management setting for the mapping.",
                          "required": [
                            "errorManagementType"
                          ],
                          "properties": {
                            "errorManagementType": {
                              "type": "string",
                              "enum": [
                                "RejectAndContinue",
                                "StopImport",
                                "RejectUntilLimit"
                              ],
                              "x-ms-enum": {
                                "name": "ErrorManagementTypes",
                                "modelAsString": false
                              },
                              "description": "The type of error management to use for the mapping."
                            },
                            "errorLimit": {
                              "type": "integer",
                              "description": "The error limit allowed while importing data."
                            }
                          }
                        },
                        "format": {
                          "description": "The format of mapping property.",
                          "required": [
                            "formatType"
                          ],
                          "properties": {
                            "formatType": {
                              "type": "string",
                              "enum": [
                                "TextFormat"
                              ],
                              "x-ms-enum": {
                                "name": "FormatTypes",
                                "modelAsString": false
                              },
                              "description": "The type mapping format."
                            },
                            "columnDelimiter": {
                              "type": "string",
                              "description": "The character that signifies a break between columns."
                            },
                            "acceptLanguage": {
                              "type": "string",
                              "description": "The oData language."
                            },
                            "quoteCharacter": {
                              "type": "string",
                              "description": "Quote character, used to indicate enquoted fields."
                            },
                            "quoteEscapeCharacter": {
                              "type": "string",
                              "description": "Escape character for quotes, can be the same as the quoteCharacter."
                            },
                            "arraySeparator": {
                              "type": "string",
                              "description": "Character separating array elements."
                            }
                          }
                        },
                        "availability": {
                          "description": "The availability of mapping property.",
                          "required": [
                            "interval"
                          ],
                          "properties": {
                            "frequency": {
                              "type": "string",
                              "enum": [
                                "Minute",
                                "Hour",
                                "Day",
                                "Week",
                                "Month"
                              ],
                              "x-ms-enum": {
                                "name": "FrequencyTypes",
                                "modelAsString": false
                              },
                              "description": "The frequency to update."
                            },
                            "interval": {
                              "type": "integer",
                              "description": "The interval of the given frequency to use."
                            }
                          }
                        },
                        "structure": {
                          "type": "array",
                          "items": {
                            "required": [
                              "propertyName",
                              "columnName"
                            ],
                            "properties": {
                              "propertyName": {
                                "type": "string",
                                "description": "The property name of the mapping entity."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "The column name of the import file."
                              },
                              "customFormatSpecifier": {
                                "type": "string",
                                "description": "Custom format specifier for input parsing."
                              },
                              "isEncrypted": {
                                "type": "boolean",
                                "description": "Indicates if the column is encrypted."
                              }
                            },
                            "description": "Connector mapping property structure."
                          },
                          "description": "Ingestion mapping information at property level."
                        },
                        "completeOperation": {
                          "description": "The operation after import is done.",
                          "properties": {
                            "completionOperationType": {
                              "type": "string",
                              "enum": [
                                "DoNothing",
                                "DeleteFile",
                                "MoveFile"
                              ],
                              "x-ms-enum": {
                                "name": "CompletionOperationTypes",
                                "modelAsString": false
                              },
                              "description": "The type of completion operation."
                            },
                            "destinationFolder": {
                              "type": "string",
                              "description": "The destination folder where files will be moved to once the import is done."
                            }
                          }
                        }
                      }
                    },
                    "nextRunTime": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The next run time based on customer's settings."
                    },
                    "runId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The RunId."
                    },
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Creating",
                        "Created",
                        "Failed",
                        "Ready",
                        "Running",
                        "Stopped",
                        "Expiring"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorMappingStates",
                        "modelAsString": false
                      },
                      "description": "State of connector mapping."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    }
                  },
                  "description": "The connector mapping definition."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectorMappings"
        ],
        "operationId": "ConnectorMappings_Delete",
        "description": "Deletes a connector mapping in the connector.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector."
          },
          {
            "name": "mappingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector mapping."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The connector mapping is deleted."
          },
          "204": {
            "description": "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings": {
      "get": {
        "tags": [
          "ConnectorMappings"
        ],
        "operationId": "ConnectorMappings_ListByConnector",
        "description": "Gets all the connector mappings in the specified connector.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connector."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the connector mappings in the connector.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The connector mapping resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "entityType",
                          "entityTypeName",
                          "mappingProperties"
                        ],
                        "properties": {
                          "connectorName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connector name."
                          },
                          "connectorType": {
                            "description": "Type of connector.",
                            "type": "string",
                            "enum": [
                              "None",
                              "CRM",
                              "AzureBlob",
                              "Salesforce",
                              "ExchangeOnline",
                              "Outbound"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectorTypes",
                              "modelAsString": true
                            }
                          },
                          "created": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The created time."
                          },
                          "lastModified": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The last modified time."
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "None",
                              "Profile",
                              "Interaction",
                              "Relationship"
                            ],
                            "x-ms-enum": {
                              "name": "EntityTypes",
                              "modelAsString": false
                            },
                            "description": "Defines which entity type the file should map to."
                          },
                          "entityTypeName": {
                            "type": "string",
                            "description": "The mapping entity name."
                          },
                          "connectorMappingName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connector mapping name"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name for the connector mapping."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the connector mapping."
                          },
                          "dataFormatId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The DataFormat ID."
                          },
                          "mappingProperties": {
                            "description": "The properties of the mapping.",
                            "required": [
                              "availability",
                              "completeOperation",
                              "errorManagement",
                              "format",
                              "structure"
                            ],
                            "properties": {
                              "folderPath": {
                                "type": "string",
                                "description": "The folder path for the mapping."
                              },
                              "fileFilter": {
                                "type": "string",
                                "description": "The file filter for the mapping."
                              },
                              "hasHeader": {
                                "type": "boolean",
                                "description": "If the file contains a header or not."
                              },
                              "errorManagement": {
                                "description": "The error management setting for the mapping.",
                                "required": [
                                  "errorManagementType"
                                ],
                                "properties": {
                                  "errorManagementType": {
                                    "type": "string",
                                    "enum": [
                                      "RejectAndContinue",
                                      "StopImport",
                                      "RejectUntilLimit"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ErrorManagementTypes",
                                      "modelAsString": false
                                    },
                                    "description": "The type of error management to use for the mapping."
                                  },
                                  "errorLimit": {
                                    "type": "integer",
                                    "description": "The error limit allowed while importing data."
                                  }
                                }
                              },
                              "format": {
                                "description": "The format of mapping property.",
                                "required": [
                                  "formatType"
                                ],
                                "properties": {
                                  "formatType": {
                                    "type": "string",
                                    "enum": [
                                      "TextFormat"
                                    ],
                                    "x-ms-enum": {
                                      "name": "FormatTypes",
                                      "modelAsString": false
                                    },
                                    "description": "The type mapping format."
                                  },
                                  "columnDelimiter": {
                                    "type": "string",
                                    "description": "The character that signifies a break between columns."
                                  },
                                  "acceptLanguage": {
                                    "type": "string",
                                    "description": "The oData language."
                                  },
                                  "quoteCharacter": {
                                    "type": "string",
                                    "description": "Quote character, used to indicate enquoted fields."
                                  },
                                  "quoteEscapeCharacter": {
                                    "type": "string",
                                    "description": "Escape character for quotes, can be the same as the quoteCharacter."
                                  },
                                  "arraySeparator": {
                                    "type": "string",
                                    "description": "Character separating array elements."
                                  }
                                }
                              },
                              "availability": {
                                "description": "The availability of mapping property.",
                                "required": [
                                  "interval"
                                ],
                                "properties": {
                                  "frequency": {
                                    "type": "string",
                                    "enum": [
                                      "Minute",
                                      "Hour",
                                      "Day",
                                      "Week",
                                      "Month"
                                    ],
                                    "x-ms-enum": {
                                      "name": "FrequencyTypes",
                                      "modelAsString": false
                                    },
                                    "description": "The frequency to update."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "The interval of the given frequency to use."
                                  }
                                }
                              },
                              "structure": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "propertyName",
                                    "columnName"
                                  ],
                                  "properties": {
                                    "propertyName": {
                                      "type": "string",
                                      "description": "The property name of the mapping entity."
                                    },
                                    "columnName": {
                                      "type": "string",
                                      "description": "The column name of the import file."
                                    },
                                    "customFormatSpecifier": {
                                      "type": "string",
                                      "description": "Custom format specifier for input parsing."
                                    },
                                    "isEncrypted": {
                                      "type": "boolean",
                                      "description": "Indicates if the column is encrypted."
                                    }
                                  },
                                  "description": "Connector mapping property structure."
                                },
                                "description": "Ingestion mapping information at property level."
                              },
                              "completeOperation": {
                                "description": "The operation after import is done.",
                                "properties": {
                                  "completionOperationType": {
                                    "type": "string",
                                    "enum": [
                                      "DoNothing",
                                      "DeleteFile",
                                      "MoveFile"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CompletionOperationTypes",
                                      "modelAsString": false
                                    },
                                    "description": "The type of completion operation."
                                  },
                                  "destinationFolder": {
                                    "type": "string",
                                    "description": "The destination folder where files will be moved to once the import is done."
                                  }
                                }
                              }
                            }
                          },
                          "nextRunTime": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The next run time based on customer's settings."
                          },
                          "runId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The RunId."
                          },
                          "state": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Creating",
                              "Created",
                              "Failed",
                              "Ready",
                              "Running",
                              "Stopped",
                              "Expiring"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectorMappingStates",
                              "modelAsString": false
                            },
                            "description": "State of connector mapping."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          }
                        },
                        "description": "The connector mapping definition."
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list connector mapping operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}": {
      "put": {
        "tags": [
          "Kpi"
        ],
        "operationId": "Kpi_CreateOrUpdate",
        "description": "Creates a KPI or updates an existing KPI in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "kpiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the KPI.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 512
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The KPI resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "required": [
                    "entityType",
                    "entityTypeName",
                    "calculationWindow",
                    "function",
                    "expression"
                  ],
                  "properties": {
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "The mapping entity type."
                    },
                    "entityTypeName": {
                      "type": "string",
                      "description": "The mapping entity name."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "kpiName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The KPI name."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the KPI."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized description for the KPI."
                    },
                    "calculationWindow": {
                      "type": "string",
                      "enum": [
                        "Lifetime",
                        "Hour",
                        "Day",
                        "Week",
                        "Month"
                      ],
                      "x-ms-enum": {
                        "name": "CalculationWindowTypes",
                        "modelAsString": false
                      },
                      "description": "The calculation window."
                    },
                    "calculationWindowFieldName": {
                      "type": "string",
                      "description": "Name of calculation window field."
                    },
                    "function": {
                      "type": "string",
                      "enum": [
                        "Sum",
                        "Avg",
                        "Min",
                        "Max",
                        "Last",
                        "Count",
                        "None",
                        "CountDistinct"
                      ],
                      "x-ms-enum": {
                        "name": "KpiFunctions",
                        "modelAsString": false
                      },
                      "description": "The computation function for the KPI."
                    },
                    "expression": {
                      "type": "string",
                      "description": "The computation expression for the KPI."
                    },
                    "unit": {
                      "type": "string",
                      "description": "The unit of measurement for the KPI."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The filter expression for the KPI."
                    },
                    "groupBy": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "the group by properties for the KPI."
                    },
                    "groupByMetadata": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "properties": {
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "The display name."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "The name of the field."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "The type of the field."
                          }
                        },
                        "description": "The KPI GroupBy field metadata."
                      },
                      "description": "The KPI GroupByMetadata."
                    },
                    "participantProfilesMetadata": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "required": [
                          "typeName"
                        ],
                        "properties": {
                          "typeName": {
                            "type": "string",
                            "description": "Name of the type."
                          }
                        },
                        "description": "The KPI participant profile metadata."
                      },
                      "description": "The participant profiles."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "thresHolds": {
                      "description": "The KPI thresholds.",
                      "properties": {
                        "lowerLimit": {
                          "type": "number",
                          "format": "decimal",
                          "description": "The lower threshold limit."
                        },
                        "upperLimit": {
                          "type": "number",
                          "format": "decimal",
                          "description": "The upper threshold limit."
                        },
                        "increasingKpi": {
                          "type": "boolean",
                          "description": "Whether or not the KPI is an increasing KPI."
                        }
                      },
                      "required": [
                        "lowerLimit",
                        "upperLimit",
                        "increasingKpi"
                      ]
                    },
                    "aliases": {
                      "type": "array",
                      "items": {
                        "required": [
                          "aliasName",
                          "expression"
                        ],
                        "properties": {
                          "aliasName": {
                            "type": "string",
                            "description": "KPI alias name."
                          },
                          "expression": {
                            "type": "string",
                            "description": "The expression."
                          }
                        },
                        "description": "The KPI alias."
                      },
                      "description": "The aliases."
                    },
                    "extracts": {
                      "type": "array",
                      "items": {
                        "required": [
                          "extractName",
                          "expression"
                        ],
                        "properties": {
                          "extractName": {
                            "type": "string",
                            "description": "KPI extract name."
                          },
                          "expression": {
                            "type": "string",
                            "description": "The expression."
                          }
                        },
                        "description": "The KPI extract."
                      },
                      "description": "The KPI extracts."
                    }
                  },
                  "description": "Defines the KPI Threshold limits.",
                  "x-ms-client-flatten": true
                }
              }
            },
            "description": "Parameters supplied to the create/update KPI operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the KPI.",
            "schema": {
              "description": "The KPI resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "required": [
                    "entityType",
                    "entityTypeName",
                    "calculationWindow",
                    "function",
                    "expression"
                  ],
                  "properties": {
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "The mapping entity type."
                    },
                    "entityTypeName": {
                      "type": "string",
                      "description": "The mapping entity name."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "kpiName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The KPI name."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the KPI."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized description for the KPI."
                    },
                    "calculationWindow": {
                      "type": "string",
                      "enum": [
                        "Lifetime",
                        "Hour",
                        "Day",
                        "Week",
                        "Month"
                      ],
                      "x-ms-enum": {
                        "name": "CalculationWindowTypes",
                        "modelAsString": false
                      },
                      "description": "The calculation window."
                    },
                    "calculationWindowFieldName": {
                      "type": "string",
                      "description": "Name of calculation window field."
                    },
                    "function": {
                      "type": "string",
                      "enum": [
                        "Sum",
                        "Avg",
                        "Min",
                        "Max",
                        "Last",
                        "Count",
                        "None",
                        "CountDistinct"
                      ],
                      "x-ms-enum": {
                        "name": "KpiFunctions",
                        "modelAsString": false
                      },
                      "description": "The computation function for the KPI."
                    },
                    "expression": {
                      "type": "string",
                      "description": "The computation expression for the KPI."
                    },
                    "unit": {
                      "type": "string",
                      "description": "The unit of measurement for the KPI."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The filter expression for the KPI."
                    },
                    "groupBy": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "the group by properties for the KPI."
                    },
                    "groupByMetadata": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "properties": {
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "The display name."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "The name of the field."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "The type of the field."
                          }
                        },
                        "description": "The KPI GroupBy field metadata."
                      },
                      "description": "The KPI GroupByMetadata."
                    },
                    "participantProfilesMetadata": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "required": [
                          "typeName"
                        ],
                        "properties": {
                          "typeName": {
                            "type": "string",
                            "description": "Name of the type."
                          }
                        },
                        "description": "The KPI participant profile metadata."
                      },
                      "description": "The participant profiles."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "thresHolds": {
                      "description": "The KPI thresholds.",
                      "properties": {
                        "lowerLimit": {
                          "type": "number",
                          "format": "decimal",
                          "description": "The lower threshold limit."
                        },
                        "upperLimit": {
                          "type": "number",
                          "format": "decimal",
                          "description": "The upper threshold limit."
                        },
                        "increasingKpi": {
                          "type": "boolean",
                          "description": "Whether or not the KPI is an increasing KPI."
                        }
                      },
                      "required": [
                        "lowerLimit",
                        "upperLimit",
                        "increasingKpi"
                      ]
                    },
                    "aliases": {
                      "type": "array",
                      "items": {
                        "required": [
                          "aliasName",
                          "expression"
                        ],
                        "properties": {
                          "aliasName": {
                            "type": "string",
                            "description": "KPI alias name."
                          },
                          "expression": {
                            "type": "string",
                            "description": "The expression."
                          }
                        },
                        "description": "The KPI alias."
                      },
                      "description": "The aliases."
                    },
                    "extracts": {
                      "type": "array",
                      "items": {
                        "required": [
                          "extractName",
                          "expression"
                        ],
                        "properties": {
                          "extractName": {
                            "type": "string",
                            "description": "KPI extract name."
                          },
                          "expression": {
                            "type": "string",
                            "description": "The expression."
                          }
                        },
                        "description": "The KPI extract."
                      },
                      "description": "The KPI extracts."
                    }
                  },
                  "description": "Defines the KPI Threshold limits.",
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create KPI operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "Kpi"
        ],
        "operationId": "Kpi_Get",
        "description": "Gets a KPI in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "kpiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the KPI."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the KPI.",
            "schema": {
              "description": "The KPI resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "required": [
                    "entityType",
                    "entityTypeName",
                    "calculationWindow",
                    "function",
                    "expression"
                  ],
                  "properties": {
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityTypes",
                        "modelAsString": false
                      },
                      "description": "The mapping entity type."
                    },
                    "entityTypeName": {
                      "type": "string",
                      "description": "The mapping entity name."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "kpiName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The KPI name."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the KPI."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized description for the KPI."
                    },
                    "calculationWindow": {
                      "type": "string",
                      "enum": [
                        "Lifetime",
                        "Hour",
                        "Day",
                        "Week",
                        "Month"
                      ],
                      "x-ms-enum": {
                        "name": "CalculationWindowTypes",
                        "modelAsString": false
                      },
                      "description": "The calculation window."
                    },
                    "calculationWindowFieldName": {
                      "type": "string",
                      "description": "Name of calculation window field."
                    },
                    "function": {
                      "type": "string",
                      "enum": [
                        "Sum",
                        "Avg",
                        "Min",
                        "Max",
                        "Last",
                        "Count",
                        "None",
                        "CountDistinct"
                      ],
                      "x-ms-enum": {
                        "name": "KpiFunctions",
                        "modelAsString": false
                      },
                      "description": "The computation function for the KPI."
                    },
                    "expression": {
                      "type": "string",
                      "description": "The computation expression for the KPI."
                    },
                    "unit": {
                      "type": "string",
                      "description": "The unit of measurement for the KPI."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The filter expression for the KPI."
                    },
                    "groupBy": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "the group by properties for the KPI."
                    },
                    "groupByMetadata": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "properties": {
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "The display name."
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "The name of the field."
                          },
                          "fieldType": {
                            "type": "string",
                            "description": "The type of the field."
                          }
                        },
                        "description": "The KPI GroupBy field metadata."
                      },
                      "description": "The KPI GroupByMetadata."
                    },
                    "participantProfilesMetadata": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "required": [
                          "typeName"
                        ],
                        "properties": {
                          "typeName": {
                            "type": "string",
                            "description": "Name of the type."
                          }
                        },
                        "description": "The KPI participant profile metadata."
                      },
                      "description": "The participant profiles."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "thresHolds": {
                      "description": "The KPI thresholds.",
                      "properties": {
                        "lowerLimit": {
                          "type": "number",
                          "format": "decimal",
                          "description": "The lower threshold limit."
                        },
                        "upperLimit": {
                          "type": "number",
                          "format": "decimal",
                          "description": "The upper threshold limit."
                        },
                        "increasingKpi": {
                          "type": "boolean",
                          "description": "Whether or not the KPI is an increasing KPI."
                        }
                      },
                      "required": [
                        "lowerLimit",
                        "upperLimit",
                        "increasingKpi"
                      ]
                    },
                    "aliases": {
                      "type": "array",
                      "items": {
                        "required": [
                          "aliasName",
                          "expression"
                        ],
                        "properties": {
                          "aliasName": {
                            "type": "string",
                            "description": "KPI alias name."
                          },
                          "expression": {
                            "type": "string",
                            "description": "The expression."
                          }
                        },
                        "description": "The KPI alias."
                      },
                      "description": "The aliases."
                    },
                    "extracts": {
                      "type": "array",
                      "items": {
                        "required": [
                          "extractName",
                          "expression"
                        ],
                        "properties": {
                          "extractName": {
                            "type": "string",
                            "description": "KPI extract name."
                          },
                          "expression": {
                            "type": "string",
                            "description": "The expression."
                          }
                        },
                        "description": "The KPI extract."
                      },
                      "description": "The KPI extracts."
                    }
                  },
                  "description": "Defines the KPI Threshold limits.",
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Kpi"
        ],
        "operationId": "Kpi_Delete",
        "description": "Deletes a KPI in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "kpiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the KPI."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The KPI is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess": {
      "post": {
        "tags": [
          "Kpi"
        ],
        "operationId": "Kpi_Reprocess",
        "description": "Reprocesses the Kpi values of the specified KPI.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "kpiName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the KPI."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Reprocessing Kpi Values operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi": {
      "get": {
        "tags": [
          "Kpi"
        ],
        "operationId": "Kpi_ListByHub",
        "description": "Gets all the KPIs in the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the KPIs in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The KPI resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "required": [
                          "entityType",
                          "entityTypeName",
                          "calculationWindow",
                          "function",
                          "expression"
                        ],
                        "properties": {
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "None",
                              "Profile",
                              "Interaction",
                              "Relationship"
                            ],
                            "x-ms-enum": {
                              "name": "EntityTypes",
                              "modelAsString": false
                            },
                            "description": "The mapping entity type."
                          },
                          "entityTypeName": {
                            "type": "string",
                            "description": "The mapping entity name."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          },
                          "kpiName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The KPI name."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name for the KPI."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized description for the KPI."
                          },
                          "calculationWindow": {
                            "type": "string",
                            "enum": [
                              "Lifetime",
                              "Hour",
                              "Day",
                              "Week",
                              "Month"
                            ],
                            "x-ms-enum": {
                              "name": "CalculationWindowTypes",
                              "modelAsString": false
                            },
                            "description": "The calculation window."
                          },
                          "calculationWindowFieldName": {
                            "type": "string",
                            "description": "Name of calculation window field."
                          },
                          "function": {
                            "type": "string",
                            "enum": [
                              "Sum",
                              "Avg",
                              "Min",
                              "Max",
                              "Last",
                              "Count",
                              "None",
                              "CountDistinct"
                            ],
                            "x-ms-enum": {
                              "name": "KpiFunctions",
                              "modelAsString": false
                            },
                            "description": "The computation function for the KPI."
                          },
                          "expression": {
                            "type": "string",
                            "description": "The computation expression for the KPI."
                          },
                          "unit": {
                            "type": "string",
                            "description": "The unit of measurement for the KPI."
                          },
                          "filter": {
                            "type": "string",
                            "description": "The filter expression for the KPI."
                          },
                          "groupBy": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "the group by properties for the KPI."
                          },
                          "groupByMetadata": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "properties": {
                                "displayName": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "The display name."
                                },
                                "fieldName": {
                                  "type": "string",
                                  "description": "The name of the field."
                                },
                                "fieldType": {
                                  "type": "string",
                                  "description": "The type of the field."
                                }
                              },
                              "description": "The KPI GroupBy field metadata."
                            },
                            "description": "The KPI GroupByMetadata."
                          },
                          "participantProfilesMetadata": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "required": [
                                "typeName"
                              ],
                              "properties": {
                                "typeName": {
                                  "type": "string",
                                  "description": "Name of the type."
                                }
                              },
                              "description": "The KPI participant profile metadata."
                            },
                            "description": "The participant profiles."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Provisioning state.",
                            "type": "string",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Expiring",
                              "Deleting",
                              "HumanIntervention",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStates",
                              "modelAsString": true
                            }
                          },
                          "thresHolds": {
                            "description": "The KPI thresholds.",
                            "properties": {
                              "lowerLimit": {
                                "type": "number",
                                "format": "decimal",
                                "description": "The lower threshold limit."
                              },
                              "upperLimit": {
                                "type": "number",
                                "format": "decimal",
                                "description": "The upper threshold limit."
                              },
                              "increasingKpi": {
                                "type": "boolean",
                                "description": "Whether or not the KPI is an increasing KPI."
                              }
                            },
                            "required": [
                              "lowerLimit",
                              "upperLimit",
                              "increasingKpi"
                            ]
                          },
                          "aliases": {
                            "type": "array",
                            "items": {
                              "required": [
                                "aliasName",
                                "expression"
                              ],
                              "properties": {
                                "aliasName": {
                                  "type": "string",
                                  "description": "KPI alias name."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "The expression."
                                }
                              },
                              "description": "The KPI alias."
                            },
                            "description": "The aliases."
                          },
                          "extracts": {
                            "type": "array",
                            "items": {
                              "required": [
                                "extractName",
                                "expression"
                              ],
                              "properties": {
                                "extractName": {
                                  "type": "string",
                                  "description": "KPI extract name."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "The expression."
                                }
                              },
                              "description": "The KPI extract."
                            },
                            "description": "The KPI extracts."
                          }
                        },
                        "description": "Defines the KPI Threshold limits.",
                        "x-ms-client-flatten": true
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list KPI operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/widgetTypes": {
      "get": {
        "tags": [
          "WidgetTypes"
        ],
        "operationId": "WidgetTypes_ListByHub",
        "description": "Gets all available widget types in the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the widget types in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The WidgetTypeResourceFormat",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "definition"
                        ],
                        "properties": {
                          "widgetTypeName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the widget type."
                          },
                          "definition": {
                            "type": "string",
                            "description": "Definition for widget type."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description for widget type."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name for the widget type."
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "The image URL."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          },
                          "widgetVersion": {
                            "type": "string",
                            "description": "The widget version."
                          },
                          "changed": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "Date time when widget type was last modified."
                          },
                          "created": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "Date time when widget type was created."
                          }
                        },
                        "description": "Definition of WidgetType."
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list widget type operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/widgetTypes/{widgetTypeName}": {
      "get": {
        "tags": [
          "WidgetTypes"
        ],
        "operationId": "WidgetTypes_Get",
        "description": "Gets a widget type in the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "widgetTypeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the widget type."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the widget type.",
            "schema": {
              "description": "The WidgetTypeResourceFormat",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "definition"
                  ],
                  "properties": {
                    "widgetTypeName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Name of the widget type."
                    },
                    "definition": {
                      "type": "string",
                      "description": "Definition for widget type."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for widget type."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the widget type."
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "The image URL."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "widgetVersion": {
                      "type": "string",
                      "description": "The widget version."
                    },
                    "changed": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Date time when widget type was last modified."
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Date time when widget type was created."
                    }
                  },
                  "description": "Definition of WidgetType."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views": {
      "get": {
        "tags": [
          "Views"
        ],
        "operationId": "Views_ListByHub",
        "description": "Gets all available views for given user in the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The user ID. Use * to retrieve hub level views."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the views in the hub for the given user.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The view resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "definition"
                        ],
                        "properties": {
                          "viewName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the view."
                          },
                          "userId": {
                            "type": "string",
                            "description": "the user ID."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "the hub name."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name for the view."
                          },
                          "definition": {
                            "type": "string",
                            "description": "View definition."
                          },
                          "changed": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "Date time when view was last modified."
                          },
                          "created": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "Date time when view was created."
                          }
                        },
                        "description": "The view in Customer 360 web application."
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list view operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}": {
      "put": {
        "tags": [
          "Views"
        ],
        "operationId": "Views_CreateOrUpdate",
        "description": "Creates a view or updates an existing view in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "viewName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the view.",
            "minLength": 1,
            "maxLength": 512
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The view resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "definition"
                  ],
                  "properties": {
                    "viewName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Name of the view."
                    },
                    "userId": {
                      "type": "string",
                      "description": "the user ID."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "the hub name."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the view."
                    },
                    "definition": {
                      "type": "string",
                      "description": "View definition."
                    },
                    "changed": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Date time when view was last modified."
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Date time when view was created."
                    }
                  },
                  "description": "The view in Customer 360 web application."
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate View operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the view.",
            "schema": {
              "description": "The view resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "definition"
                  ],
                  "properties": {
                    "viewName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Name of the view."
                    },
                    "userId": {
                      "type": "string",
                      "description": "the user ID."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "the hub name."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the view."
                    },
                    "definition": {
                      "type": "string",
                      "description": "View definition."
                    },
                    "changed": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Date time when view was last modified."
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Date time when view was created."
                    }
                  },
                  "description": "The view in Customer 360 web application."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Views"
        ],
        "operationId": "Views_Get",
        "description": "Gets a view in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "viewName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the view."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The user ID. Use * to retrieve hub level view."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the view.",
            "schema": {
              "description": "The view resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "definition"
                  ],
                  "properties": {
                    "viewName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Name of the view."
                    },
                    "userId": {
                      "type": "string",
                      "description": "the user ID."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "the hub name."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the view."
                    },
                    "definition": {
                      "type": "string",
                      "description": "View definition."
                    },
                    "changed": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Date time when view was last modified."
                    },
                    "created": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Date time when view was created."
                    }
                  },
                  "description": "The view in Customer 360 web application."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Views"
        ],
        "operationId": "Views_Delete",
        "description": "Deletes a view in the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "viewName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the view."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The user ID. Use * to retrieve hub level view."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The view is deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}": {
      "put": {
        "tags": [
          "Links"
        ],
        "operationId": "Links_CreateOrUpdate",
        "description": "Creates a link or updates an existing link in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "linkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the link.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 512
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The link resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "sourceEntityType",
                    "targetEntityType",
                    "sourceEntityTypeName",
                    "targetEntityTypeName",
                    "participantPropertyReferences"
                  ],
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "linkName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The link name."
                    },
                    "sourceEntityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityType",
                        "modelAsString": false
                      },
                      "description": "Type of source entity."
                    },
                    "targetEntityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityType",
                        "modelAsString": false
                      },
                      "description": "Type of target entity."
                    },
                    "sourceEntityTypeName": {
                      "type": "string",
                      "description": "Name of the source Entity Type."
                    },
                    "targetEntityTypeName": {
                      "type": "string",
                      "description": "Name of the target Entity Type."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Link."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Link."
                    },
                    "mappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "sourcePropertyName",
                          "targetPropertyName"
                        ],
                        "properties": {
                          "sourcePropertyName": {
                            "type": "string",
                            "description": " Property name on the source Entity Type."
                          },
                          "targetPropertyName": {
                            "type": "string",
                            "description": "Property name on the target Entity Type."
                          },
                          "linkType": {
                            "type": "string",
                            "enum": [
                              "UpdateAlways",
                              "CopyIfNull"
                            ],
                            "x-ms-enum": {
                              "name": "LinkTypes",
                              "modelAsString": false
                            },
                            "description": "Link type."
                          }
                        },
                        "description": "Metadata for a Link's property mapping."
                      },
                      "description": "The set of properties mappings between the source and target Types."
                    },
                    "participantPropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "sourcePropertyName",
                          "targetPropertyName"
                        ],
                        "properties": {
                          "sourcePropertyName": {
                            "type": "string",
                            "description": "The source property that maps to the target property."
                          },
                          "targetPropertyName": {
                            "type": "string",
                            "description": "The target property that maps to the source property."
                          }
                        },
                        "description": "The participant property reference."
                      },
                      "description": "The properties that represent the participating profile."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "referenceOnly": {
                      "type": "boolean",
                      "description": "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
                    },
                    "operationType": {
                      "type": "string",
                      "enum": [
                        "Upsert",
                        "Delete"
                      ],
                      "x-ms-enum": {
                        "name": "InstanceOperationType",
                        "modelAsString": false
                      },
                      "description": "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only."
                    }
                  },
                  "description": "The definition of Link."
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate Link operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the link.",
            "schema": {
              "description": "The link resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "sourceEntityType",
                    "targetEntityType",
                    "sourceEntityTypeName",
                    "targetEntityTypeName",
                    "participantPropertyReferences"
                  ],
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "linkName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The link name."
                    },
                    "sourceEntityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityType",
                        "modelAsString": false
                      },
                      "description": "Type of source entity."
                    },
                    "targetEntityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityType",
                        "modelAsString": false
                      },
                      "description": "Type of target entity."
                    },
                    "sourceEntityTypeName": {
                      "type": "string",
                      "description": "Name of the source Entity Type."
                    },
                    "targetEntityTypeName": {
                      "type": "string",
                      "description": "Name of the target Entity Type."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Link."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Link."
                    },
                    "mappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "sourcePropertyName",
                          "targetPropertyName"
                        ],
                        "properties": {
                          "sourcePropertyName": {
                            "type": "string",
                            "description": " Property name on the source Entity Type."
                          },
                          "targetPropertyName": {
                            "type": "string",
                            "description": "Property name on the target Entity Type."
                          },
                          "linkType": {
                            "type": "string",
                            "enum": [
                              "UpdateAlways",
                              "CopyIfNull"
                            ],
                            "x-ms-enum": {
                              "name": "LinkTypes",
                              "modelAsString": false
                            },
                            "description": "Link type."
                          }
                        },
                        "description": "Metadata for a Link's property mapping."
                      },
                      "description": "The set of properties mappings between the source and target Types."
                    },
                    "participantPropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "sourcePropertyName",
                          "targetPropertyName"
                        ],
                        "properties": {
                          "sourcePropertyName": {
                            "type": "string",
                            "description": "The source property that maps to the target property."
                          },
                          "targetPropertyName": {
                            "type": "string",
                            "description": "The target property that maps to the source property."
                          }
                        },
                        "description": "The participant property reference."
                      },
                      "description": "The properties that represent the participating profile."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "referenceOnly": {
                      "type": "boolean",
                      "description": "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
                    },
                    "operationType": {
                      "type": "string",
                      "enum": [
                        "Upsert",
                        "Delete"
                      ],
                      "x-ms-enum": {
                        "name": "InstanceOperationType",
                        "modelAsString": false
                      },
                      "description": "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only."
                    }
                  },
                  "description": "The definition of Link."
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create link operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "Links"
        ],
        "operationId": "Links_Get",
        "description": "Gets a link in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "linkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the link."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the link.",
            "schema": {
              "description": "The link resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "sourceEntityType",
                    "targetEntityType",
                    "sourceEntityTypeName",
                    "targetEntityTypeName",
                    "participantPropertyReferences"
                  ],
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "linkName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The link name."
                    },
                    "sourceEntityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityType",
                        "modelAsString": false
                      },
                      "description": "Type of source entity."
                    },
                    "targetEntityType": {
                      "type": "string",
                      "enum": [
                        "None",
                        "Profile",
                        "Interaction",
                        "Relationship"
                      ],
                      "x-ms-enum": {
                        "name": "EntityType",
                        "modelAsString": false
                      },
                      "description": "Type of target entity."
                    },
                    "sourceEntityTypeName": {
                      "type": "string",
                      "description": "Name of the source Entity Type."
                    },
                    "targetEntityTypeName": {
                      "type": "string",
                      "description": "Name of the target Entity Type."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display name for the Link."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized descriptions for the Link."
                    },
                    "mappings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "sourcePropertyName",
                          "targetPropertyName"
                        ],
                        "properties": {
                          "sourcePropertyName": {
                            "type": "string",
                            "description": " Property name on the source Entity Type."
                          },
                          "targetPropertyName": {
                            "type": "string",
                            "description": "Property name on the target Entity Type."
                          },
                          "linkType": {
                            "type": "string",
                            "enum": [
                              "UpdateAlways",
                              "CopyIfNull"
                            ],
                            "x-ms-enum": {
                              "name": "LinkTypes",
                              "modelAsString": false
                            },
                            "description": "Link type."
                          }
                        },
                        "description": "Metadata for a Link's property mapping."
                      },
                      "description": "The set of properties mappings between the source and target Types."
                    },
                    "participantPropertyReferences": {
                      "type": "array",
                      "items": {
                        "required": [
                          "sourcePropertyName",
                          "targetPropertyName"
                        ],
                        "properties": {
                          "sourcePropertyName": {
                            "type": "string",
                            "description": "The source property that maps to the target property."
                          },
                          "targetPropertyName": {
                            "type": "string",
                            "description": "The target property that maps to the source property."
                          }
                        },
                        "description": "The participant property reference."
                      },
                      "description": "The properties that represent the participating profile."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "referenceOnly": {
                      "type": "boolean",
                      "description": "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
                    },
                    "operationType": {
                      "type": "string",
                      "enum": [
                        "Upsert",
                        "Delete"
                      ],
                      "x-ms-enum": {
                        "name": "InstanceOperationType",
                        "modelAsString": false
                      },
                      "description": "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only."
                    }
                  },
                  "description": "The definition of Link."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Links"
        ],
        "operationId": "Links_Delete",
        "description": "Deletes a link in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "linkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the link."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The link is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links": {
      "get": {
        "tags": [
          "Links"
        ],
        "operationId": "Links_ListByHub",
        "description": "Gets all the links in the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the links in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The link resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "sourceEntityType",
                          "targetEntityType",
                          "sourceEntityTypeName",
                          "targetEntityTypeName",
                          "participantPropertyReferences"
                        ],
                        "properties": {
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          },
                          "linkName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The link name."
                          },
                          "sourceEntityType": {
                            "type": "string",
                            "enum": [
                              "None",
                              "Profile",
                              "Interaction",
                              "Relationship"
                            ],
                            "x-ms-enum": {
                              "name": "EntityType",
                              "modelAsString": false
                            },
                            "description": "Type of source entity."
                          },
                          "targetEntityType": {
                            "type": "string",
                            "enum": [
                              "None",
                              "Profile",
                              "Interaction",
                              "Relationship"
                            ],
                            "x-ms-enum": {
                              "name": "EntityType",
                              "modelAsString": false
                            },
                            "description": "Type of target entity."
                          },
                          "sourceEntityTypeName": {
                            "type": "string",
                            "description": "Name of the source Entity Type."
                          },
                          "targetEntityTypeName": {
                            "type": "string",
                            "description": "Name of the target Entity Type."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display name for the Link."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized descriptions for the Link."
                          },
                          "mappings": {
                            "type": "array",
                            "items": {
                              "required": [
                                "sourcePropertyName",
                                "targetPropertyName"
                              ],
                              "properties": {
                                "sourcePropertyName": {
                                  "type": "string",
                                  "description": " Property name on the source Entity Type."
                                },
                                "targetPropertyName": {
                                  "type": "string",
                                  "description": "Property name on the target Entity Type."
                                },
                                "linkType": {
                                  "type": "string",
                                  "enum": [
                                    "UpdateAlways",
                                    "CopyIfNull"
                                  ],
                                  "x-ms-enum": {
                                    "name": "LinkTypes",
                                    "modelAsString": false
                                  },
                                  "description": "Link type."
                                }
                              },
                              "description": "Metadata for a Link's property mapping."
                            },
                            "description": "The set of properties mappings between the source and target Types."
                          },
                          "participantPropertyReferences": {
                            "type": "array",
                            "items": {
                              "required": [
                                "sourcePropertyName",
                                "targetPropertyName"
                              ],
                              "properties": {
                                "sourcePropertyName": {
                                  "type": "string",
                                  "description": "The source property that maps to the target property."
                                },
                                "targetPropertyName": {
                                  "type": "string",
                                  "description": "The target property that maps to the source property."
                                }
                              },
                              "description": "The participant property reference."
                            },
                            "description": "The properties that represent the participating profile."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Provisioning state.",
                            "type": "string",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Expiring",
                              "Deleting",
                              "HumanIntervention",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStates",
                              "modelAsString": true
                            }
                          },
                          "referenceOnly": {
                            "type": "boolean",
                            "description": "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
                          },
                          "operationType": {
                            "type": "string",
                            "enum": [
                              "Upsert",
                              "Delete"
                            ],
                            "x-ms-enum": {
                              "name": "InstanceOperationType",
                              "modelAsString": false
                            },
                            "description": "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only."
                          }
                        },
                        "description": "The definition of Link."
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list link operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_ListByHub",
        "description": "Gets all the roles for the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the roles in the hub.",
            "schema": {
              "description": "The response of list role assignment operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The role resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The Role definition.",
                        "properties": {
                          "roleName": {
                            "type": "string",
                            "description": "The role name."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the role."
                          }
                        }
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments": {
      "get": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_ListByHub",
        "description": "Gets all the role assignments for the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the role assignment in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The Role Assignment resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The Role Assignment definition.",
                        "required": [
                          "role",
                          "principals"
                        ],
                        "properties": {
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          },
                          "assignmentName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The name of the metadata object."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized display names for the metadata."
                          },
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Localized description for the metadata."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Provisioning state.",
                            "type": "string",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Expiring",
                              "Deleting",
                              "HumanIntervention",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStates",
                              "modelAsString": true
                            }
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "Admin",
                              "Reader",
                              "ManageAdmin",
                              "ManageReader",
                              "DataAdmin",
                              "DataReader"
                            ],
                            "x-ms-enum": {
                              "name": "RoleTypes",
                              "modelAsString": false
                            },
                            "description": "Type of roles."
                          },
                          "principals": {
                            "type": "array",
                            "items": {
                              "description": "The AssignmentPrincipal",
                              "required": [
                                "principalId",
                                "principalType"
                              ],
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "The principal id being assigned to."
                                },
                                "principalType": {
                                  "type": "string",
                                  "description": "The Type of the principal ID."
                                },
                                "principalMetadata": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Other metadata for the principal."
                                }
                              }
                            },
                            "description": "The principals being assigned to."
                          },
                          "profiles": {
                            "description": "Profiles set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "interactions": {
                            "description": "Interactions set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "links": {
                            "description": "Links set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "kpis": {
                            "description": "Kpis set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "sasPolicies": {
                            "description": "Sas Policies set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "connectors": {
                            "description": "Connectors set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "views": {
                            "description": "Views set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "relationshipLinks": {
                            "description": "The Role assignments set for the relationship links.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "relationships": {
                            "description": "The Role assignments set for the relationships.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "widgetTypes": {
                            "description": "Widget types set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "roleAssignments": {
                            "description": "The Role assignments set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "conflationPolicies": {
                            "description": "Widget types set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          },
                          "segments": {
                            "description": "The Role assignments set for the assignment.",
                            "properties": {
                              "elements": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements included in the set."
                              },
                              "exceptions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list role assignment operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}": {
      "put": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_CreateOrUpdate",
        "description": "Creates or updates a role assignment in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "assignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The assignment name",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$",
            "minLength": 1,
            "maxLength": 128
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The Role Assignment resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The Role Assignment definition.",
                  "required": [
                    "role",
                    "principals"
                  ],
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "assignmentName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The name of the metadata object."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the metadata."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized description for the metadata."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "Admin",
                        "Reader",
                        "ManageAdmin",
                        "ManageReader",
                        "DataAdmin",
                        "DataReader"
                      ],
                      "x-ms-enum": {
                        "name": "RoleTypes",
                        "modelAsString": false
                      },
                      "description": "Type of roles."
                    },
                    "principals": {
                      "type": "array",
                      "items": {
                        "description": "The AssignmentPrincipal",
                        "required": [
                          "principalId",
                          "principalType"
                        ],
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal id being assigned to."
                          },
                          "principalType": {
                            "type": "string",
                            "description": "The Type of the principal ID."
                          },
                          "principalMetadata": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Other metadata for the principal."
                          }
                        }
                      },
                      "description": "The principals being assigned to."
                    },
                    "profiles": {
                      "description": "Profiles set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "interactions": {
                      "description": "Interactions set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "links": {
                      "description": "Links set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "kpis": {
                      "description": "Kpis set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "sasPolicies": {
                      "description": "Sas Policies set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "connectors": {
                      "description": "Connectors set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "views": {
                      "description": "Views set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "relationshipLinks": {
                      "description": "The Role assignments set for the relationship links.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "relationships": {
                      "description": "The Role assignments set for the relationships.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "widgetTypes": {
                      "description": "Widget types set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "roleAssignments": {
                      "description": "The Role assignments set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "conflationPolicies": {
                      "description": "Widget types set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "segments": {
                      "description": "The Role assignments set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to the CreateOrUpdate RoleAssignment operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the role assignment.",
            "schema": {
              "description": "The Role Assignment resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The Role Assignment definition.",
                  "required": [
                    "role",
                    "principals"
                  ],
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "assignmentName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The name of the metadata object."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the metadata."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized description for the metadata."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "Admin",
                        "Reader",
                        "ManageAdmin",
                        "ManageReader",
                        "DataAdmin",
                        "DataReader"
                      ],
                      "x-ms-enum": {
                        "name": "RoleTypes",
                        "modelAsString": false
                      },
                      "description": "Type of roles."
                    },
                    "principals": {
                      "type": "array",
                      "items": {
                        "description": "The AssignmentPrincipal",
                        "required": [
                          "principalId",
                          "principalType"
                        ],
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal id being assigned to."
                          },
                          "principalType": {
                            "type": "string",
                            "description": "The Type of the principal ID."
                          },
                          "principalMetadata": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Other metadata for the principal."
                          }
                        }
                      },
                      "description": "The principals being assigned to."
                    },
                    "profiles": {
                      "description": "Profiles set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "interactions": {
                      "description": "Interactions set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "links": {
                      "description": "Links set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "kpis": {
                      "description": "Kpis set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "sasPolicies": {
                      "description": "Sas Policies set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "connectors": {
                      "description": "Connectors set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "views": {
                      "description": "Views set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "relationshipLinks": {
                      "description": "The Role assignments set for the relationship links.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "relationships": {
                      "description": "The Role assignments set for the relationships.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "widgetTypes": {
                      "description": "Widget types set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "roleAssignments": {
                      "description": "The Role assignments set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "conflationPolicies": {
                      "description": "Widget types set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "segments": {
                      "description": "The Role assignments set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create role assignment operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_Get",
        "description": "Gets the role assignment in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "assignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the role assignment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the role assignment.",
            "schema": {
              "description": "The Role Assignment resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The Role Assignment definition.",
                  "required": [
                    "role",
                    "principals"
                  ],
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "assignmentName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The name of the metadata object."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized display names for the metadata."
                    },
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized description for the metadata."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "Admin",
                        "Reader",
                        "ManageAdmin",
                        "ManageReader",
                        "DataAdmin",
                        "DataReader"
                      ],
                      "x-ms-enum": {
                        "name": "RoleTypes",
                        "modelAsString": false
                      },
                      "description": "Type of roles."
                    },
                    "principals": {
                      "type": "array",
                      "items": {
                        "description": "The AssignmentPrincipal",
                        "required": [
                          "principalId",
                          "principalType"
                        ],
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal id being assigned to."
                          },
                          "principalType": {
                            "type": "string",
                            "description": "The Type of the principal ID."
                          },
                          "principalMetadata": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Other metadata for the principal."
                          }
                        }
                      },
                      "description": "The principals being assigned to."
                    },
                    "profiles": {
                      "description": "Profiles set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "interactions": {
                      "description": "Interactions set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "links": {
                      "description": "Links set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "kpis": {
                      "description": "Kpis set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "sasPolicies": {
                      "description": "Sas Policies set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "connectors": {
                      "description": "Connectors set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "views": {
                      "description": "Views set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "relationshipLinks": {
                      "description": "The Role assignments set for the relationship links.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "relationships": {
                      "description": "The Role assignments set for the relationships.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "widgetTypes": {
                      "description": "Widget types set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "roleAssignments": {
                      "description": "The Role assignments set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "conflationPolicies": {
                      "description": "Widget types set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    },
                    "segments": {
                      "description": "The Role assignments set for the assignment.",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements included in the set."
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoleAssignments"
        ],
        "operationId": "RoleAssignments_Delete",
        "description": "Deletes the role assignment in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "assignmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the role assignment."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The role assignment is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          },
          "204": {
            "description": "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_GetUploadUrlForEntityType",
        "description": "Gets entity type (profile or interaction) image upload URL.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "entityType": {
                  "type": "string",
                  "description": "Type of entity. Can be Profile or Interaction."
                },
                "entityTypeName": {
                  "type": "string",
                  "description": "Name of the entity type."
                },
                "relativePath": {
                  "type": "string",
                  "description": "Relative path of the image."
                }
              },
              "description": "Input type for getting image upload url."
            },
            "description": "Parameters supplied to the GetUploadUrlForEntityType operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the image upload URL for entity type.",
            "schema": {
              "properties": {
                "imageExists": {
                  "type": "boolean",
                  "description": "Whether image exists already."
                },
                "contentUrl": {
                  "type": "string",
                  "description": "Content URL for the image blob."
                },
                "relativePath": {
                  "type": "string",
                  "description": "Relative path of the image."
                }
              },
              "description": "The image definition."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getDataImageUploadUrl": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_GetUploadUrlForData",
        "description": "Gets data image upload URL.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "entityType": {
                  "type": "string",
                  "description": "Type of entity. Can be Profile or Interaction."
                },
                "entityTypeName": {
                  "type": "string",
                  "description": "Name of the entity type."
                },
                "relativePath": {
                  "type": "string",
                  "description": "Relative path of the image."
                }
              },
              "description": "Input type for getting image upload url."
            },
            "description": "Parameters supplied to the GetUploadUrlForData operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the image upload URL for data.",
            "schema": {
              "properties": {
                "imageExists": {
                  "type": "boolean",
                  "description": "Whether image exists already."
                },
                "contentUrl": {
                  "type": "string",
                  "description": "Content URL for the image blob."
                },
                "relativePath": {
                  "type": "string",
                  "description": "Relative path of the image."
                }
              },
              "description": "The image definition."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}": {
      "put": {
        "tags": [
          "Predictions"
        ],
        "operationId": "Predictions_CreateOrUpdate",
        "description": "Creates a Prediction or updates an existing Prediction in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "predictionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Prediction.",
            "minLength": 1,
            "maxLength": 512
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The prediction resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "negativeOutcomeExpression",
                    "positiveOutcomeExpression",
                    "primaryProfileType",
                    "scopeExpression",
                    "autoAnalyze",
                    "mappings",
                    "scoreLabel"
                  ],
                  "description": "The prediction definition.",
                  "properties": {
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Description of the prediction."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Display name of the prediction."
                    },
                    "involvedInteractionTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Interaction types involved in the prediction."
                    },
                    "involvedKpiTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "KPI types involved in the prediction."
                    },
                    "involvedRelationships": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Relationships involved in the prediction."
                    },
                    "negativeOutcomeExpression": {
                      "type": "string",
                      "description": "Negative outcome expression."
                    },
                    "positiveOutcomeExpression": {
                      "type": "string",
                      "description": "Positive outcome expression."
                    },
                    "primaryProfileType": {
                      "type": "string",
                      "description": "Primary profile type."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "predictionName": {
                      "type": "string",
                      "description": "Name of the prediction."
                    },
                    "scopeExpression": {
                      "type": "string",
                      "description": "Scope expression."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "autoAnalyze": {
                      "type": "boolean",
                      "description": "Whether do auto analyze."
                    },
                    "mappings": {
                      "required": [
                        "score",
                        "grade",
                        "reason"
                      ],
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "string",
                          "description": "The score of the link mapping."
                        },
                        "grade": {
                          "type": "string",
                          "description": "The grade of the link mapping."
                        },
                        "reason": {
                          "type": "string",
                          "description": "The reason of the link mapping."
                        }
                      },
                      "description": "Definition of the link mapping of prediction."
                    },
                    "scoreLabel": {
                      "type": "string",
                      "description": "Score label."
                    },
                    "grades": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "gradeName": {
                            "type": "string",
                            "description": "Name of the grade."
                          },
                          "minScoreThreshold": {
                            "type": "integer",
                            "description": "Minimum score threshold."
                          },
                          "maxScoreThreshold": {
                            "type": "integer",
                            "description": "Maximum score threshold."
                          }
                        },
                        "description": "The definition of a prediction grade."
                      },
                      "description": "The prediction grades."
                    },
                    "systemGeneratedEntities": {
                      "readOnly": true,
                      "properties": {
                        "generatedInteractionTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Generated interaction types."
                        },
                        "generatedLinks": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Generated links."
                        },
                        "generatedKpis": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Generated KPIs."
                        }
                      },
                      "description": "System generated entities."
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to the create/update Prediction operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created the Prediction.",
            "schema": {
              "description": "The prediction resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "negativeOutcomeExpression",
                    "positiveOutcomeExpression",
                    "primaryProfileType",
                    "scopeExpression",
                    "autoAnalyze",
                    "mappings",
                    "scoreLabel"
                  ],
                  "description": "The prediction definition.",
                  "properties": {
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Description of the prediction."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Display name of the prediction."
                    },
                    "involvedInteractionTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Interaction types involved in the prediction."
                    },
                    "involvedKpiTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "KPI types involved in the prediction."
                    },
                    "involvedRelationships": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Relationships involved in the prediction."
                    },
                    "negativeOutcomeExpression": {
                      "type": "string",
                      "description": "Negative outcome expression."
                    },
                    "positiveOutcomeExpression": {
                      "type": "string",
                      "description": "Positive outcome expression."
                    },
                    "primaryProfileType": {
                      "type": "string",
                      "description": "Primary profile type."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "predictionName": {
                      "type": "string",
                      "description": "Name of the prediction."
                    },
                    "scopeExpression": {
                      "type": "string",
                      "description": "Scope expression."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "autoAnalyze": {
                      "type": "boolean",
                      "description": "Whether do auto analyze."
                    },
                    "mappings": {
                      "required": [
                        "score",
                        "grade",
                        "reason"
                      ],
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "string",
                          "description": "The score of the link mapping."
                        },
                        "grade": {
                          "type": "string",
                          "description": "The grade of the link mapping."
                        },
                        "reason": {
                          "type": "string",
                          "description": "The reason of the link mapping."
                        }
                      },
                      "description": "Definition of the link mapping of prediction."
                    },
                    "scoreLabel": {
                      "type": "string",
                      "description": "Score label."
                    },
                    "grades": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "gradeName": {
                            "type": "string",
                            "description": "Name of the grade."
                          },
                          "minScoreThreshold": {
                            "type": "integer",
                            "description": "Minimum score threshold."
                          },
                          "maxScoreThreshold": {
                            "type": "integer",
                            "description": "Maximum score threshold."
                          }
                        },
                        "description": "The definition of a prediction grade."
                      },
                      "description": "The prediction grades."
                    },
                    "systemGeneratedEntities": {
                      "readOnly": true,
                      "properties": {
                        "generatedInteractionTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Generated interaction types."
                        },
                        "generatedLinks": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Generated links."
                        },
                        "generatedKpis": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Generated KPIs."
                        }
                      },
                      "description": "System generated entities."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The create Prediction operation is accepted."
          }
        }
      },
      "get": {
        "tags": [
          "Predictions"
        ],
        "operationId": "Predictions_Get",
        "description": "Gets a Prediction in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "predictionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Prediction."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the Prediction.",
            "schema": {
              "description": "The prediction resource format.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource ID."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "required": [
                    "negativeOutcomeExpression",
                    "positiveOutcomeExpression",
                    "primaryProfileType",
                    "scopeExpression",
                    "autoAnalyze",
                    "mappings",
                    "scoreLabel"
                  ],
                  "description": "The prediction definition.",
                  "properties": {
                    "description": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Description of the prediction."
                    },
                    "displayName": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Display name of the prediction."
                    },
                    "involvedInteractionTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Interaction types involved in the prediction."
                    },
                    "involvedKpiTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "KPI types involved in the prediction."
                    },
                    "involvedRelationships": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Relationships involved in the prediction."
                    },
                    "negativeOutcomeExpression": {
                      "type": "string",
                      "description": "Negative outcome expression."
                    },
                    "positiveOutcomeExpression": {
                      "type": "string",
                      "description": "Positive outcome expression."
                    },
                    "primaryProfileType": {
                      "type": "string",
                      "description": "Primary profile type."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Provisioning state.",
                      "type": "string",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Expiring",
                        "Deleting",
                        "HumanIntervention",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStates",
                        "modelAsString": true
                      }
                    },
                    "predictionName": {
                      "type": "string",
                      "description": "Name of the prediction."
                    },
                    "scopeExpression": {
                      "type": "string",
                      "description": "Scope expression."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The hub name."
                    },
                    "autoAnalyze": {
                      "type": "boolean",
                      "description": "Whether do auto analyze."
                    },
                    "mappings": {
                      "required": [
                        "score",
                        "grade",
                        "reason"
                      ],
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "string",
                          "description": "The score of the link mapping."
                        },
                        "grade": {
                          "type": "string",
                          "description": "The grade of the link mapping."
                        },
                        "reason": {
                          "type": "string",
                          "description": "The reason of the link mapping."
                        }
                      },
                      "description": "Definition of the link mapping of prediction."
                    },
                    "scoreLabel": {
                      "type": "string",
                      "description": "Score label."
                    },
                    "grades": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "gradeName": {
                            "type": "string",
                            "description": "Name of the grade."
                          },
                          "minScoreThreshold": {
                            "type": "integer",
                            "description": "Minimum score threshold."
                          },
                          "maxScoreThreshold": {
                            "type": "integer",
                            "description": "Maximum score threshold."
                          }
                        },
                        "description": "The definition of a prediction grade."
                      },
                      "description": "The prediction grades."
                    },
                    "systemGeneratedEntities": {
                      "readOnly": true,
                      "properties": {
                        "generatedInteractionTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Generated interaction types."
                        },
                        "generatedLinks": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Generated links."
                        },
                        "generatedKpis": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Generated KPIs."
                        }
                      },
                      "description": "System generated entities."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Predictions"
        ],
        "operationId": "Predictions_Delete",
        "description": "Deletes a Prediction in the hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "predictionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Prediction."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The Prediction is deleted."
          },
          "202": {
            "description": "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getTrainingResults": {
      "post": {
        "tags": [
          "Predictions"
        ],
        "operationId": "Predictions_GetTrainingResults",
        "description": "Gets training results.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "predictionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Prediction."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the training results.",
            "schema": {
              "properties": {
                "tenantId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The hub name."
                },
                "scoreName": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Score name."
                },
                "predictionDistribution": {
                  "readOnly": true,
                  "description": "Prediction distribution.",
                  "properties": {
                    "totalPositives": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total positive in the distribution."
                    },
                    "totalNegatives": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total negatives in the distribution."
                    },
                    "distributions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scoreThreshold": {
                            "type": "integer",
                            "description": "Score threshold."
                          },
                          "positives": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of positives."
                          },
                          "negatives": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of negatives."
                          },
                          "positivesAboveThreshold": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of positives above threshold."
                          },
                          "negativesAboveThreshold": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of negatives above threshold."
                          }
                        },
                        "description": "The definition of a prediction distribution."
                      },
                      "description": "Distributions of the prediction."
                    }
                  }
                },
                "canonicalProfiles": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "canonicalProfileId": {
                        "type": "integer",
                        "description": "Canonical profile ID."
                      },
                      "properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "profileName": {
                              "type": "string",
                              "description": "Profile name."
                            },
                            "profilePropertyName": {
                              "type": "string",
                              "description": "Property name of profile."
                            },
                            "rank": {
                              "type": "integer",
                              "description": "The rank."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Numeric",
                                "Categorical",
                                "DerivedCategorical",
                                "DerivedNumeric"
                              ],
                              "x-ms-enum": {
                                "name": "CanonicalPropertyValueType",
                                "modelAsString": true
                              },
                              "description": "Type of canonical property value."
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of the canonical property."
                            }
                          },
                          "description": "The definition of a canonical profile property."
                        },
                        "description": "Properties of the canonical profile."
                      }
                    },
                    "description": "Definition of canonical profile."
                  },
                  "description": "Canonical profiles."
                },
                "primaryProfileInstanceCount": {
                  "readOnly": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "Instance count of the primary profile."
                }
              },
              "description": "The training results of the prediction."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getModelStatus": {
      "post": {
        "tags": [
          "Predictions"
        ],
        "operationId": "Predictions_GetModelStatus",
        "description": "Gets model status of the prediction.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "predictionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Prediction."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get the model status.",
            "schema": {
              "required": [
                "status"
              ],
              "description": "The prediction model status.",
              "properties": {
                "tenantId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The hub name."
                },
                "predictionName": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The prediction name."
                },
                "predictionGuidId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The prediction GUID ID."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "New",
                    "Provisioning",
                    "ProvisioningFailed",
                    "PendingDiscovering",
                    "Discovering",
                    "PendingFeaturing",
                    "Featuring",
                    "FeaturingFailed",
                    "PendingTraining",
                    "Training",
                    "TrainingFailed",
                    "Evaluating",
                    "EvaluatingFailed",
                    "PendingModelConfirmation",
                    "Active",
                    "Deleted",
                    "HumanIntervention",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "PredictionModelLifeCycle",
                    "modelAsString": true
                  },
                  "description": "Prediction model life cycle.  When prediction is in PendingModelConfirmation status, it is allowed to update the status to PendingFeaturing or Active through API."
                },
                "message": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The model status message."
                },
                "trainingSetCount": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Count of the training set."
                },
                "testSetCount": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Count of the test set."
                },
                "validationSetCount": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Count of the validation set."
                },
                "trainingAccuracy": {
                  "type": "integer",
                  "format": "decimal",
                  "readOnly": true,
                  "description": "The training accuracy."
                },
                "signalsUsed": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "The signals used."
                },
                "modelVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Version of the model."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/modelStatus": {
      "post": {
        "tags": [
          "Predictions"
        ],
        "operationId": "Predictions_ModelStatus",
        "description": "Creates or updates the model status of prediction.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "predictionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Prediction."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "status"
              ],
              "description": "The prediction model status.",
              "properties": {
                "tenantId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The hub name."
                },
                "predictionName": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The prediction name."
                },
                "predictionGuidId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The prediction GUID ID."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "New",
                    "Provisioning",
                    "ProvisioningFailed",
                    "PendingDiscovering",
                    "Discovering",
                    "PendingFeaturing",
                    "Featuring",
                    "FeaturingFailed",
                    "PendingTraining",
                    "Training",
                    "TrainingFailed",
                    "Evaluating",
                    "EvaluatingFailed",
                    "PendingModelConfirmation",
                    "Active",
                    "Deleted",
                    "HumanIntervention",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "PredictionModelLifeCycle",
                    "modelAsString": true
                  },
                  "description": "Prediction model life cycle.  When prediction is in PendingModelConfirmation status, it is allowed to update the status to PendingFeaturing or Active through API."
                },
                "message": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The model status message."
                },
                "trainingSetCount": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Count of the training set."
                },
                "testSetCount": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Count of the test set."
                },
                "validationSetCount": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Count of the validation set."
                },
                "trainingAccuracy": {
                  "type": "integer",
                  "format": "decimal",
                  "readOnly": true,
                  "description": "The training accuracy."
                },
                "signalsUsed": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "The signals used."
                },
                "modelVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Version of the model."
                }
              }
            },
            "description": "Parameters supplied to the create/update prediction model status operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully created or updated the prediction model status."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions": {
      "get": {
        "tags": [
          "Predictions"
        ],
        "operationId": "Predictions_ListByHub",
        "description": "Gets all the predictions in the specified hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hub."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully get all the predictions in the hub.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The prediction resource format.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource ID."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "required": [
                          "negativeOutcomeExpression",
                          "positiveOutcomeExpression",
                          "primaryProfileType",
                          "scopeExpression",
                          "autoAnalyze",
                          "mappings",
                          "scoreLabel"
                        ],
                        "description": "The prediction definition.",
                        "properties": {
                          "description": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Description of the prediction."
                          },
                          "displayName": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Display name of the prediction."
                          },
                          "involvedInteractionTypes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Interaction types involved in the prediction."
                          },
                          "involvedKpiTypes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "KPI types involved in the prediction."
                          },
                          "involvedRelationships": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Relationships involved in the prediction."
                          },
                          "negativeOutcomeExpression": {
                            "type": "string",
                            "description": "Negative outcome expression."
                          },
                          "positiveOutcomeExpression": {
                            "type": "string",
                            "description": "Positive outcome expression."
                          },
                          "primaryProfileType": {
                            "type": "string",
                            "description": "Primary profile type."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Provisioning state.",
                            "type": "string",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Expiring",
                              "Deleting",
                              "HumanIntervention",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStates",
                              "modelAsString": true
                            }
                          },
                          "predictionName": {
                            "type": "string",
                            "description": "Name of the prediction."
                          },
                          "scopeExpression": {
                            "type": "string",
                            "description": "Scope expression."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The hub name."
                          },
                          "autoAnalyze": {
                            "type": "boolean",
                            "description": "Whether do auto analyze."
                          },
                          "mappings": {
                            "required": [
                              "score",
                              "grade",
                              "reason"
                            ],
                            "type": "object",
                            "properties": {
                              "score": {
                                "type": "string",
                                "description": "The score of the link mapping."
                              },
                              "grade": {
                                "type": "string",
                                "description": "The grade of the link mapping."
                              },
                              "reason": {
                                "type": "string",
                                "description": "The reason of the link mapping."
                              }
                            },
                            "description": "Definition of the link mapping of prediction."
                          },
                          "scoreLabel": {
                            "type": "string",
                            "description": "Score label."
                          },
                          "grades": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "gradeName": {
                                  "type": "string",
                                  "description": "Name of the grade."
                                },
                                "minScoreThreshold": {
                                  "type": "integer",
                                  "description": "Minimum score threshold."
                                },
                                "maxScoreThreshold": {
                                  "type": "integer",
                                  "description": "Maximum score threshold."
                                }
                              },
                              "description": "The definition of a prediction grade."
                            },
                            "description": "The prediction grades."
                          },
                          "systemGeneratedEntities": {
                            "readOnly": true,
                            "properties": {
                              "generatedInteractionTypes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Generated interaction types."
                              },
                              "generatedLinks": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Generated links."
                              },
                              "generatedKpis": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Generated KPIs."
                              }
                            },
                            "description": "System generated entities."
                          }
                        }
                      }
                    }
                  },
                  "description": "Results of the list operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results."
                }
              },
              "description": "The response of list predictions operation."
            }
          }
        }
      }
    }
  },
  "definitions": {
    "HubBillingInfoFormat": {
      "properties": {
        "skuName": {
          "type": "string",
          "description": "The sku name."
        },
        "minUnits": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
        },
        "maxUnits": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
        }
      },
      "description": "Hub billing info."
    },
    "HubPropertiesFormat": {
      "properties": {
        "apiEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "API endpoint URL of the hub."
        },
        "webEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Web endpoint URL of the hub."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Provisioning state of the hub."
        },
        "tenantFeatures": {
          "type": "integer",
          "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
        },
        "hubBillingInfo": {
          "description": "Billing settings of the hub.",
          "properties": {
            "skuName": {
              "type": "string",
              "description": "The sku name."
            },
            "minUnits": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
            },
            "maxUnits": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
            }
          }
        }
      },
      "description": "Properties of hub."
    },
    "Hub": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "apiEndpoint": {
              "type": "string",
              "readOnly": true,
              "description": "API endpoint URL of the hub."
            },
            "webEndpoint": {
              "type": "string",
              "readOnly": true,
              "description": "Web endpoint URL of the hub."
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the hub."
            },
            "tenantFeatures": {
              "type": "integer",
              "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
            },
            "hubBillingInfo": {
              "description": "Billing settings of the hub.",
              "properties": {
                "skuName": {
                  "type": "string",
                  "description": "The sku name."
                },
                "minUnits": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 10,
                  "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                },
                "maxUnits": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 10,
                  "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                }
              }
            }
          },
          "description": "Properties of hub."
        }
      },
      "description": "Hub resource."
    },
    "HubListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "location": {
                "type": "string",
                "description": "Resource location."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "apiEndpoint": {
                    "type": "string",
                    "readOnly": true,
                    "description": "API endpoint URL of the hub."
                  },
                  "webEndpoint": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Web endpoint URL of the hub."
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Provisioning state of the hub."
                  },
                  "tenantFeatures": {
                    "type": "integer",
                    "description": "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
                  },
                  "hubBillingInfo": {
                    "description": "Billing settings of the hub.",
                    "properties": {
                      "skuName": {
                        "type": "string",
                        "description": "The sku name."
                      },
                      "minUnits": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "description": "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
                      },
                      "maxUnits": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "description": "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
                      }
                    }
                  }
                },
                "description": "Properties of hub."
              }
            },
            "description": "Hub resource."
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link for next set of results."
        }
      },
      "description": "Response of list hub operation."
    },
    "MetadataDefinitionBase": {
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "The attributes for the Type."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized descriptions for the property."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display names for the property."
        },
        "localizedAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": "Any custom localized attributes for the Type."
        },
        "smallImage": {
          "type": "string",
          "description": "Small Image associated with the Property or EntityType."
        },
        "mediumImage": {
          "type": "string",
          "description": "Medium Image associated with the Property or EntityType."
        },
        "largeImage": {
          "type": "string",
          "description": "Large Image associated with the Property or EntityType."
        }
      },
      "description": "The Metadata definition base."
    },
    "EntityTypeDefinition": {
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "The attributes for the Type."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized descriptions for the property."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display names for the property."
        },
        "localizedAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": "Any custom localized attributes for the Type."
        },
        "smallImage": {
          "type": "string",
          "description": "Small Image associated with the Property or EntityType."
        },
        "mediumImage": {
          "type": "string",
          "description": "Medium Image associated with the Property or EntityType."
        },
        "largeImage": {
          "type": "string",
          "description": "Large Image associated with the Property or EntityType."
        },
        "apiEntitySetName": {
          "type": "string",
          "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
        },
        "entityType": {
          "type": "string",
          "enum": [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ],
          "x-ms-enum": {
            "name": "EntityTypes",
            "modelAsString": false
          },
          "description": "Type of entity."
        },
        "fields": {
          "type": "array",
          "items": {
            "required": [
              "fieldName",
              "fieldType"
            ],
            "properties": {
              "arrayValueSeparator": {
                "type": "string",
                "description": "Array value separator for properties with isArray set."
              },
              "enumValidValues": {
                "type": "array",
                "items": {
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "The integer value of the enum member."
                    },
                    "localizedValueNames": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized names of the enum member."
                    }
                  },
                  "description": "Valid enum values in case of an enum property."
                },
                "description": "Describes valid values for an enum property."
              },
              "fieldName": {
                "type": "string",
                "description": "Name of the property."
              },
              "fieldType": {
                "type": "string",
                "description": "Type of the property."
              },
              "isArray": {
                "type": "boolean",
                "description": "Indicates if the property is actually an array of the fieldType above on the data api."
              },
              "isEnum": {
                "type": "boolean",
                "description": "Indicates if the property is an enum."
              },
              "isFlagEnum": {
                "type": "boolean",
                "description": "Indicates if the property is an flag enum."
              },
              "isImage": {
                "type": "boolean",
                "description": "Whether the property is an Image."
              },
              "isLocalizedString": {
                "type": "boolean",
                "description": "Whether the property is a localized string."
              },
              "isName": {
                "type": "boolean",
                "description": "Whether the property is a name or a part of name."
              },
              "isRequired": {
                "type": "boolean",
                "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
              },
              "propertyId": {
                "type": "string",
                "description": "The ID associated with the property."
              },
              "schemaItemPropLink": {
                "type": "string",
                "description": "URL encoded schema.org item prop link for the property."
              },
              "maxLength": {
                "type": "integer",
                "description": "Max length of string. Used only if type is string."
              },
              "isAvailableInGraph": {
                "type": "boolean",
                "description": "Whether property is available in graph or not."
              },
              "dataSourcePrecedenceRules": {
                "type": "array",
                "items": {
                  "properties": {
                    "dataSource": {
                      "x-ms-client-flatten": true,
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source name"
                        },
                        "dataSourceType": {
                          "type": "string",
                          "enum": [
                            "Connector",
                            "LinkInteraction",
                            "SystemDefault"
                          ],
                          "x-ms-enum": {
                            "name": "DataSourceType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source type."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "None",
                            "Active",
                            "Deleted"
                          ],
                          "x-ms-enum": {
                            "name": "Status",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source status."
                        },
                        "id": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The data source ID."
                        },
                        "dataSourceReferenceId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source reference id."
                        }
                      },
                      "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                    },
                    "precedence": {
                      "type": "integer",
                      "description": "the precedence value."
                    }
                  },
                  "description": "The data source precedence is a way to know the precedence of each data source."
                },
                "readOnly": true,
                "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
              }
            },
            "description": "Property definition."
          },
          "description": "The properties of the Profile."
        },
        "instancesCount": {
          "type": "integer",
          "description": "The instance count."
        },
        "lastChangedUtc": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The last changed time for the type definition."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Provisioning state.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Expiring",
            "Deleting",
            "HumanIntervention",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStates",
            "modelAsString": true
          }
        },
        "schemaItemTypeLink": {
          "type": "string",
          "description": "The schema org link. This helps ACI identify and suggest semantic models."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "timestampFieldName": {
          "type": "string",
          "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
        },
        "typeName": {
          "type": "string",
          "description": "The name of the entity."
        }
      },
      "description": "Describes an entity."
    },
    "ProfileEnumValidValuesFormat": {
      "properties": {
        "value": {
          "type": "integer",
          "description": "The integer value of the enum member."
        },
        "localizedValueNames": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized names of the enum member."
        }
      },
      "description": "Valid enum values in case of an enum property."
    },
    "PropertyDefinition": {
      "required": [
        "fieldName",
        "fieldType"
      ],
      "properties": {
        "arrayValueSeparator": {
          "type": "string",
          "description": "Array value separator for properties with isArray set."
        },
        "enumValidValues": {
          "type": "array",
          "items": {
            "properties": {
              "value": {
                "type": "integer",
                "description": "The integer value of the enum member."
              },
              "localizedValueNames": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Localized names of the enum member."
              }
            },
            "description": "Valid enum values in case of an enum property."
          },
          "description": "Describes valid values for an enum property."
        },
        "fieldName": {
          "type": "string",
          "description": "Name of the property."
        },
        "fieldType": {
          "type": "string",
          "description": "Type of the property."
        },
        "isArray": {
          "type": "boolean",
          "description": "Indicates if the property is actually an array of the fieldType above on the data api."
        },
        "isEnum": {
          "type": "boolean",
          "description": "Indicates if the property is an enum."
        },
        "isFlagEnum": {
          "type": "boolean",
          "description": "Indicates if the property is an flag enum."
        },
        "isImage": {
          "type": "boolean",
          "description": "Whether the property is an Image."
        },
        "isLocalizedString": {
          "type": "boolean",
          "description": "Whether the property is a localized string."
        },
        "isName": {
          "type": "boolean",
          "description": "Whether the property is a name or a part of name."
        },
        "isRequired": {
          "type": "boolean",
          "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
        },
        "propertyId": {
          "type": "string",
          "description": "The ID associated with the property."
        },
        "schemaItemPropLink": {
          "type": "string",
          "description": "URL encoded schema.org item prop link for the property."
        },
        "maxLength": {
          "type": "integer",
          "description": "Max length of string. Used only if type is string."
        },
        "isAvailableInGraph": {
          "type": "boolean",
          "description": "Whether property is available in graph or not."
        },
        "dataSourcePrecedenceRules": {
          "type": "array",
          "items": {
            "properties": {
              "dataSource": {
                "x-ms-client-flatten": true,
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The data source name"
                  },
                  "dataSourceType": {
                    "type": "string",
                    "enum": [
                      "Connector",
                      "LinkInteraction",
                      "SystemDefault"
                    ],
                    "x-ms-enum": {
                      "name": "DataSourceType",
                      "modelAsString": true
                    },
                    "readOnly": true,
                    "description": "The data source type."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Active",
                      "Deleted"
                    ],
                    "x-ms-enum": {
                      "name": "Status",
                      "modelAsString": true
                    },
                    "readOnly": true,
                    "description": "The data source status."
                  },
                  "id": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The data source ID."
                  },
                  "dataSourceReferenceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The data source reference id."
                  }
                },
                "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
              },
              "precedence": {
                "type": "integer",
                "description": "the precedence value."
              }
            },
            "description": "The data source precedence is a way to know the precedence of each data source."
          },
          "readOnly": true,
          "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
        }
      },
      "description": "Property definition."
    },
    "AuthorizationPolicy": {
      "required": [
        "permissions"
      ],
      "properties": {
        "policyName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the policy."
        },
        "permissions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "Read",
              "Write",
              "Manage"
            ],
            "x-ms-enum": {
              "name": "PermissionTypes",
              "modelAsString": false
            },
            "description": "Supported permission types."
          },
          "description": "The permissions associated with the policy."
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary key associated with the policy."
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary key associated with the policy."
        }
      },
      "description": "The authorization policy."
    },
    "SalesforceDiscoverSetting": {
      "required": [
        "salesforceConnectionStringSecretUrl"
      ],
      "properties": {
        "salesforceConnectionStringSecretUrl": {
          "type": "string",
          "description": "The salesforce connection string secret URL."
        }
      },
      "description": "Salesforce discover setting."
    },
    "SalesforceTable": {
      "required": [
        "tableName",
        "tableSchema",
        "tableCategory"
      ],
      "properties": {
        "isProfile": {
          "type": "string",
          "description": "Indicating whether this instance is profile."
        },
        "tableCategory": {
          "type": "string",
          "description": "The table category."
        },
        "tableName": {
          "type": "string",
          "description": "The name of the table."
        },
        "tableRemarks": {
          "type": "string",
          "description": "The table remarks."
        },
        "tableSchema": {
          "type": "string",
          "description": "The table schema."
        }
      },
      "description": "Salesforce table."
    },
    "SalesforceConnectorProperties": {
      "required": [
        "usersetting",
        "salesforcetables"
      ],
      "description": "The Salesforce connector properties.",
      "properties": {
        "usersetting": {
          "description": "The user settings.",
          "required": [
            "salesforceConnectionStringSecretUrl"
          ],
          "properties": {
            "salesforceConnectionStringSecretUrl": {
              "type": "string",
              "description": "The salesforce connection string secret URL."
            }
          }
        },
        "salesforcetables": {
          "type": "array",
          "items": {
            "required": [
              "tableName",
              "tableSchema",
              "tableCategory"
            ],
            "properties": {
              "isProfile": {
                "type": "string",
                "description": "Indicating whether this instance is profile."
              },
              "tableCategory": {
                "type": "string",
                "description": "The table category."
              },
              "tableName": {
                "type": "string",
                "description": "The name of the table."
              },
              "tableRemarks": {
                "type": "string",
                "description": "The table remarks."
              },
              "tableSchema": {
                "type": "string",
                "description": "The table schema."
              }
            },
            "description": "Salesforce table."
          },
          "description": "The Salesforce tables."
        }
      }
    },
    "AzureBlobConnectorProperties": {
      "required": [
        "connectionKeyVaultUrl"
      ],
      "description": "The Azure Blob connector properties.",
      "properties": {
        "connectionKeyVaultUrl": {
          "type": "string",
          "description": "The connection KeyVault URL."
        }
      }
    },
    "CrmConnectorProperties": {
      "required": [
        "organizationId",
        "organizationUrl",
        "entities"
      ],
      "description": "The CRM connector properties.",
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "The connection string."
        },
        "organizationId": {
          "type": "string",
          "description": "The organization ID."
        },
        "organizationUrl": {
          "type": "string",
          "description": "The organization URL."
        },
        "entities": {
          "type": "array",
          "items": {
            "required": [
              "logicalName"
            ],
            "description": "The CRM connector entities.",
            "properties": {
              "logicalName": {
                "type": "string",
                "description": "The logical name."
              },
              "displayName": {
                "type": "string",
                "description": "The display name."
              },
              "isProfile": {
                "type": "boolean",
                "description": "Indicating whether this is profile."
              }
            }
          },
          "description": "The entities like account, contact, opportunity."
        },
        "accessToken": {
          "type": "string",
          "description": "The access token."
        }
      }
    },
    "CrmConnectorEntities": {
      "required": [
        "logicalName"
      ],
      "description": "The CRM connector entities.",
      "properties": {
        "logicalName": {
          "type": "string",
          "description": "The logical name."
        },
        "displayName": {
          "type": "string",
          "description": "The display name."
        },
        "isProfile": {
          "type": "boolean",
          "description": "Indicating whether this is profile."
        }
      }
    },
    "Connector": {
      "required": [
        "connectorType",
        "connectorProperties"
      ],
      "properties": {
        "connectorId": {
          "type": "integer",
          "readOnly": true,
          "description": "ID of the connector."
        },
        "connectorName": {
          "type": "string",
          "description": "Name of the connector."
        },
        "connectorType": {
          "description": "Type of connector.",
          "type": "string",
          "enum": [
            "None",
            "CRM",
            "AzureBlob",
            "Salesforce",
            "ExchangeOnline",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "ConnectorTypes",
            "modelAsString": true
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the connector."
        },
        "description": {
          "type": "string",
          "description": "Description of the connector."
        },
        "connectorProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "description": "The connector properties."
        },
        "created": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The created time."
        },
        "lastModified": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The last modified time."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Creating",
            "Created",
            "Ready",
            "Expiring",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ConnectorStates",
            "modelAsString": false
          },
          "description": "State of connector."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "isInternal": {
          "type": "boolean",
          "description": "If this is an internal connector."
        }
      },
      "description": "Properties of connector."
    },
    "ConnectorMappingErrorManagement": {
      "required": [
        "errorManagementType"
      ],
      "properties": {
        "errorManagementType": {
          "type": "string",
          "enum": [
            "RejectAndContinue",
            "StopImport",
            "RejectUntilLimit"
          ],
          "x-ms-enum": {
            "name": "ErrorManagementTypes",
            "modelAsString": false
          },
          "description": "The type of error management to use for the mapping."
        },
        "errorLimit": {
          "type": "integer",
          "description": "The error limit allowed while importing data."
        }
      },
      "description": "The error management."
    },
    "ConnectorMappingFormat": {
      "required": [
        "formatType"
      ],
      "properties": {
        "formatType": {
          "type": "string",
          "enum": [
            "TextFormat"
          ],
          "x-ms-enum": {
            "name": "FormatTypes",
            "modelAsString": false
          },
          "description": "The type mapping format."
        },
        "columnDelimiter": {
          "type": "string",
          "description": "The character that signifies a break between columns."
        },
        "acceptLanguage": {
          "type": "string",
          "description": "The oData language."
        },
        "quoteCharacter": {
          "type": "string",
          "description": "Quote character, used to indicate enquoted fields."
        },
        "quoteEscapeCharacter": {
          "type": "string",
          "description": "Escape character for quotes, can be the same as the quoteCharacter."
        },
        "arraySeparator": {
          "type": "string",
          "description": "Character separating array elements."
        }
      },
      "description": "Connector mapping property format."
    },
    "ConnectorMappingAvailability": {
      "required": [
        "interval"
      ],
      "properties": {
        "frequency": {
          "type": "string",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "x-ms-enum": {
            "name": "FrequencyTypes",
            "modelAsString": false
          },
          "description": "The frequency to update."
        },
        "interval": {
          "type": "integer",
          "description": "The interval of the given frequency to use."
        }
      },
      "description": "Connector mapping property availability."
    },
    "ConnectorMappingStructure": {
      "required": [
        "propertyName",
        "columnName"
      ],
      "properties": {
        "propertyName": {
          "type": "string",
          "description": "The property name of the mapping entity."
        },
        "columnName": {
          "type": "string",
          "description": "The column name of the import file."
        },
        "customFormatSpecifier": {
          "type": "string",
          "description": "Custom format specifier for input parsing."
        },
        "isEncrypted": {
          "type": "boolean",
          "description": "Indicates if the column is encrypted."
        }
      },
      "description": "Connector mapping property structure."
    },
    "ConnectorMappingCompleteOperation": {
      "properties": {
        "completionOperationType": {
          "type": "string",
          "enum": [
            "DoNothing",
            "DeleteFile",
            "MoveFile"
          ],
          "x-ms-enum": {
            "name": "CompletionOperationTypes",
            "modelAsString": false
          },
          "description": "The type of completion operation."
        },
        "destinationFolder": {
          "type": "string",
          "description": "The destination folder where files will be moved to once the import is done."
        }
      },
      "description": "The complete operation."
    },
    "ConnectorMappingProperties": {
      "required": [
        "availability",
        "completeOperation",
        "errorManagement",
        "format",
        "structure"
      ],
      "properties": {
        "folderPath": {
          "type": "string",
          "description": "The folder path for the mapping."
        },
        "fileFilter": {
          "type": "string",
          "description": "The file filter for the mapping."
        },
        "hasHeader": {
          "type": "boolean",
          "description": "If the file contains a header or not."
        },
        "errorManagement": {
          "description": "The error management setting for the mapping.",
          "required": [
            "errorManagementType"
          ],
          "properties": {
            "errorManagementType": {
              "type": "string",
              "enum": [
                "RejectAndContinue",
                "StopImport",
                "RejectUntilLimit"
              ],
              "x-ms-enum": {
                "name": "ErrorManagementTypes",
                "modelAsString": false
              },
              "description": "The type of error management to use for the mapping."
            },
            "errorLimit": {
              "type": "integer",
              "description": "The error limit allowed while importing data."
            }
          }
        },
        "format": {
          "description": "The format of mapping property.",
          "required": [
            "formatType"
          ],
          "properties": {
            "formatType": {
              "type": "string",
              "enum": [
                "TextFormat"
              ],
              "x-ms-enum": {
                "name": "FormatTypes",
                "modelAsString": false
              },
              "description": "The type mapping format."
            },
            "columnDelimiter": {
              "type": "string",
              "description": "The character that signifies a break between columns."
            },
            "acceptLanguage": {
              "type": "string",
              "description": "The oData language."
            },
            "quoteCharacter": {
              "type": "string",
              "description": "Quote character, used to indicate enquoted fields."
            },
            "quoteEscapeCharacter": {
              "type": "string",
              "description": "Escape character for quotes, can be the same as the quoteCharacter."
            },
            "arraySeparator": {
              "type": "string",
              "description": "Character separating array elements."
            }
          }
        },
        "availability": {
          "description": "The availability of mapping property.",
          "required": [
            "interval"
          ],
          "properties": {
            "frequency": {
              "type": "string",
              "enum": [
                "Minute",
                "Hour",
                "Day",
                "Week",
                "Month"
              ],
              "x-ms-enum": {
                "name": "FrequencyTypes",
                "modelAsString": false
              },
              "description": "The frequency to update."
            },
            "interval": {
              "type": "integer",
              "description": "The interval of the given frequency to use."
            }
          }
        },
        "structure": {
          "type": "array",
          "items": {
            "required": [
              "propertyName",
              "columnName"
            ],
            "properties": {
              "propertyName": {
                "type": "string",
                "description": "The property name of the mapping entity."
              },
              "columnName": {
                "type": "string",
                "description": "The column name of the import file."
              },
              "customFormatSpecifier": {
                "type": "string",
                "description": "Custom format specifier for input parsing."
              },
              "isEncrypted": {
                "type": "boolean",
                "description": "Indicates if the column is encrypted."
              }
            },
            "description": "Connector mapping property structure."
          },
          "description": "Ingestion mapping information at property level."
        },
        "completeOperation": {
          "description": "The operation after import is done.",
          "properties": {
            "completionOperationType": {
              "type": "string",
              "enum": [
                "DoNothing",
                "DeleteFile",
                "MoveFile"
              ],
              "x-ms-enum": {
                "name": "CompletionOperationTypes",
                "modelAsString": false
              },
              "description": "The type of completion operation."
            },
            "destinationFolder": {
              "type": "string",
              "description": "The destination folder where files will be moved to once the import is done."
            }
          }
        }
      },
      "description": "The connector mapping properties."
    },
    "ConnectorMapping": {
      "required": [
        "entityType",
        "entityTypeName",
        "mappingProperties"
      ],
      "properties": {
        "connectorName": {
          "type": "string",
          "readOnly": true,
          "description": "The connector name."
        },
        "connectorType": {
          "description": "Type of connector.",
          "type": "string",
          "enum": [
            "None",
            "CRM",
            "AzureBlob",
            "Salesforce",
            "ExchangeOnline",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "ConnectorTypes",
            "modelAsString": true
          }
        },
        "created": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The created time."
        },
        "lastModified": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The last modified time."
        },
        "entityType": {
          "type": "string",
          "enum": [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ],
          "x-ms-enum": {
            "name": "EntityTypes",
            "modelAsString": false
          },
          "description": "Defines which entity type the file should map to."
        },
        "entityTypeName": {
          "type": "string",
          "description": "The mapping entity name."
        },
        "connectorMappingName": {
          "type": "string",
          "readOnly": true,
          "description": "The connector mapping name"
        },
        "displayName": {
          "type": "string",
          "description": "Display name for the connector mapping."
        },
        "description": {
          "type": "string",
          "description": "The description of the connector mapping."
        },
        "dataFormatId": {
          "type": "string",
          "readOnly": true,
          "description": "The DataFormat ID."
        },
        "mappingProperties": {
          "description": "The properties of the mapping.",
          "required": [
            "availability",
            "completeOperation",
            "errorManagement",
            "format",
            "structure"
          ],
          "properties": {
            "folderPath": {
              "type": "string",
              "description": "The folder path for the mapping."
            },
            "fileFilter": {
              "type": "string",
              "description": "The file filter for the mapping."
            },
            "hasHeader": {
              "type": "boolean",
              "description": "If the file contains a header or not."
            },
            "errorManagement": {
              "description": "The error management setting for the mapping.",
              "required": [
                "errorManagementType"
              ],
              "properties": {
                "errorManagementType": {
                  "type": "string",
                  "enum": [
                    "RejectAndContinue",
                    "StopImport",
                    "RejectUntilLimit"
                  ],
                  "x-ms-enum": {
                    "name": "ErrorManagementTypes",
                    "modelAsString": false
                  },
                  "description": "The type of error management to use for the mapping."
                },
                "errorLimit": {
                  "type": "integer",
                  "description": "The error limit allowed while importing data."
                }
              }
            },
            "format": {
              "description": "The format of mapping property.",
              "required": [
                "formatType"
              ],
              "properties": {
                "formatType": {
                  "type": "string",
                  "enum": [
                    "TextFormat"
                  ],
                  "x-ms-enum": {
                    "name": "FormatTypes",
                    "modelAsString": false
                  },
                  "description": "The type mapping format."
                },
                "columnDelimiter": {
                  "type": "string",
                  "description": "The character that signifies a break between columns."
                },
                "acceptLanguage": {
                  "type": "string",
                  "description": "The oData language."
                },
                "quoteCharacter": {
                  "type": "string",
                  "description": "Quote character, used to indicate enquoted fields."
                },
                "quoteEscapeCharacter": {
                  "type": "string",
                  "description": "Escape character for quotes, can be the same as the quoteCharacter."
                },
                "arraySeparator": {
                  "type": "string",
                  "description": "Character separating array elements."
                }
              }
            },
            "availability": {
              "description": "The availability of mapping property.",
              "required": [
                "interval"
              ],
              "properties": {
                "frequency": {
                  "type": "string",
                  "enum": [
                    "Minute",
                    "Hour",
                    "Day",
                    "Week",
                    "Month"
                  ],
                  "x-ms-enum": {
                    "name": "FrequencyTypes",
                    "modelAsString": false
                  },
                  "description": "The frequency to update."
                },
                "interval": {
                  "type": "integer",
                  "description": "The interval of the given frequency to use."
                }
              }
            },
            "structure": {
              "type": "array",
              "items": {
                "required": [
                  "propertyName",
                  "columnName"
                ],
                "properties": {
                  "propertyName": {
                    "type": "string",
                    "description": "The property name of the mapping entity."
                  },
                  "columnName": {
                    "type": "string",
                    "description": "The column name of the import file."
                  },
                  "customFormatSpecifier": {
                    "type": "string",
                    "description": "Custom format specifier for input parsing."
                  },
                  "isEncrypted": {
                    "type": "boolean",
                    "description": "Indicates if the column is encrypted."
                  }
                },
                "description": "Connector mapping property structure."
              },
              "description": "Ingestion mapping information at property level."
            },
            "completeOperation": {
              "description": "The operation after import is done.",
              "properties": {
                "completionOperationType": {
                  "type": "string",
                  "enum": [
                    "DoNothing",
                    "DeleteFile",
                    "MoveFile"
                  ],
                  "x-ms-enum": {
                    "name": "CompletionOperationTypes",
                    "modelAsString": false
                  },
                  "description": "The type of completion operation."
                },
                "destinationFolder": {
                  "type": "string",
                  "description": "The destination folder where files will be moved to once the import is done."
                }
              }
            }
          }
        },
        "nextRunTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The next run time based on customer's settings."
        },
        "runId": {
          "type": "string",
          "readOnly": true,
          "description": "The RunId."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Creating",
            "Created",
            "Failed",
            "Ready",
            "Running",
            "Stopped",
            "Expiring"
          ],
          "x-ms-enum": {
            "name": "ConnectorMappingStates",
            "modelAsString": false
          },
          "description": "State of connector mapping."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        }
      },
      "description": "The connector mapping definition."
    },
    "KpiThresholds": {
      "properties": {
        "lowerLimit": {
          "type": "number",
          "format": "decimal",
          "description": "The lower threshold limit."
        },
        "upperLimit": {
          "type": "number",
          "format": "decimal",
          "description": "The upper threshold limit."
        },
        "increasingKpi": {
          "type": "boolean",
          "description": "Whether or not the KPI is an increasing KPI."
        }
      },
      "required": [
        "lowerLimit",
        "upperLimit",
        "increasingKpi"
      ],
      "description": "Defines the KPI Threshold limits."
    },
    "KpiDefinition": {
      "required": [
        "entityType",
        "entityTypeName",
        "calculationWindow",
        "function",
        "expression"
      ],
      "properties": {
        "entityType": {
          "type": "string",
          "enum": [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ],
          "x-ms-enum": {
            "name": "EntityTypes",
            "modelAsString": false
          },
          "description": "The mapping entity type."
        },
        "entityTypeName": {
          "type": "string",
          "description": "The mapping entity name."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "kpiName": {
          "type": "string",
          "readOnly": true,
          "description": "The KPI name."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display name for the KPI."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized description for the KPI."
        },
        "calculationWindow": {
          "type": "string",
          "enum": [
            "Lifetime",
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "x-ms-enum": {
            "name": "CalculationWindowTypes",
            "modelAsString": false
          },
          "description": "The calculation window."
        },
        "calculationWindowFieldName": {
          "type": "string",
          "description": "Name of calculation window field."
        },
        "function": {
          "type": "string",
          "enum": [
            "Sum",
            "Avg",
            "Min",
            "Max",
            "Last",
            "Count",
            "None",
            "CountDistinct"
          ],
          "x-ms-enum": {
            "name": "KpiFunctions",
            "modelAsString": false
          },
          "description": "The computation function for the KPI."
        },
        "expression": {
          "type": "string",
          "description": "The computation expression for the KPI."
        },
        "unit": {
          "type": "string",
          "description": "The unit of measurement for the KPI."
        },
        "filter": {
          "type": "string",
          "description": "The filter expression for the KPI."
        },
        "groupBy": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the group by properties for the KPI."
        },
        "groupByMetadata": {
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "displayName": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The display name."
              },
              "fieldName": {
                "type": "string",
                "description": "The name of the field."
              },
              "fieldType": {
                "type": "string",
                "description": "The type of the field."
              }
            },
            "description": "The KPI GroupBy field metadata."
          },
          "description": "The KPI GroupByMetadata."
        },
        "participantProfilesMetadata": {
          "type": "array",
          "readOnly": true,
          "items": {
            "required": [
              "typeName"
            ],
            "properties": {
              "typeName": {
                "type": "string",
                "description": "Name of the type."
              }
            },
            "description": "The KPI participant profile metadata."
          },
          "description": "The participant profiles."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Provisioning state.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Expiring",
            "Deleting",
            "HumanIntervention",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStates",
            "modelAsString": true
          }
        },
        "thresHolds": {
          "description": "The KPI thresholds.",
          "properties": {
            "lowerLimit": {
              "type": "number",
              "format": "decimal",
              "description": "The lower threshold limit."
            },
            "upperLimit": {
              "type": "number",
              "format": "decimal",
              "description": "The upper threshold limit."
            },
            "increasingKpi": {
              "type": "boolean",
              "description": "Whether or not the KPI is an increasing KPI."
            }
          },
          "required": [
            "lowerLimit",
            "upperLimit",
            "increasingKpi"
          ]
        },
        "aliases": {
          "type": "array",
          "items": {
            "required": [
              "aliasName",
              "expression"
            ],
            "properties": {
              "aliasName": {
                "type": "string",
                "description": "KPI alias name."
              },
              "expression": {
                "type": "string",
                "description": "The expression."
              }
            },
            "description": "The KPI alias."
          },
          "description": "The aliases."
        },
        "extracts": {
          "type": "array",
          "items": {
            "required": [
              "extractName",
              "expression"
            ],
            "properties": {
              "extractName": {
                "type": "string",
                "description": "KPI extract name."
              },
              "expression": {
                "type": "string",
                "description": "The expression."
              }
            },
            "description": "The KPI extract."
          },
          "description": "The KPI extracts."
        }
      },
      "description": "Defines the KPI Threshold limits."
    },
    "KpiAlias": {
      "required": [
        "aliasName",
        "expression"
      ],
      "properties": {
        "aliasName": {
          "type": "string",
          "description": "KPI alias name."
        },
        "expression": {
          "type": "string",
          "description": "The expression."
        }
      },
      "description": "The KPI alias."
    },
    "KpiExtract": {
      "required": [
        "extractName",
        "expression"
      ],
      "properties": {
        "extractName": {
          "type": "string",
          "description": "KPI extract name."
        },
        "expression": {
          "type": "string",
          "description": "The expression."
        }
      },
      "description": "The KPI extract."
    },
    "KpiGroupByMetadata": {
      "properties": {
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The display name."
        },
        "fieldName": {
          "type": "string",
          "description": "The name of the field."
        },
        "fieldType": {
          "type": "string",
          "description": "The type of the field."
        }
      },
      "description": "The KPI GroupBy field metadata."
    },
    "KpiParticipantProfilesMetadata": {
      "required": [
        "typeName"
      ],
      "properties": {
        "typeName": {
          "type": "string",
          "description": "Name of the type."
        }
      },
      "description": "The KPI participant profile metadata."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true,
      "description": "Common properties of Azure resource."
    },
    "ProxyResource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "x-ms-azure-resource": true,
      "description": "Common properties of proxy resource."
    },
    "WidgetType": {
      "required": [
        "definition"
      ],
      "properties": {
        "widgetTypeName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the widget type."
        },
        "definition": {
          "type": "string",
          "description": "Definition for widget type."
        },
        "description": {
          "type": "string",
          "description": "Description for widget type."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display name for the widget type."
        },
        "imageUrl": {
          "type": "string",
          "description": "The image URL."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "widgetVersion": {
          "type": "string",
          "description": "The widget version."
        },
        "changed": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Date time when widget type was last modified."
        },
        "created": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Date time when widget type was created."
        }
      },
      "description": "Definition of WidgetType."
    },
    "View": {
      "required": [
        "definition"
      ],
      "properties": {
        "viewName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the view."
        },
        "userId": {
          "type": "string",
          "description": "the user ID."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "the hub name."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display name for the view."
        },
        "definition": {
          "type": "string",
          "description": "View definition."
        },
        "changed": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Date time when view was last modified."
        },
        "created": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Date time when view was created."
        }
      },
      "description": "The view in Customer 360 web application."
    },
    "LinkDefinition": {
      "required": [
        "sourceEntityType",
        "targetEntityType",
        "sourceEntityTypeName",
        "targetEntityTypeName",
        "participantPropertyReferences"
      ],
      "properties": {
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "linkName": {
          "type": "string",
          "readOnly": true,
          "description": "The link name."
        },
        "sourceEntityType": {
          "type": "string",
          "enum": [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ],
          "x-ms-enum": {
            "name": "EntityType",
            "modelAsString": false
          },
          "description": "Type of source entity."
        },
        "targetEntityType": {
          "type": "string",
          "enum": [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ],
          "x-ms-enum": {
            "name": "EntityType",
            "modelAsString": false
          },
          "description": "Type of target entity."
        },
        "sourceEntityTypeName": {
          "type": "string",
          "description": "Name of the source Entity Type."
        },
        "targetEntityTypeName": {
          "type": "string",
          "description": "Name of the target Entity Type."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display name for the Link."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized descriptions for the Link."
        },
        "mappings": {
          "type": "array",
          "items": {
            "required": [
              "sourcePropertyName",
              "targetPropertyName"
            ],
            "properties": {
              "sourcePropertyName": {
                "type": "string",
                "description": " Property name on the source Entity Type."
              },
              "targetPropertyName": {
                "type": "string",
                "description": "Property name on the target Entity Type."
              },
              "linkType": {
                "type": "string",
                "enum": [
                  "UpdateAlways",
                  "CopyIfNull"
                ],
                "x-ms-enum": {
                  "name": "LinkTypes",
                  "modelAsString": false
                },
                "description": "Link type."
              }
            },
            "description": "Metadata for a Link's property mapping."
          },
          "description": "The set of properties mappings between the source and target Types."
        },
        "participantPropertyReferences": {
          "type": "array",
          "items": {
            "required": [
              "sourcePropertyName",
              "targetPropertyName"
            ],
            "properties": {
              "sourcePropertyName": {
                "type": "string",
                "description": "The source property that maps to the target property."
              },
              "targetPropertyName": {
                "type": "string",
                "description": "The target property that maps to the source property."
              }
            },
            "description": "The participant property reference."
          },
          "description": "The properties that represent the participating profile."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Provisioning state.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Expiring",
            "Deleting",
            "HumanIntervention",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStates",
            "modelAsString": true
          }
        },
        "referenceOnly": {
          "type": "boolean",
          "description": "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
        },
        "operationType": {
          "type": "string",
          "enum": [
            "Upsert",
            "Delete"
          ],
          "x-ms-enum": {
            "name": "InstanceOperationType",
            "modelAsString": false
          },
          "description": "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only."
        }
      },
      "description": "The definition of Link."
    },
    "RelationshipTypeFieldMapping": {
      "required": [
        "profileFieldName",
        "relatedProfileKeyProperty"
      ],
      "properties": {
        "profileFieldName": {
          "type": "string",
          "description": "Specifies the fieldName in profile."
        },
        "relatedProfileKeyProperty": {
          "type": "string",
          "description": "Specifies the KeyProperty (from StrongId) of the related profile."
        }
      },
      "description": "Map a field of profile to its corresponding StrongId in Related Profile."
    },
    "RelationshipTypeMapping": {
      "required": [
        "fieldMappings"
      ],
      "properties": {
        "fieldMappings": {
          "type": "array",
          "items": {
            "required": [
              "profileFieldName",
              "relatedProfileKeyProperty"
            ],
            "properties": {
              "profileFieldName": {
                "type": "string",
                "description": "Specifies the fieldName in profile."
              },
              "relatedProfileKeyProperty": {
                "type": "string",
                "description": "Specifies the KeyProperty (from StrongId) of the related profile."
              }
            },
            "description": "Map a field of profile to its corresponding StrongId in Related Profile."
          },
          "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well."
        }
      },
      "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile."
    },
    "RelationshipDefinition": {
      "required": [
        "profileType",
        "relatedProfileType"
      ],
      "properties": {
        "cardinality": {
          "type": "string",
          "enum": [
            "OneToOne",
            "OneToMany",
            "ManyToMany"
          ],
          "x-ms-enum": {
            "name": "CardinalityTypes",
            "modelAsString": false
          },
          "description": "The Relationship Cardinality."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display name for the Relationship."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized descriptions for the Relationship."
        },
        "expiryDateTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The expiry date time in UTC."
        },
        "fields": {
          "type": "array",
          "items": {
            "required": [
              "fieldName",
              "fieldType"
            ],
            "properties": {
              "arrayValueSeparator": {
                "type": "string",
                "description": "Array value separator for properties with isArray set."
              },
              "enumValidValues": {
                "type": "array",
                "items": {
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "The integer value of the enum member."
                    },
                    "localizedValueNames": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Localized names of the enum member."
                    }
                  },
                  "description": "Valid enum values in case of an enum property."
                },
                "description": "Describes valid values for an enum property."
              },
              "fieldName": {
                "type": "string",
                "description": "Name of the property."
              },
              "fieldType": {
                "type": "string",
                "description": "Type of the property."
              },
              "isArray": {
                "type": "boolean",
                "description": "Indicates if the property is actually an array of the fieldType above on the data api."
              },
              "isEnum": {
                "type": "boolean",
                "description": "Indicates if the property is an enum."
              },
              "isFlagEnum": {
                "type": "boolean",
                "description": "Indicates if the property is an flag enum."
              },
              "isImage": {
                "type": "boolean",
                "description": "Whether the property is an Image."
              },
              "isLocalizedString": {
                "type": "boolean",
                "description": "Whether the property is a localized string."
              },
              "isName": {
                "type": "boolean",
                "description": "Whether the property is a name or a part of name."
              },
              "isRequired": {
                "type": "boolean",
                "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
              },
              "propertyId": {
                "type": "string",
                "description": "The ID associated with the property."
              },
              "schemaItemPropLink": {
                "type": "string",
                "description": "URL encoded schema.org item prop link for the property."
              },
              "maxLength": {
                "type": "integer",
                "description": "Max length of string. Used only if type is string."
              },
              "isAvailableInGraph": {
                "type": "boolean",
                "description": "Whether property is available in graph or not."
              },
              "dataSourcePrecedenceRules": {
                "type": "array",
                "items": {
                  "properties": {
                    "dataSource": {
                      "x-ms-client-flatten": true,
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source name"
                        },
                        "dataSourceType": {
                          "type": "string",
                          "enum": [
                            "Connector",
                            "LinkInteraction",
                            "SystemDefault"
                          ],
                          "x-ms-enum": {
                            "name": "DataSourceType",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source type."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "None",
                            "Active",
                            "Deleted"
                          ],
                          "x-ms-enum": {
                            "name": "Status",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "description": "The data source status."
                        },
                        "id": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The data source ID."
                        },
                        "dataSourceReferenceId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The data source reference id."
                        }
                      },
                      "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                    },
                    "precedence": {
                      "type": "integer",
                      "description": "the precedence value."
                    }
                  },
                  "description": "The data source precedence is a way to know the precedence of each data source."
                },
                "readOnly": true,
                "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
              }
            },
            "description": "Property definition."
          },
          "description": "The properties of the Relationship."
        },
        "lookupMappings": {
          "type": "array",
          "items": {
            "required": [
              "fieldMappings"
            ],
            "properties": {
              "fieldMappings": {
                "type": "array",
                "items": {
                  "required": [
                    "profileFieldName",
                    "relatedProfileKeyProperty"
                  ],
                  "properties": {
                    "profileFieldName": {
                      "type": "string",
                      "description": "Specifies the fieldName in profile."
                    },
                    "relatedProfileKeyProperty": {
                      "type": "string",
                      "description": "Specifies the KeyProperty (from StrongId) of the related profile."
                    }
                  },
                  "description": "Map a field of profile to its corresponding StrongId in Related Profile."
                },
                "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well."
              }
            },
            "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile."
          },
          "description": "Optional property to be used to map fields in profile to their strong ids in related profile."
        },
        "profileType": {
          "type": "string",
          "description": "Profile type."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Provisioning state.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Expiring",
            "Deleting",
            "HumanIntervention",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStates",
            "modelAsString": true
          }
        },
        "relationshipName": {
          "type": "string",
          "readOnly": true,
          "description": "The Relationship name."
        },
        "relatedProfileType": {
          "type": "string",
          "description": "Related profile being referenced."
        },
        "relationshipGuidId": {
          "type": "string",
          "readOnly": true,
          "description": "The relationship guid id."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        }
      },
      "description": "The definition of Relationship."
    },
    "RelationshipLinkFieldMapping": {
      "required": [
        "interactionFieldName",
        "relationshipFieldName"
      ],
      "properties": {
        "interactionFieldName": {
          "type": "string",
          "description": "The field name on the Interaction Type."
        },
        "linkType": {
          "type": "string",
          "enum": [
            "UpdateAlways",
            "CopyIfNull"
          ],
          "x-ms-enum": {
            "name": "LinkTypes",
            "modelAsString": false
          },
          "description": "Link type."
        },
        "relationshipFieldName": {
          "type": "string",
          "description": "The field name on the Relationship metadata."
        }
      },
      "description": "The fields mapping for Relationships."
    },
    "RelationshipLinkDefinition": {
      "required": [
        "interactionType",
        "profilePropertyReferences",
        "relatedProfilePropertyReferences",
        "relationshipName"
      ],
      "properties": {
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display name for the Relationship Link."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized descriptions for the Relationship Link."
        },
        "interactionType": {
          "type": "string",
          "description": "The InteractionType associated with the Relationship Link."
        },
        "linkName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the Relationship Link."
        },
        "mappings": {
          "type": "array",
          "items": {
            "required": [
              "interactionFieldName",
              "relationshipFieldName"
            ],
            "properties": {
              "interactionFieldName": {
                "type": "string",
                "description": "The field name on the Interaction Type."
              },
              "linkType": {
                "type": "string",
                "enum": [
                  "UpdateAlways",
                  "CopyIfNull"
                ],
                "x-ms-enum": {
                  "name": "LinkTypes",
                  "modelAsString": false
                },
                "description": "Link type."
              },
              "relationshipFieldName": {
                "type": "string",
                "description": "The field name on the Relationship metadata."
              }
            },
            "description": "The fields mapping for Relationships."
          },
          "description": "The mappings between Interaction and Relationship fields."
        },
        "profilePropertyReferences": {
          "type": "array",
          "items": {
            "required": [
              "interactionPropertyName",
              "profilePropertyName"
            ],
            "properties": {
              "interactionPropertyName": {
                "type": "string",
                "description": "The source interaction property that maps to the target profile property."
              },
              "profilePropertyName": {
                "type": "string",
                "description": "The target profile property that maps to the source interaction property."
              }
            },
            "description": "The participant profile property reference."
          },
          "description": "The property references for the Profile of the Relationship."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Provisioning state.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Expiring",
            "Deleting",
            "HumanIntervention",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStates",
            "modelAsString": true
          }
        },
        "relatedProfilePropertyReferences": {
          "type": "array",
          "items": {
            "required": [
              "interactionPropertyName",
              "profilePropertyName"
            ],
            "properties": {
              "interactionPropertyName": {
                "type": "string",
                "description": "The source interaction property that maps to the target profile property."
              },
              "profilePropertyName": {
                "type": "string",
                "description": "The target profile property that maps to the source interaction property."
              }
            },
            "description": "The participant profile property reference."
          },
          "description": "The property references for the Related Profile of the Relationship."
        },
        "relationshipName": {
          "type": "string",
          "description": "The Relationship associated with the Link."
        },
        "relationshipGuidId": {
          "type": "string",
          "readOnly": true,
          "description": "The relationship guid id."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        }
      },
      "description": "The definition of relationship link."
    },
    "TypePropertiesMapping": {
      "required": [
        "sourcePropertyName",
        "targetPropertyName"
      ],
      "properties": {
        "sourcePropertyName": {
          "type": "string",
          "description": " Property name on the source Entity Type."
        },
        "targetPropertyName": {
          "type": "string",
          "description": "Property name on the target Entity Type."
        },
        "linkType": {
          "type": "string",
          "enum": [
            "UpdateAlways",
            "CopyIfNull"
          ],
          "x-ms-enum": {
            "name": "LinkTypes",
            "modelAsString": false
          },
          "description": "Link type."
        }
      },
      "description": "Metadata for a Link's property mapping."
    },
    "Participant": {
      "required": [
        "participantName",
        "profileTypeName",
        "participantPropertyReferences"
      ],
      "properties": {
        "profileTypeName": {
          "type": "string",
          "description": "Profile type name."
        },
        "participantPropertyReferences": {
          "type": "array",
          "items": {
            "required": [
              "sourcePropertyName",
              "targetPropertyName"
            ],
            "properties": {
              "sourcePropertyName": {
                "type": "string",
                "description": "The source property that maps to the target property."
              },
              "targetPropertyName": {
                "type": "string",
                "description": "The target property that maps to the source property."
              }
            },
            "description": "The participant property reference."
          },
          "description": "The property references."
        },
        "participantName": {
          "type": "string",
          "description": "Participant name."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display name."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized descriptions."
        },
        "role": {
          "type": "string",
          "description": "The role that the participant is playing in the interaction."
        }
      },
      "description": "Describes a profile type participating in an interaction."
    },
    "ParticipantPropertyReference": {
      "required": [
        "sourcePropertyName",
        "targetPropertyName"
      ],
      "properties": {
        "sourcePropertyName": {
          "type": "string",
          "description": "The source property that maps to the target property."
        },
        "targetPropertyName": {
          "type": "string",
          "description": "The target property that maps to the source property."
        }
      },
      "description": "The participant property reference."
    },
    "ParticipantProfilePropertyReference": {
      "required": [
        "interactionPropertyName",
        "profilePropertyName"
      ],
      "properties": {
        "interactionPropertyName": {
          "type": "string",
          "description": "The source interaction property that maps to the target profile property."
        },
        "profilePropertyName": {
          "type": "string",
          "description": "The target profile property that maps to the source interaction property."
        }
      },
      "description": "The participant profile property reference."
    },
    "InteractionTypeDefinition": {
      "description": "The Interaction Type Definition",
      "allOf": [
        {
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "The attributes for the Type."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized descriptions for the property."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display names for the property."
            },
            "localizedAttributes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "description": "Any custom localized attributes for the Type."
            },
            "smallImage": {
              "type": "string",
              "description": "Small Image associated with the Property or EntityType."
            },
            "mediumImage": {
              "type": "string",
              "description": "Medium Image associated with the Property or EntityType."
            },
            "largeImage": {
              "type": "string",
              "description": "Large Image associated with the Property or EntityType."
            },
            "apiEntitySetName": {
              "type": "string",
              "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
            },
            "entityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityTypes",
                "modelAsString": false
              },
              "description": "Type of entity."
            },
            "fields": {
              "type": "array",
              "items": {
                "required": [
                  "fieldName",
                  "fieldType"
                ],
                "properties": {
                  "arrayValueSeparator": {
                    "type": "string",
                    "description": "Array value separator for properties with isArray set."
                  },
                  "enumValidValues": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "The integer value of the enum member."
                        },
                        "localizedValueNames": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized names of the enum member."
                        }
                      },
                      "description": "Valid enum values in case of an enum property."
                    },
                    "description": "Describes valid values for an enum property."
                  },
                  "fieldName": {
                    "type": "string",
                    "description": "Name of the property."
                  },
                  "fieldType": {
                    "type": "string",
                    "description": "Type of the property."
                  },
                  "isArray": {
                    "type": "boolean",
                    "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                  },
                  "isEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an enum."
                  },
                  "isFlagEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an flag enum."
                  },
                  "isImage": {
                    "type": "boolean",
                    "description": "Whether the property is an Image."
                  },
                  "isLocalizedString": {
                    "type": "boolean",
                    "description": "Whether the property is a localized string."
                  },
                  "isName": {
                    "type": "boolean",
                    "description": "Whether the property is a name or a part of name."
                  },
                  "isRequired": {
                    "type": "boolean",
                    "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                  },
                  "propertyId": {
                    "type": "string",
                    "description": "The ID associated with the property."
                  },
                  "schemaItemPropLink": {
                    "type": "string",
                    "description": "URL encoded schema.org item prop link for the property."
                  },
                  "maxLength": {
                    "type": "integer",
                    "description": "Max length of string. Used only if type is string."
                  },
                  "isAvailableInGraph": {
                    "type": "boolean",
                    "description": "Whether property is available in graph or not."
                  },
                  "dataSourcePrecedenceRules": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "dataSource": {
                          "x-ms-client-flatten": true,
                          "properties": {
                            "name": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source name"
                            },
                            "dataSourceType": {
                              "type": "string",
                              "enum": [
                                "Connector",
                                "LinkInteraction",
                                "SystemDefault"
                              ],
                              "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source type."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "None",
                                "Active",
                                "Deleted"
                              ],
                              "x-ms-enum": {
                                "name": "Status",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source status."
                            },
                            "id": {
                              "type": "integer",
                              "readOnly": true,
                              "description": "The data source ID."
                            },
                            "dataSourceReferenceId": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source reference id."
                            }
                          },
                          "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                        },
                        "precedence": {
                          "type": "integer",
                          "description": "the precedence value."
                        }
                      },
                      "description": "The data source precedence is a way to know the precedence of each data source."
                    },
                    "readOnly": true,
                    "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                  }
                },
                "description": "Property definition."
              },
              "description": "The properties of the Profile."
            },
            "instancesCount": {
              "type": "integer",
              "description": "The instance count."
            },
            "lastChangedUtc": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The last changed time for the type definition."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "schemaItemTypeLink": {
              "type": "string",
              "description": "The schema org link. This helps ACI identify and suggest semantic models."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "timestampFieldName": {
              "type": "string",
              "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
            },
            "typeName": {
              "type": "string",
              "description": "The name of the entity."
            }
          },
          "description": "Describes an entity."
        }
      ],
      "properties": {
        "idPropertyNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The id property names. Properties which uniquely identify an interaction instance."
        },
        "participantProfiles": {
          "type": "array",
          "items": {
            "required": [
              "participantName",
              "profileTypeName",
              "participantPropertyReferences"
            ],
            "properties": {
              "profileTypeName": {
                "type": "string",
                "description": "Profile type name."
              },
              "participantPropertyReferences": {
                "type": "array",
                "items": {
                  "required": [
                    "sourcePropertyName",
                    "targetPropertyName"
                  ],
                  "properties": {
                    "sourcePropertyName": {
                      "type": "string",
                      "description": "The source property that maps to the target property."
                    },
                    "targetPropertyName": {
                      "type": "string",
                      "description": "The target property that maps to the source property."
                    }
                  },
                  "description": "The participant property reference."
                },
                "description": "The property references."
              },
              "participantName": {
                "type": "string",
                "description": "Participant name."
              },
              "displayName": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Localized display name."
              },
              "description": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Localized descriptions."
              },
              "role": {
                "type": "string",
                "description": "The role that the participant is playing in the interaction."
              }
            },
            "description": "Describes a profile type participating in an interaction."
          },
          "description": "Profiles that participated in the interaction."
        },
        "primaryParticipantProfilePropertyName": {
          "type": "string",
          "description": "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
        },
        "dataSourcePrecedenceRules": {
          "type": "array",
          "items": {
            "properties": {
              "dataSource": {
                "x-ms-client-flatten": true,
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The data source name"
                  },
                  "dataSourceType": {
                    "type": "string",
                    "enum": [
                      "Connector",
                      "LinkInteraction",
                      "SystemDefault"
                    ],
                    "x-ms-enum": {
                      "name": "DataSourceType",
                      "modelAsString": true
                    },
                    "readOnly": true,
                    "description": "The data source type."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Active",
                      "Deleted"
                    ],
                    "x-ms-enum": {
                      "name": "Status",
                      "modelAsString": true
                    },
                    "readOnly": true,
                    "description": "The data source status."
                  },
                  "id": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The data source ID."
                  },
                  "dataSourceReferenceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The data source reference id."
                  }
                },
                "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
              },
              "precedence": {
                "type": "integer",
                "description": "the precedence value."
              }
            },
            "description": "The data source precedence is a way to know the precedence of each data source."
          },
          "readOnly": true,
          "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
        },
        "defaultDataSource": {
          "x-ms-client-flatten": true,
          "description": "Default data source is specifically used in cases where data source is not specified in an instance.",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "The data source name"
            },
            "dataSourceType": {
              "type": "string",
              "enum": [
                "Connector",
                "LinkInteraction",
                "SystemDefault"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true
              },
              "readOnly": true,
              "description": "The data source type."
            },
            "status": {
              "type": "string",
              "enum": [
                "None",
                "Active",
                "Deleted"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              },
              "readOnly": true,
              "description": "The data source status."
            },
            "id": {
              "type": "integer",
              "readOnly": true,
              "description": "The data source ID."
            },
            "dataSourceReferenceId": {
              "type": "string",
              "readOnly": true,
              "description": "The data source reference id."
            }
          }
        },
        "isActivity": {
          "type": "boolean",
          "description": "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
        }
      }
    },
    "DataSource": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The data source name"
        },
        "dataSourceType": {
          "type": "string",
          "enum": [
            "Connector",
            "LinkInteraction",
            "SystemDefault"
          ],
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The data source type."
        },
        "status": {
          "type": "string",
          "enum": [
            "None",
            "Active",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The data source status."
        },
        "id": {
          "type": "integer",
          "readOnly": true,
          "description": "The data source ID."
        },
        "dataSourceReferenceId": {
          "type": "string",
          "readOnly": true,
          "description": "The data source reference id."
        }
      },
      "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
    },
    "DataSourcePrecedence": {
      "properties": {
        "dataSource": {
          "x-ms-client-flatten": true,
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "The data source name"
            },
            "dataSourceType": {
              "type": "string",
              "enum": [
                "Connector",
                "LinkInteraction",
                "SystemDefault"
              ],
              "x-ms-enum": {
                "name": "DataSourceType",
                "modelAsString": true
              },
              "readOnly": true,
              "description": "The data source type."
            },
            "status": {
              "type": "string",
              "enum": [
                "None",
                "Active",
                "Deleted"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              },
              "readOnly": true,
              "description": "The data source status."
            },
            "id": {
              "type": "integer",
              "readOnly": true,
              "description": "The data source ID."
            },
            "dataSourceReferenceId": {
              "type": "string",
              "readOnly": true,
              "description": "The data source reference id."
            }
          },
          "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
        },
        "precedence": {
          "type": "integer",
          "description": "the precedence value."
        }
      },
      "description": "The data source precedence is a way to know the precedence of each data source."
    },
    "StrongId": {
      "required": [
        "keyPropertyNames",
        "strongIdName"
      ],
      "properties": {
        "keyPropertyNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The properties which make up the unique ID."
        },
        "strongIdName": {
          "type": "string",
          "description": "The Name identifying the strong ID."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display name."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized descriptions."
        }
      },
      "description": "Property/Properties which represent a unique ID."
    },
    "ProfileTypeDefinition": {
      "description": "The profile type definition.",
      "properties": {
        "strongIds": {
          "type": "array",
          "items": {
            "required": [
              "keyPropertyNames",
              "strongIdName"
            ],
            "properties": {
              "keyPropertyNames": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The properties which make up the unique ID."
              },
              "strongIdName": {
                "type": "string",
                "description": "The Name identifying the strong ID."
              },
              "displayName": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Localized display name."
              },
              "description": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Localized descriptions."
              }
            },
            "description": "Property/Properties which represent a unique ID."
          },
          "description": "The strong IDs."
        }
      },
      "allOf": [
        {
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "The attributes for the Type."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized descriptions for the property."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display names for the property."
            },
            "localizedAttributes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "description": "Any custom localized attributes for the Type."
            },
            "smallImage": {
              "type": "string",
              "description": "Small Image associated with the Property or EntityType."
            },
            "mediumImage": {
              "type": "string",
              "description": "Medium Image associated with the Property or EntityType."
            },
            "largeImage": {
              "type": "string",
              "description": "Large Image associated with the Property or EntityType."
            },
            "apiEntitySetName": {
              "type": "string",
              "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
            },
            "entityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityTypes",
                "modelAsString": false
              },
              "description": "Type of entity."
            },
            "fields": {
              "type": "array",
              "items": {
                "required": [
                  "fieldName",
                  "fieldType"
                ],
                "properties": {
                  "arrayValueSeparator": {
                    "type": "string",
                    "description": "Array value separator for properties with isArray set."
                  },
                  "enumValidValues": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "The integer value of the enum member."
                        },
                        "localizedValueNames": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized names of the enum member."
                        }
                      },
                      "description": "Valid enum values in case of an enum property."
                    },
                    "description": "Describes valid values for an enum property."
                  },
                  "fieldName": {
                    "type": "string",
                    "description": "Name of the property."
                  },
                  "fieldType": {
                    "type": "string",
                    "description": "Type of the property."
                  },
                  "isArray": {
                    "type": "boolean",
                    "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                  },
                  "isEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an enum."
                  },
                  "isFlagEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an flag enum."
                  },
                  "isImage": {
                    "type": "boolean",
                    "description": "Whether the property is an Image."
                  },
                  "isLocalizedString": {
                    "type": "boolean",
                    "description": "Whether the property is a localized string."
                  },
                  "isName": {
                    "type": "boolean",
                    "description": "Whether the property is a name or a part of name."
                  },
                  "isRequired": {
                    "type": "boolean",
                    "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                  },
                  "propertyId": {
                    "type": "string",
                    "description": "The ID associated with the property."
                  },
                  "schemaItemPropLink": {
                    "type": "string",
                    "description": "URL encoded schema.org item prop link for the property."
                  },
                  "maxLength": {
                    "type": "integer",
                    "description": "Max length of string. Used only if type is string."
                  },
                  "isAvailableInGraph": {
                    "type": "boolean",
                    "description": "Whether property is available in graph or not."
                  },
                  "dataSourcePrecedenceRules": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "dataSource": {
                          "x-ms-client-flatten": true,
                          "properties": {
                            "name": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source name"
                            },
                            "dataSourceType": {
                              "type": "string",
                              "enum": [
                                "Connector",
                                "LinkInteraction",
                                "SystemDefault"
                              ],
                              "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source type."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "None",
                                "Active",
                                "Deleted"
                              ],
                              "x-ms-enum": {
                                "name": "Status",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source status."
                            },
                            "id": {
                              "type": "integer",
                              "readOnly": true,
                              "description": "The data source ID."
                            },
                            "dataSourceReferenceId": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source reference id."
                            }
                          },
                          "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                        },
                        "precedence": {
                          "type": "integer",
                          "description": "the precedence value."
                        }
                      },
                      "description": "The data source precedence is a way to know the precedence of each data source."
                    },
                    "readOnly": true,
                    "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                  }
                },
                "description": "Property definition."
              },
              "description": "The properties of the Profile."
            },
            "instancesCount": {
              "type": "integer",
              "description": "The instance count."
            },
            "lastChangedUtc": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The last changed time for the type definition."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "schemaItemTypeLink": {
              "type": "string",
              "description": "The schema org link. This helps ACI identify and suggest semantic models."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "timestampFieldName": {
              "type": "string",
              "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
            },
            "typeName": {
              "type": "string",
              "description": "The name of the entity."
            }
          },
          "description": "Describes an entity."
        }
      ]
    },
    "ProfileResourceFormat": {
      "description": "The profile resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The profile type definition.",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "The attributes for the Type."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized descriptions for the property."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display names for the property."
            },
            "localizedAttributes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "description": "Any custom localized attributes for the Type."
            },
            "smallImage": {
              "type": "string",
              "description": "Small Image associated with the Property or EntityType."
            },
            "mediumImage": {
              "type": "string",
              "description": "Medium Image associated with the Property or EntityType."
            },
            "largeImage": {
              "type": "string",
              "description": "Large Image associated with the Property or EntityType."
            },
            "apiEntitySetName": {
              "type": "string",
              "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
            },
            "entityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityTypes",
                "modelAsString": false
              },
              "description": "Type of entity."
            },
            "fields": {
              "type": "array",
              "items": {
                "required": [
                  "fieldName",
                  "fieldType"
                ],
                "properties": {
                  "arrayValueSeparator": {
                    "type": "string",
                    "description": "Array value separator for properties with isArray set."
                  },
                  "enumValidValues": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "The integer value of the enum member."
                        },
                        "localizedValueNames": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized names of the enum member."
                        }
                      },
                      "description": "Valid enum values in case of an enum property."
                    },
                    "description": "Describes valid values for an enum property."
                  },
                  "fieldName": {
                    "type": "string",
                    "description": "Name of the property."
                  },
                  "fieldType": {
                    "type": "string",
                    "description": "Type of the property."
                  },
                  "isArray": {
                    "type": "boolean",
                    "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                  },
                  "isEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an enum."
                  },
                  "isFlagEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an flag enum."
                  },
                  "isImage": {
                    "type": "boolean",
                    "description": "Whether the property is an Image."
                  },
                  "isLocalizedString": {
                    "type": "boolean",
                    "description": "Whether the property is a localized string."
                  },
                  "isName": {
                    "type": "boolean",
                    "description": "Whether the property is a name or a part of name."
                  },
                  "isRequired": {
                    "type": "boolean",
                    "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                  },
                  "propertyId": {
                    "type": "string",
                    "description": "The ID associated with the property."
                  },
                  "schemaItemPropLink": {
                    "type": "string",
                    "description": "URL encoded schema.org item prop link for the property."
                  },
                  "maxLength": {
                    "type": "integer",
                    "description": "Max length of string. Used only if type is string."
                  },
                  "isAvailableInGraph": {
                    "type": "boolean",
                    "description": "Whether property is available in graph or not."
                  },
                  "dataSourcePrecedenceRules": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "dataSource": {
                          "x-ms-client-flatten": true,
                          "properties": {
                            "name": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source name"
                            },
                            "dataSourceType": {
                              "type": "string",
                              "enum": [
                                "Connector",
                                "LinkInteraction",
                                "SystemDefault"
                              ],
                              "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source type."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "None",
                                "Active",
                                "Deleted"
                              ],
                              "x-ms-enum": {
                                "name": "Status",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source status."
                            },
                            "id": {
                              "type": "integer",
                              "readOnly": true,
                              "description": "The data source ID."
                            },
                            "dataSourceReferenceId": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source reference id."
                            }
                          },
                          "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                        },
                        "precedence": {
                          "type": "integer",
                          "description": "the precedence value."
                        }
                      },
                      "description": "The data source precedence is a way to know the precedence of each data source."
                    },
                    "readOnly": true,
                    "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                  }
                },
                "description": "Property definition."
              },
              "description": "The properties of the Profile."
            },
            "instancesCount": {
              "type": "integer",
              "description": "The instance count."
            },
            "lastChangedUtc": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The last changed time for the type definition."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "schemaItemTypeLink": {
              "type": "string",
              "description": "The schema org link. This helps ACI identify and suggest semantic models."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "timestampFieldName": {
              "type": "string",
              "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
            },
            "typeName": {
              "type": "string",
              "description": "The name of the entity."
            },
            "strongIds": {
              "type": "array",
              "items": {
                "required": [
                  "keyPropertyNames",
                  "strongIdName"
                ],
                "properties": {
                  "keyPropertyNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The properties which make up the unique ID."
                  },
                  "strongIdName": {
                    "type": "string",
                    "description": "The Name identifying the strong ID."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized descriptions."
                  }
                },
                "description": "Property/Properties which represent a unique ID."
              },
              "description": "The strong IDs."
            }
          }
        }
      }
    },
    "ProfileListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The profile resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The profile type definition.",
                "properties": {
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": "The attributes for the Type."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized descriptions for the property."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display names for the property."
                  },
                  "localizedAttributes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "description": "Any custom localized attributes for the Type."
                  },
                  "smallImage": {
                    "type": "string",
                    "description": "Small Image associated with the Property or EntityType."
                  },
                  "mediumImage": {
                    "type": "string",
                    "description": "Medium Image associated with the Property or EntityType."
                  },
                  "largeImage": {
                    "type": "string",
                    "description": "Large Image associated with the Property or EntityType."
                  },
                  "apiEntitySetName": {
                    "type": "string",
                    "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                  },
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Profile",
                      "Interaction",
                      "Relationship"
                    ],
                    "x-ms-enum": {
                      "name": "EntityTypes",
                      "modelAsString": false
                    },
                    "description": "Type of entity."
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "required": [
                        "fieldName",
                        "fieldType"
                      ],
                      "properties": {
                        "arrayValueSeparator": {
                          "type": "string",
                          "description": "Array value separator for properties with isArray set."
                        },
                        "enumValidValues": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "value": {
                                "type": "integer",
                                "description": "The integer value of the enum member."
                              },
                              "localizedValueNames": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Localized names of the enum member."
                              }
                            },
                            "description": "Valid enum values in case of an enum property."
                          },
                          "description": "Describes valid values for an enum property."
                        },
                        "fieldName": {
                          "type": "string",
                          "description": "Name of the property."
                        },
                        "fieldType": {
                          "type": "string",
                          "description": "Type of the property."
                        },
                        "isArray": {
                          "type": "boolean",
                          "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                        },
                        "isEnum": {
                          "type": "boolean",
                          "description": "Indicates if the property is an enum."
                        },
                        "isFlagEnum": {
                          "type": "boolean",
                          "description": "Indicates if the property is an flag enum."
                        },
                        "isImage": {
                          "type": "boolean",
                          "description": "Whether the property is an Image."
                        },
                        "isLocalizedString": {
                          "type": "boolean",
                          "description": "Whether the property is a localized string."
                        },
                        "isName": {
                          "type": "boolean",
                          "description": "Whether the property is a name or a part of name."
                        },
                        "isRequired": {
                          "type": "boolean",
                          "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                        },
                        "propertyId": {
                          "type": "string",
                          "description": "The ID associated with the property."
                        },
                        "schemaItemPropLink": {
                          "type": "string",
                          "description": "URL encoded schema.org item prop link for the property."
                        },
                        "maxLength": {
                          "type": "integer",
                          "description": "Max length of string. Used only if type is string."
                        },
                        "isAvailableInGraph": {
                          "type": "boolean",
                          "description": "Whether property is available in graph or not."
                        },
                        "dataSourcePrecedenceRules": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "dataSource": {
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The data source name"
                                  },
                                  "dataSourceType": {
                                    "type": "string",
                                    "enum": [
                                      "Connector",
                                      "LinkInteraction",
                                      "SystemDefault"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataSourceType",
                                      "modelAsString": true
                                    },
                                    "readOnly": true,
                                    "description": "The data source type."
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "Active",
                                      "Deleted"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Status",
                                      "modelAsString": true
                                    },
                                    "readOnly": true,
                                    "description": "The data source status."
                                  },
                                  "id": {
                                    "type": "integer",
                                    "readOnly": true,
                                    "description": "The data source ID."
                                  },
                                  "dataSourceReferenceId": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The data source reference id."
                                  }
                                },
                                "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                              },
                              "precedence": {
                                "type": "integer",
                                "description": "the precedence value."
                              }
                            },
                            "description": "The data source precedence is a way to know the precedence of each data source."
                          },
                          "readOnly": true,
                          "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                        }
                      },
                      "description": "Property definition."
                    },
                    "description": "The properties of the Profile."
                  },
                  "instancesCount": {
                    "type": "integer",
                    "description": "The instance count."
                  },
                  "lastChangedUtc": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The last changed time for the type definition."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "schemaItemTypeLink": {
                    "type": "string",
                    "description": "The schema org link. This helps ACI identify and suggest semantic models."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "timestampFieldName": {
                    "type": "string",
                    "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                  },
                  "typeName": {
                    "type": "string",
                    "description": "The name of the entity."
                  },
                  "strongIds": {
                    "type": "array",
                    "items": {
                      "required": [
                        "keyPropertyNames",
                        "strongIdName"
                      ],
                      "properties": {
                        "keyPropertyNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The properties which make up the unique ID."
                        },
                        "strongIdName": {
                          "type": "string",
                          "description": "The Name identifying the strong ID."
                        },
                        "displayName": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized display name."
                        },
                        "description": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized descriptions."
                        }
                      },
                      "description": "Property/Properties which represent a unique ID."
                    },
                    "description": "The strong IDs."
                  }
                }
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list profile operation."
    },
    "InteractionResourceFormat": {
      "description": "The interaction resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The Interaction Type Definition",
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "The attributes for the Type."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized descriptions for the property."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display names for the property."
            },
            "localizedAttributes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "description": "Any custom localized attributes for the Type."
            },
            "smallImage": {
              "type": "string",
              "description": "Small Image associated with the Property or EntityType."
            },
            "mediumImage": {
              "type": "string",
              "description": "Medium Image associated with the Property or EntityType."
            },
            "largeImage": {
              "type": "string",
              "description": "Large Image associated with the Property or EntityType."
            },
            "apiEntitySetName": {
              "type": "string",
              "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
            },
            "entityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityTypes",
                "modelAsString": false
              },
              "description": "Type of entity."
            },
            "fields": {
              "type": "array",
              "items": {
                "required": [
                  "fieldName",
                  "fieldType"
                ],
                "properties": {
                  "arrayValueSeparator": {
                    "type": "string",
                    "description": "Array value separator for properties with isArray set."
                  },
                  "enumValidValues": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "The integer value of the enum member."
                        },
                        "localizedValueNames": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized names of the enum member."
                        }
                      },
                      "description": "Valid enum values in case of an enum property."
                    },
                    "description": "Describes valid values for an enum property."
                  },
                  "fieldName": {
                    "type": "string",
                    "description": "Name of the property."
                  },
                  "fieldType": {
                    "type": "string",
                    "description": "Type of the property."
                  },
                  "isArray": {
                    "type": "boolean",
                    "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                  },
                  "isEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an enum."
                  },
                  "isFlagEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an flag enum."
                  },
                  "isImage": {
                    "type": "boolean",
                    "description": "Whether the property is an Image."
                  },
                  "isLocalizedString": {
                    "type": "boolean",
                    "description": "Whether the property is a localized string."
                  },
                  "isName": {
                    "type": "boolean",
                    "description": "Whether the property is a name or a part of name."
                  },
                  "isRequired": {
                    "type": "boolean",
                    "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                  },
                  "propertyId": {
                    "type": "string",
                    "description": "The ID associated with the property."
                  },
                  "schemaItemPropLink": {
                    "type": "string",
                    "description": "URL encoded schema.org item prop link for the property."
                  },
                  "maxLength": {
                    "type": "integer",
                    "description": "Max length of string. Used only if type is string."
                  },
                  "isAvailableInGraph": {
                    "type": "boolean",
                    "description": "Whether property is available in graph or not."
                  },
                  "dataSourcePrecedenceRules": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "dataSource": {
                          "x-ms-client-flatten": true,
                          "properties": {
                            "name": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source name"
                            },
                            "dataSourceType": {
                              "type": "string",
                              "enum": [
                                "Connector",
                                "LinkInteraction",
                                "SystemDefault"
                              ],
                              "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source type."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "None",
                                "Active",
                                "Deleted"
                              ],
                              "x-ms-enum": {
                                "name": "Status",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source status."
                            },
                            "id": {
                              "type": "integer",
                              "readOnly": true,
                              "description": "The data source ID."
                            },
                            "dataSourceReferenceId": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source reference id."
                            }
                          },
                          "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                        },
                        "precedence": {
                          "type": "integer",
                          "description": "the precedence value."
                        }
                      },
                      "description": "The data source precedence is a way to know the precedence of each data source."
                    },
                    "readOnly": true,
                    "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                  }
                },
                "description": "Property definition."
              },
              "description": "The properties of the Profile."
            },
            "instancesCount": {
              "type": "integer",
              "description": "The instance count."
            },
            "lastChangedUtc": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The last changed time for the type definition."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "schemaItemTypeLink": {
              "type": "string",
              "description": "The schema org link. This helps ACI identify and suggest semantic models."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "timestampFieldName": {
              "type": "string",
              "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
            },
            "typeName": {
              "type": "string",
              "description": "The name of the entity."
            },
            "idPropertyNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The id property names. Properties which uniquely identify an interaction instance."
            },
            "participantProfiles": {
              "type": "array",
              "items": {
                "required": [
                  "participantName",
                  "profileTypeName",
                  "participantPropertyReferences"
                ],
                "properties": {
                  "profileTypeName": {
                    "type": "string",
                    "description": "Profile type name."
                  },
                  "participantPropertyReferences": {
                    "type": "array",
                    "items": {
                      "required": [
                        "sourcePropertyName",
                        "targetPropertyName"
                      ],
                      "properties": {
                        "sourcePropertyName": {
                          "type": "string",
                          "description": "The source property that maps to the target property."
                        },
                        "targetPropertyName": {
                          "type": "string",
                          "description": "The target property that maps to the source property."
                        }
                      },
                      "description": "The participant property reference."
                    },
                    "description": "The property references."
                  },
                  "participantName": {
                    "type": "string",
                    "description": "Participant name."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized descriptions."
                  },
                  "role": {
                    "type": "string",
                    "description": "The role that the participant is playing in the interaction."
                  }
                },
                "description": "Describes a profile type participating in an interaction."
              },
              "description": "Profiles that participated in the interaction."
            },
            "primaryParticipantProfilePropertyName": {
              "type": "string",
              "description": "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
            },
            "dataSourcePrecedenceRules": {
              "type": "array",
              "items": {
                "properties": {
                  "dataSource": {
                    "x-ms-client-flatten": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The data source name"
                      },
                      "dataSourceType": {
                        "type": "string",
                        "enum": [
                          "Connector",
                          "LinkInteraction",
                          "SystemDefault"
                        ],
                        "x-ms-enum": {
                          "name": "DataSourceType",
                          "modelAsString": true
                        },
                        "readOnly": true,
                        "description": "The data source type."
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "None",
                          "Active",
                          "Deleted"
                        ],
                        "x-ms-enum": {
                          "name": "Status",
                          "modelAsString": true
                        },
                        "readOnly": true,
                        "description": "The data source status."
                      },
                      "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The data source ID."
                      },
                      "dataSourceReferenceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The data source reference id."
                      }
                    },
                    "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                  },
                  "precedence": {
                    "type": "integer",
                    "description": "the precedence value."
                  }
                },
                "description": "The data source precedence is a way to know the precedence of each data source."
              },
              "readOnly": true,
              "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
            },
            "defaultDataSource": {
              "x-ms-client-flatten": true,
              "description": "Default data source is specifically used in cases where data source is not specified in an instance.",
              "properties": {
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The data source name"
                },
                "dataSourceType": {
                  "type": "string",
                  "enum": [
                    "Connector",
                    "LinkInteraction",
                    "SystemDefault"
                  ],
                  "x-ms-enum": {
                    "name": "DataSourceType",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The data source type."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Active",
                    "Deleted"
                  ],
                  "x-ms-enum": {
                    "name": "Status",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The data source status."
                },
                "id": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "The data source ID."
                },
                "dataSourceReferenceId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The data source reference id."
                }
              }
            },
            "isActivity": {
              "type": "boolean",
              "description": "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
            }
          }
        }
      }
    },
    "InteractionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The interaction resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The Interaction Type Definition",
                "properties": {
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": "The attributes for the Type."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized descriptions for the property."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display names for the property."
                  },
                  "localizedAttributes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "description": "Any custom localized attributes for the Type."
                  },
                  "smallImage": {
                    "type": "string",
                    "description": "Small Image associated with the Property or EntityType."
                  },
                  "mediumImage": {
                    "type": "string",
                    "description": "Medium Image associated with the Property or EntityType."
                  },
                  "largeImage": {
                    "type": "string",
                    "description": "Large Image associated with the Property or EntityType."
                  },
                  "apiEntitySetName": {
                    "type": "string",
                    "description": "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
                  },
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Profile",
                      "Interaction",
                      "Relationship"
                    ],
                    "x-ms-enum": {
                      "name": "EntityTypes",
                      "modelAsString": false
                    },
                    "description": "Type of entity."
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "required": [
                        "fieldName",
                        "fieldType"
                      ],
                      "properties": {
                        "arrayValueSeparator": {
                          "type": "string",
                          "description": "Array value separator for properties with isArray set."
                        },
                        "enumValidValues": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "value": {
                                "type": "integer",
                                "description": "The integer value of the enum member."
                              },
                              "localizedValueNames": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Localized names of the enum member."
                              }
                            },
                            "description": "Valid enum values in case of an enum property."
                          },
                          "description": "Describes valid values for an enum property."
                        },
                        "fieldName": {
                          "type": "string",
                          "description": "Name of the property."
                        },
                        "fieldType": {
                          "type": "string",
                          "description": "Type of the property."
                        },
                        "isArray": {
                          "type": "boolean",
                          "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                        },
                        "isEnum": {
                          "type": "boolean",
                          "description": "Indicates if the property is an enum."
                        },
                        "isFlagEnum": {
                          "type": "boolean",
                          "description": "Indicates if the property is an flag enum."
                        },
                        "isImage": {
                          "type": "boolean",
                          "description": "Whether the property is an Image."
                        },
                        "isLocalizedString": {
                          "type": "boolean",
                          "description": "Whether the property is a localized string."
                        },
                        "isName": {
                          "type": "boolean",
                          "description": "Whether the property is a name or a part of name."
                        },
                        "isRequired": {
                          "type": "boolean",
                          "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                        },
                        "propertyId": {
                          "type": "string",
                          "description": "The ID associated with the property."
                        },
                        "schemaItemPropLink": {
                          "type": "string",
                          "description": "URL encoded schema.org item prop link for the property."
                        },
                        "maxLength": {
                          "type": "integer",
                          "description": "Max length of string. Used only if type is string."
                        },
                        "isAvailableInGraph": {
                          "type": "boolean",
                          "description": "Whether property is available in graph or not."
                        },
                        "dataSourcePrecedenceRules": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "dataSource": {
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The data source name"
                                  },
                                  "dataSourceType": {
                                    "type": "string",
                                    "enum": [
                                      "Connector",
                                      "LinkInteraction",
                                      "SystemDefault"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataSourceType",
                                      "modelAsString": true
                                    },
                                    "readOnly": true,
                                    "description": "The data source type."
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "Active",
                                      "Deleted"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Status",
                                      "modelAsString": true
                                    },
                                    "readOnly": true,
                                    "description": "The data source status."
                                  },
                                  "id": {
                                    "type": "integer",
                                    "readOnly": true,
                                    "description": "The data source ID."
                                  },
                                  "dataSourceReferenceId": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The data source reference id."
                                  }
                                },
                                "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                              },
                              "precedence": {
                                "type": "integer",
                                "description": "the precedence value."
                              }
                            },
                            "description": "The data source precedence is a way to know the precedence of each data source."
                          },
                          "readOnly": true,
                          "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                        }
                      },
                      "description": "Property definition."
                    },
                    "description": "The properties of the Profile."
                  },
                  "instancesCount": {
                    "type": "integer",
                    "description": "The instance count."
                  },
                  "lastChangedUtc": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The last changed time for the type definition."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "schemaItemTypeLink": {
                    "type": "string",
                    "description": "The schema org link. This helps ACI identify and suggest semantic models."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "timestampFieldName": {
                    "type": "string",
                    "description": "The timestamp property name. Represents the time when the interaction or profile update happened."
                  },
                  "typeName": {
                    "type": "string",
                    "description": "The name of the entity."
                  },
                  "idPropertyNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The id property names. Properties which uniquely identify an interaction instance."
                  },
                  "participantProfiles": {
                    "type": "array",
                    "items": {
                      "required": [
                        "participantName",
                        "profileTypeName",
                        "participantPropertyReferences"
                      ],
                      "properties": {
                        "profileTypeName": {
                          "type": "string",
                          "description": "Profile type name."
                        },
                        "participantPropertyReferences": {
                          "type": "array",
                          "items": {
                            "required": [
                              "sourcePropertyName",
                              "targetPropertyName"
                            ],
                            "properties": {
                              "sourcePropertyName": {
                                "type": "string",
                                "description": "The source property that maps to the target property."
                              },
                              "targetPropertyName": {
                                "type": "string",
                                "description": "The target property that maps to the source property."
                              }
                            },
                            "description": "The participant property reference."
                          },
                          "description": "The property references."
                        },
                        "participantName": {
                          "type": "string",
                          "description": "Participant name."
                        },
                        "displayName": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized display name."
                        },
                        "description": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized descriptions."
                        },
                        "role": {
                          "type": "string",
                          "description": "The role that the participant is playing in the interaction."
                        }
                      },
                      "description": "Describes a profile type participating in an interaction."
                    },
                    "description": "Profiles that participated in the interaction."
                  },
                  "primaryParticipantProfilePropertyName": {
                    "type": "string",
                    "description": "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
                  },
                  "dataSourcePrecedenceRules": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "dataSource": {
                          "x-ms-client-flatten": true,
                          "properties": {
                            "name": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source name"
                            },
                            "dataSourceType": {
                              "type": "string",
                              "enum": [
                                "Connector",
                                "LinkInteraction",
                                "SystemDefault"
                              ],
                              "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source type."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "None",
                                "Active",
                                "Deleted"
                              ],
                              "x-ms-enum": {
                                "name": "Status",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source status."
                            },
                            "id": {
                              "type": "integer",
                              "readOnly": true,
                              "description": "The data source ID."
                            },
                            "dataSourceReferenceId": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source reference id."
                            }
                          },
                          "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                        },
                        "precedence": {
                          "type": "integer",
                          "description": "the precedence value."
                        }
                      },
                      "description": "The data source precedence is a way to know the precedence of each data source."
                    },
                    "readOnly": true,
                    "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                  },
                  "defaultDataSource": {
                    "x-ms-client-flatten": true,
                    "description": "Default data source is specifically used in cases where data source is not specified in an instance.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The data source name"
                      },
                      "dataSourceType": {
                        "type": "string",
                        "enum": [
                          "Connector",
                          "LinkInteraction",
                          "SystemDefault"
                        ],
                        "x-ms-enum": {
                          "name": "DataSourceType",
                          "modelAsString": true
                        },
                        "readOnly": true,
                        "description": "The data source type."
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "None",
                          "Active",
                          "Deleted"
                        ],
                        "x-ms-enum": {
                          "name": "Status",
                          "modelAsString": true
                        },
                        "readOnly": true,
                        "description": "The data source status."
                      },
                      "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The data source ID."
                      },
                      "dataSourceReferenceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The data source reference id."
                      }
                    }
                  },
                  "isActivity": {
                    "type": "boolean",
                    "description": "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
                  }
                }
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list interaction operation."
    },
    "KpiResourceFormat": {
      "description": "The KPI resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "required": [
            "entityType",
            "entityTypeName",
            "calculationWindow",
            "function",
            "expression"
          ],
          "properties": {
            "entityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityTypes",
                "modelAsString": false
              },
              "description": "The mapping entity type."
            },
            "entityTypeName": {
              "type": "string",
              "description": "The mapping entity name."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "kpiName": {
              "type": "string",
              "readOnly": true,
              "description": "The KPI name."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display name for the KPI."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized description for the KPI."
            },
            "calculationWindow": {
              "type": "string",
              "enum": [
                "Lifetime",
                "Hour",
                "Day",
                "Week",
                "Month"
              ],
              "x-ms-enum": {
                "name": "CalculationWindowTypes",
                "modelAsString": false
              },
              "description": "The calculation window."
            },
            "calculationWindowFieldName": {
              "type": "string",
              "description": "Name of calculation window field."
            },
            "function": {
              "type": "string",
              "enum": [
                "Sum",
                "Avg",
                "Min",
                "Max",
                "Last",
                "Count",
                "None",
                "CountDistinct"
              ],
              "x-ms-enum": {
                "name": "KpiFunctions",
                "modelAsString": false
              },
              "description": "The computation function for the KPI."
            },
            "expression": {
              "type": "string",
              "description": "The computation expression for the KPI."
            },
            "unit": {
              "type": "string",
              "description": "The unit of measurement for the KPI."
            },
            "filter": {
              "type": "string",
              "description": "The filter expression for the KPI."
            },
            "groupBy": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "the group by properties for the KPI."
            },
            "groupByMetadata": {
              "type": "array",
              "readOnly": true,
              "items": {
                "properties": {
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The display name."
                  },
                  "fieldName": {
                    "type": "string",
                    "description": "The name of the field."
                  },
                  "fieldType": {
                    "type": "string",
                    "description": "The type of the field."
                  }
                },
                "description": "The KPI GroupBy field metadata."
              },
              "description": "The KPI GroupByMetadata."
            },
            "participantProfilesMetadata": {
              "type": "array",
              "readOnly": true,
              "items": {
                "required": [
                  "typeName"
                ],
                "properties": {
                  "typeName": {
                    "type": "string",
                    "description": "Name of the type."
                  }
                },
                "description": "The KPI participant profile metadata."
              },
              "description": "The participant profiles."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "thresHolds": {
              "description": "The KPI thresholds.",
              "properties": {
                "lowerLimit": {
                  "type": "number",
                  "format": "decimal",
                  "description": "The lower threshold limit."
                },
                "upperLimit": {
                  "type": "number",
                  "format": "decimal",
                  "description": "The upper threshold limit."
                },
                "increasingKpi": {
                  "type": "boolean",
                  "description": "Whether or not the KPI is an increasing KPI."
                }
              },
              "required": [
                "lowerLimit",
                "upperLimit",
                "increasingKpi"
              ]
            },
            "aliases": {
              "type": "array",
              "items": {
                "required": [
                  "aliasName",
                  "expression"
                ],
                "properties": {
                  "aliasName": {
                    "type": "string",
                    "description": "KPI alias name."
                  },
                  "expression": {
                    "type": "string",
                    "description": "The expression."
                  }
                },
                "description": "The KPI alias."
              },
              "description": "The aliases."
            },
            "extracts": {
              "type": "array",
              "items": {
                "required": [
                  "extractName",
                  "expression"
                ],
                "properties": {
                  "extractName": {
                    "type": "string",
                    "description": "KPI extract name."
                  },
                  "expression": {
                    "type": "string",
                    "description": "The expression."
                  }
                },
                "description": "The KPI extract."
              },
              "description": "The KPI extracts."
            }
          },
          "description": "Defines the KPI Threshold limits.",
          "x-ms-client-flatten": true
        }
      }
    },
    "KpiListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The KPI resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "required": [
                  "entityType",
                  "entityTypeName",
                  "calculationWindow",
                  "function",
                  "expression"
                ],
                "properties": {
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Profile",
                      "Interaction",
                      "Relationship"
                    ],
                    "x-ms-enum": {
                      "name": "EntityTypes",
                      "modelAsString": false
                    },
                    "description": "The mapping entity type."
                  },
                  "entityTypeName": {
                    "type": "string",
                    "description": "The mapping entity name."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "kpiName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The KPI name."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name for the KPI."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized description for the KPI."
                  },
                  "calculationWindow": {
                    "type": "string",
                    "enum": [
                      "Lifetime",
                      "Hour",
                      "Day",
                      "Week",
                      "Month"
                    ],
                    "x-ms-enum": {
                      "name": "CalculationWindowTypes",
                      "modelAsString": false
                    },
                    "description": "The calculation window."
                  },
                  "calculationWindowFieldName": {
                    "type": "string",
                    "description": "Name of calculation window field."
                  },
                  "function": {
                    "type": "string",
                    "enum": [
                      "Sum",
                      "Avg",
                      "Min",
                      "Max",
                      "Last",
                      "Count",
                      "None",
                      "CountDistinct"
                    ],
                    "x-ms-enum": {
                      "name": "KpiFunctions",
                      "modelAsString": false
                    },
                    "description": "The computation function for the KPI."
                  },
                  "expression": {
                    "type": "string",
                    "description": "The computation expression for the KPI."
                  },
                  "unit": {
                    "type": "string",
                    "description": "The unit of measurement for the KPI."
                  },
                  "filter": {
                    "type": "string",
                    "description": "The filter expression for the KPI."
                  },
                  "groupBy": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "the group by properties for the KPI."
                  },
                  "groupByMetadata": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "properties": {
                        "displayName": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The display name."
                        },
                        "fieldName": {
                          "type": "string",
                          "description": "The name of the field."
                        },
                        "fieldType": {
                          "type": "string",
                          "description": "The type of the field."
                        }
                      },
                      "description": "The KPI GroupBy field metadata."
                    },
                    "description": "The KPI GroupByMetadata."
                  },
                  "participantProfilesMetadata": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "required": [
                        "typeName"
                      ],
                      "properties": {
                        "typeName": {
                          "type": "string",
                          "description": "Name of the type."
                        }
                      },
                      "description": "The KPI participant profile metadata."
                    },
                    "description": "The participant profiles."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "thresHolds": {
                    "description": "The KPI thresholds.",
                    "properties": {
                      "lowerLimit": {
                        "type": "number",
                        "format": "decimal",
                        "description": "The lower threshold limit."
                      },
                      "upperLimit": {
                        "type": "number",
                        "format": "decimal",
                        "description": "The upper threshold limit."
                      },
                      "increasingKpi": {
                        "type": "boolean",
                        "description": "Whether or not the KPI is an increasing KPI."
                      }
                    },
                    "required": [
                      "lowerLimit",
                      "upperLimit",
                      "increasingKpi"
                    ]
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "required": [
                        "aliasName",
                        "expression"
                      ],
                      "properties": {
                        "aliasName": {
                          "type": "string",
                          "description": "KPI alias name."
                        },
                        "expression": {
                          "type": "string",
                          "description": "The expression."
                        }
                      },
                      "description": "The KPI alias."
                    },
                    "description": "The aliases."
                  },
                  "extracts": {
                    "type": "array",
                    "items": {
                      "required": [
                        "extractName",
                        "expression"
                      ],
                      "properties": {
                        "extractName": {
                          "type": "string",
                          "description": "KPI extract name."
                        },
                        "expression": {
                          "type": "string",
                          "description": "The expression."
                        }
                      },
                      "description": "The KPI extract."
                    },
                    "description": "The KPI extracts."
                  }
                },
                "description": "Defines the KPI Threshold limits.",
                "x-ms-client-flatten": true
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list KPI operation."
    },
    "EnrichingKpi": {
      "allOf": [
        {
          "required": [
            "entityType",
            "entityTypeName",
            "calculationWindow",
            "function",
            "expression"
          ],
          "properties": {
            "entityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityTypes",
                "modelAsString": false
              },
              "description": "The mapping entity type."
            },
            "entityTypeName": {
              "type": "string",
              "description": "The mapping entity name."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "kpiName": {
              "type": "string",
              "readOnly": true,
              "description": "The KPI name."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display name for the KPI."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized description for the KPI."
            },
            "calculationWindow": {
              "type": "string",
              "enum": [
                "Lifetime",
                "Hour",
                "Day",
                "Week",
                "Month"
              ],
              "x-ms-enum": {
                "name": "CalculationWindowTypes",
                "modelAsString": false
              },
              "description": "The calculation window."
            },
            "calculationWindowFieldName": {
              "type": "string",
              "description": "Name of calculation window field."
            },
            "function": {
              "type": "string",
              "enum": [
                "Sum",
                "Avg",
                "Min",
                "Max",
                "Last",
                "Count",
                "None",
                "CountDistinct"
              ],
              "x-ms-enum": {
                "name": "KpiFunctions",
                "modelAsString": false
              },
              "description": "The computation function for the KPI."
            },
            "expression": {
              "type": "string",
              "description": "The computation expression for the KPI."
            },
            "unit": {
              "type": "string",
              "description": "The unit of measurement for the KPI."
            },
            "filter": {
              "type": "string",
              "description": "The filter expression for the KPI."
            },
            "groupBy": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "the group by properties for the KPI."
            },
            "groupByMetadata": {
              "type": "array",
              "readOnly": true,
              "items": {
                "properties": {
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The display name."
                  },
                  "fieldName": {
                    "type": "string",
                    "description": "The name of the field."
                  },
                  "fieldType": {
                    "type": "string",
                    "description": "The type of the field."
                  }
                },
                "description": "The KPI GroupBy field metadata."
              },
              "description": "The KPI GroupByMetadata."
            },
            "participantProfilesMetadata": {
              "type": "array",
              "readOnly": true,
              "items": {
                "required": [
                  "typeName"
                ],
                "properties": {
                  "typeName": {
                    "type": "string",
                    "description": "Name of the type."
                  }
                },
                "description": "The KPI participant profile metadata."
              },
              "description": "The participant profiles."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "thresHolds": {
              "description": "The KPI thresholds.",
              "properties": {
                "lowerLimit": {
                  "type": "number",
                  "format": "decimal",
                  "description": "The lower threshold limit."
                },
                "upperLimit": {
                  "type": "number",
                  "format": "decimal",
                  "description": "The upper threshold limit."
                },
                "increasingKpi": {
                  "type": "boolean",
                  "description": "Whether or not the KPI is an increasing KPI."
                }
              },
              "required": [
                "lowerLimit",
                "upperLimit",
                "increasingKpi"
              ]
            },
            "aliases": {
              "type": "array",
              "items": {
                "required": [
                  "aliasName",
                  "expression"
                ],
                "properties": {
                  "aliasName": {
                    "type": "string",
                    "description": "KPI alias name."
                  },
                  "expression": {
                    "type": "string",
                    "description": "The expression."
                  }
                },
                "description": "The KPI alias."
              },
              "description": "The aliases."
            },
            "extracts": {
              "type": "array",
              "items": {
                "required": [
                  "extractName",
                  "expression"
                ],
                "properties": {
                  "extractName": {
                    "type": "string",
                    "description": "KPI extract name."
                  },
                  "expression": {
                    "type": "string",
                    "description": "The expression."
                  }
                },
                "description": "The KPI extract."
              },
              "description": "The KPI extracts."
            }
          },
          "description": "Defines the KPI Threshold limits."
        }
      ],
      "description": "The enriching KPI definition."
    },
    "ConnectorResourceFormat": {
      "description": "The connector resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "connectorType",
            "connectorProperties"
          ],
          "properties": {
            "connectorId": {
              "type": "integer",
              "readOnly": true,
              "description": "ID of the connector."
            },
            "connectorName": {
              "type": "string",
              "description": "Name of the connector."
            },
            "connectorType": {
              "description": "Type of connector.",
              "type": "string",
              "enum": [
                "None",
                "CRM",
                "AzureBlob",
                "Salesforce",
                "ExchangeOnline",
                "Outbound"
              ],
              "x-ms-enum": {
                "name": "ConnectorTypes",
                "modelAsString": true
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the connector."
            },
            "description": {
              "type": "string",
              "description": "Description of the connector."
            },
            "connectorProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              },
              "description": "The connector properties."
            },
            "created": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The created time."
            },
            "lastModified": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The last modified time."
            },
            "state": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "Creating",
                "Created",
                "Ready",
                "Expiring",
                "Deleting",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ConnectorStates",
                "modelAsString": false
              },
              "description": "State of connector."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "isInternal": {
              "type": "boolean",
              "description": "If this is an internal connector."
            }
          },
          "description": "Properties of connector."
        }
      }
    },
    "ConnectorListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The connector resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "connectorType",
                  "connectorProperties"
                ],
                "properties": {
                  "connectorId": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "ID of the connector."
                  },
                  "connectorName": {
                    "type": "string",
                    "description": "Name of the connector."
                  },
                  "connectorType": {
                    "description": "Type of connector.",
                    "type": "string",
                    "enum": [
                      "None",
                      "CRM",
                      "AzureBlob",
                      "Salesforce",
                      "ExchangeOnline",
                      "Outbound"
                    ],
                    "x-ms-enum": {
                      "name": "ConnectorTypes",
                      "modelAsString": true
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the connector."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the connector."
                  },
                  "connectorProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    },
                    "description": "The connector properties."
                  },
                  "created": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The created time."
                  },
                  "lastModified": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The last modified time."
                  },
                  "state": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Creating",
                      "Created",
                      "Ready",
                      "Expiring",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ConnectorStates",
                      "modelAsString": false
                    },
                    "description": "State of connector."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "isInternal": {
                    "type": "boolean",
                    "description": "If this is an internal connector."
                  }
                },
                "description": "Properties of connector."
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list connector operation."
    },
    "ConnectorMappingResourceFormat": {
      "description": "The connector mapping resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "entityType",
            "entityTypeName",
            "mappingProperties"
          ],
          "properties": {
            "connectorName": {
              "type": "string",
              "readOnly": true,
              "description": "The connector name."
            },
            "connectorType": {
              "description": "Type of connector.",
              "type": "string",
              "enum": [
                "None",
                "CRM",
                "AzureBlob",
                "Salesforce",
                "ExchangeOnline",
                "Outbound"
              ],
              "x-ms-enum": {
                "name": "ConnectorTypes",
                "modelAsString": true
              }
            },
            "created": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The created time."
            },
            "lastModified": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The last modified time."
            },
            "entityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityTypes",
                "modelAsString": false
              },
              "description": "Defines which entity type the file should map to."
            },
            "entityTypeName": {
              "type": "string",
              "description": "The mapping entity name."
            },
            "connectorMappingName": {
              "type": "string",
              "readOnly": true,
              "description": "The connector mapping name"
            },
            "displayName": {
              "type": "string",
              "description": "Display name for the connector mapping."
            },
            "description": {
              "type": "string",
              "description": "The description of the connector mapping."
            },
            "dataFormatId": {
              "type": "string",
              "readOnly": true,
              "description": "The DataFormat ID."
            },
            "mappingProperties": {
              "description": "The properties of the mapping.",
              "required": [
                "availability",
                "completeOperation",
                "errorManagement",
                "format",
                "structure"
              ],
              "properties": {
                "folderPath": {
                  "type": "string",
                  "description": "The folder path for the mapping."
                },
                "fileFilter": {
                  "type": "string",
                  "description": "The file filter for the mapping."
                },
                "hasHeader": {
                  "type": "boolean",
                  "description": "If the file contains a header or not."
                },
                "errorManagement": {
                  "description": "The error management setting for the mapping.",
                  "required": [
                    "errorManagementType"
                  ],
                  "properties": {
                    "errorManagementType": {
                      "type": "string",
                      "enum": [
                        "RejectAndContinue",
                        "StopImport",
                        "RejectUntilLimit"
                      ],
                      "x-ms-enum": {
                        "name": "ErrorManagementTypes",
                        "modelAsString": false
                      },
                      "description": "The type of error management to use for the mapping."
                    },
                    "errorLimit": {
                      "type": "integer",
                      "description": "The error limit allowed while importing data."
                    }
                  }
                },
                "format": {
                  "description": "The format of mapping property.",
                  "required": [
                    "formatType"
                  ],
                  "properties": {
                    "formatType": {
                      "type": "string",
                      "enum": [
                        "TextFormat"
                      ],
                      "x-ms-enum": {
                        "name": "FormatTypes",
                        "modelAsString": false
                      },
                      "description": "The type mapping format."
                    },
                    "columnDelimiter": {
                      "type": "string",
                      "description": "The character that signifies a break between columns."
                    },
                    "acceptLanguage": {
                      "type": "string",
                      "description": "The oData language."
                    },
                    "quoteCharacter": {
                      "type": "string",
                      "description": "Quote character, used to indicate enquoted fields."
                    },
                    "quoteEscapeCharacter": {
                      "type": "string",
                      "description": "Escape character for quotes, can be the same as the quoteCharacter."
                    },
                    "arraySeparator": {
                      "type": "string",
                      "description": "Character separating array elements."
                    }
                  }
                },
                "availability": {
                  "description": "The availability of mapping property.",
                  "required": [
                    "interval"
                  ],
                  "properties": {
                    "frequency": {
                      "type": "string",
                      "enum": [
                        "Minute",
                        "Hour",
                        "Day",
                        "Week",
                        "Month"
                      ],
                      "x-ms-enum": {
                        "name": "FrequencyTypes",
                        "modelAsString": false
                      },
                      "description": "The frequency to update."
                    },
                    "interval": {
                      "type": "integer",
                      "description": "The interval of the given frequency to use."
                    }
                  }
                },
                "structure": {
                  "type": "array",
                  "items": {
                    "required": [
                      "propertyName",
                      "columnName"
                    ],
                    "properties": {
                      "propertyName": {
                        "type": "string",
                        "description": "The property name of the mapping entity."
                      },
                      "columnName": {
                        "type": "string",
                        "description": "The column name of the import file."
                      },
                      "customFormatSpecifier": {
                        "type": "string",
                        "description": "Custom format specifier for input parsing."
                      },
                      "isEncrypted": {
                        "type": "boolean",
                        "description": "Indicates if the column is encrypted."
                      }
                    },
                    "description": "Connector mapping property structure."
                  },
                  "description": "Ingestion mapping information at property level."
                },
                "completeOperation": {
                  "description": "The operation after import is done.",
                  "properties": {
                    "completionOperationType": {
                      "type": "string",
                      "enum": [
                        "DoNothing",
                        "DeleteFile",
                        "MoveFile"
                      ],
                      "x-ms-enum": {
                        "name": "CompletionOperationTypes",
                        "modelAsString": false
                      },
                      "description": "The type of completion operation."
                    },
                    "destinationFolder": {
                      "type": "string",
                      "description": "The destination folder where files will be moved to once the import is done."
                    }
                  }
                }
              }
            },
            "nextRunTime": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The next run time based on customer's settings."
            },
            "runId": {
              "type": "string",
              "readOnly": true,
              "description": "The RunId."
            },
            "state": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "Creating",
                "Created",
                "Failed",
                "Ready",
                "Running",
                "Stopped",
                "Expiring"
              ],
              "x-ms-enum": {
                "name": "ConnectorMappingStates",
                "modelAsString": false
              },
              "description": "State of connector mapping."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            }
          },
          "description": "The connector mapping definition."
        }
      }
    },
    "ConnectorMappingListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The connector mapping resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "entityType",
                  "entityTypeName",
                  "mappingProperties"
                ],
                "properties": {
                  "connectorName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The connector name."
                  },
                  "connectorType": {
                    "description": "Type of connector.",
                    "type": "string",
                    "enum": [
                      "None",
                      "CRM",
                      "AzureBlob",
                      "Salesforce",
                      "ExchangeOnline",
                      "Outbound"
                    ],
                    "x-ms-enum": {
                      "name": "ConnectorTypes",
                      "modelAsString": true
                    }
                  },
                  "created": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The created time."
                  },
                  "lastModified": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The last modified time."
                  },
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Profile",
                      "Interaction",
                      "Relationship"
                    ],
                    "x-ms-enum": {
                      "name": "EntityTypes",
                      "modelAsString": false
                    },
                    "description": "Defines which entity type the file should map to."
                  },
                  "entityTypeName": {
                    "type": "string",
                    "description": "The mapping entity name."
                  },
                  "connectorMappingName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The connector mapping name"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name for the connector mapping."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the connector mapping."
                  },
                  "dataFormatId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The DataFormat ID."
                  },
                  "mappingProperties": {
                    "description": "The properties of the mapping.",
                    "required": [
                      "availability",
                      "completeOperation",
                      "errorManagement",
                      "format",
                      "structure"
                    ],
                    "properties": {
                      "folderPath": {
                        "type": "string",
                        "description": "The folder path for the mapping."
                      },
                      "fileFilter": {
                        "type": "string",
                        "description": "The file filter for the mapping."
                      },
                      "hasHeader": {
                        "type": "boolean",
                        "description": "If the file contains a header or not."
                      },
                      "errorManagement": {
                        "description": "The error management setting for the mapping.",
                        "required": [
                          "errorManagementType"
                        ],
                        "properties": {
                          "errorManagementType": {
                            "type": "string",
                            "enum": [
                              "RejectAndContinue",
                              "StopImport",
                              "RejectUntilLimit"
                            ],
                            "x-ms-enum": {
                              "name": "ErrorManagementTypes",
                              "modelAsString": false
                            },
                            "description": "The type of error management to use for the mapping."
                          },
                          "errorLimit": {
                            "type": "integer",
                            "description": "The error limit allowed while importing data."
                          }
                        }
                      },
                      "format": {
                        "description": "The format of mapping property.",
                        "required": [
                          "formatType"
                        ],
                        "properties": {
                          "formatType": {
                            "type": "string",
                            "enum": [
                              "TextFormat"
                            ],
                            "x-ms-enum": {
                              "name": "FormatTypes",
                              "modelAsString": false
                            },
                            "description": "The type mapping format."
                          },
                          "columnDelimiter": {
                            "type": "string",
                            "description": "The character that signifies a break between columns."
                          },
                          "acceptLanguage": {
                            "type": "string",
                            "description": "The oData language."
                          },
                          "quoteCharacter": {
                            "type": "string",
                            "description": "Quote character, used to indicate enquoted fields."
                          },
                          "quoteEscapeCharacter": {
                            "type": "string",
                            "description": "Escape character for quotes, can be the same as the quoteCharacter."
                          },
                          "arraySeparator": {
                            "type": "string",
                            "description": "Character separating array elements."
                          }
                        }
                      },
                      "availability": {
                        "description": "The availability of mapping property.",
                        "required": [
                          "interval"
                        ],
                        "properties": {
                          "frequency": {
                            "type": "string",
                            "enum": [
                              "Minute",
                              "Hour",
                              "Day",
                              "Week",
                              "Month"
                            ],
                            "x-ms-enum": {
                              "name": "FrequencyTypes",
                              "modelAsString": false
                            },
                            "description": "The frequency to update."
                          },
                          "interval": {
                            "type": "integer",
                            "description": "The interval of the given frequency to use."
                          }
                        }
                      },
                      "structure": {
                        "type": "array",
                        "items": {
                          "required": [
                            "propertyName",
                            "columnName"
                          ],
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "The property name of the mapping entity."
                            },
                            "columnName": {
                              "type": "string",
                              "description": "The column name of the import file."
                            },
                            "customFormatSpecifier": {
                              "type": "string",
                              "description": "Custom format specifier for input parsing."
                            },
                            "isEncrypted": {
                              "type": "boolean",
                              "description": "Indicates if the column is encrypted."
                            }
                          },
                          "description": "Connector mapping property structure."
                        },
                        "description": "Ingestion mapping information at property level."
                      },
                      "completeOperation": {
                        "description": "The operation after import is done.",
                        "properties": {
                          "completionOperationType": {
                            "type": "string",
                            "enum": [
                              "DoNothing",
                              "DeleteFile",
                              "MoveFile"
                            ],
                            "x-ms-enum": {
                              "name": "CompletionOperationTypes",
                              "modelAsString": false
                            },
                            "description": "The type of completion operation."
                          },
                          "destinationFolder": {
                            "type": "string",
                            "description": "The destination folder where files will be moved to once the import is done."
                          }
                        }
                      }
                    }
                  },
                  "nextRunTime": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The next run time based on customer's settings."
                  },
                  "runId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The RunId."
                  },
                  "state": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Creating",
                      "Created",
                      "Failed",
                      "Ready",
                      "Running",
                      "Stopped",
                      "Expiring"
                    ],
                    "x-ms-enum": {
                      "name": "ConnectorMappingStates",
                      "modelAsString": false
                    },
                    "description": "State of connector mapping."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  }
                },
                "description": "The connector mapping definition."
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list connector mapping operation."
    },
    "AuthorizationPolicyResourceFormat": {
      "description": "The authorization policy resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "permissions"
          ],
          "properties": {
            "policyName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the policy."
            },
            "permissions": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "Read",
                  "Write",
                  "Manage"
                ],
                "x-ms-enum": {
                  "name": "PermissionTypes",
                  "modelAsString": false
                },
                "description": "Supported permission types."
              },
              "description": "The permissions associated with the policy."
            },
            "primaryKey": {
              "type": "string",
              "description": "Primary key associated with the policy."
            },
            "secondaryKey": {
              "type": "string",
              "description": "Secondary key associated with the policy."
            }
          },
          "description": "The authorization policy."
        }
      }
    },
    "AuthorizationPolicyListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The authorization policy resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "permissions"
                ],
                "properties": {
                  "policyName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Name of the policy."
                  },
                  "permissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "Read",
                        "Write",
                        "Manage"
                      ],
                      "x-ms-enum": {
                        "name": "PermissionTypes",
                        "modelAsString": false
                      },
                      "description": "Supported permission types."
                    },
                    "description": "The permissions associated with the policy."
                  },
                  "primaryKey": {
                    "type": "string",
                    "description": "Primary key associated with the policy."
                  },
                  "secondaryKey": {
                    "type": "string",
                    "description": "Secondary key associated with the policy."
                  }
                },
                "description": "The authorization policy."
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list authorization policy operation."
    },
    "LinkResourceFormat": {
      "description": "The link resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "sourceEntityType",
            "targetEntityType",
            "sourceEntityTypeName",
            "targetEntityTypeName",
            "participantPropertyReferences"
          ],
          "properties": {
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "linkName": {
              "type": "string",
              "readOnly": true,
              "description": "The link name."
            },
            "sourceEntityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityType",
                "modelAsString": false
              },
              "description": "Type of source entity."
            },
            "targetEntityType": {
              "type": "string",
              "enum": [
                "None",
                "Profile",
                "Interaction",
                "Relationship"
              ],
              "x-ms-enum": {
                "name": "EntityType",
                "modelAsString": false
              },
              "description": "Type of target entity."
            },
            "sourceEntityTypeName": {
              "type": "string",
              "description": "Name of the source Entity Type."
            },
            "targetEntityTypeName": {
              "type": "string",
              "description": "Name of the target Entity Type."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display name for the Link."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized descriptions for the Link."
            },
            "mappings": {
              "type": "array",
              "items": {
                "required": [
                  "sourcePropertyName",
                  "targetPropertyName"
                ],
                "properties": {
                  "sourcePropertyName": {
                    "type": "string",
                    "description": " Property name on the source Entity Type."
                  },
                  "targetPropertyName": {
                    "type": "string",
                    "description": "Property name on the target Entity Type."
                  },
                  "linkType": {
                    "type": "string",
                    "enum": [
                      "UpdateAlways",
                      "CopyIfNull"
                    ],
                    "x-ms-enum": {
                      "name": "LinkTypes",
                      "modelAsString": false
                    },
                    "description": "Link type."
                  }
                },
                "description": "Metadata for a Link's property mapping."
              },
              "description": "The set of properties mappings between the source and target Types."
            },
            "participantPropertyReferences": {
              "type": "array",
              "items": {
                "required": [
                  "sourcePropertyName",
                  "targetPropertyName"
                ],
                "properties": {
                  "sourcePropertyName": {
                    "type": "string",
                    "description": "The source property that maps to the target property."
                  },
                  "targetPropertyName": {
                    "type": "string",
                    "description": "The target property that maps to the source property."
                  }
                },
                "description": "The participant property reference."
              },
              "description": "The properties that represent the participating profile."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "referenceOnly": {
              "type": "boolean",
              "description": "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
            },
            "operationType": {
              "type": "string",
              "enum": [
                "Upsert",
                "Delete"
              ],
              "x-ms-enum": {
                "name": "InstanceOperationType",
                "modelAsString": false
              },
              "description": "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only."
            }
          },
          "description": "The definition of Link."
        }
      }
    },
    "LinkListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The link resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "sourceEntityType",
                  "targetEntityType",
                  "sourceEntityTypeName",
                  "targetEntityTypeName",
                  "participantPropertyReferences"
                ],
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "linkName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The link name."
                  },
                  "sourceEntityType": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Profile",
                      "Interaction",
                      "Relationship"
                    ],
                    "x-ms-enum": {
                      "name": "EntityType",
                      "modelAsString": false
                    },
                    "description": "Type of source entity."
                  },
                  "targetEntityType": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Profile",
                      "Interaction",
                      "Relationship"
                    ],
                    "x-ms-enum": {
                      "name": "EntityType",
                      "modelAsString": false
                    },
                    "description": "Type of target entity."
                  },
                  "sourceEntityTypeName": {
                    "type": "string",
                    "description": "Name of the source Entity Type."
                  },
                  "targetEntityTypeName": {
                    "type": "string",
                    "description": "Name of the target Entity Type."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name for the Link."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized descriptions for the Link."
                  },
                  "mappings": {
                    "type": "array",
                    "items": {
                      "required": [
                        "sourcePropertyName",
                        "targetPropertyName"
                      ],
                      "properties": {
                        "sourcePropertyName": {
                          "type": "string",
                          "description": " Property name on the source Entity Type."
                        },
                        "targetPropertyName": {
                          "type": "string",
                          "description": "Property name on the target Entity Type."
                        },
                        "linkType": {
                          "type": "string",
                          "enum": [
                            "UpdateAlways",
                            "CopyIfNull"
                          ],
                          "x-ms-enum": {
                            "name": "LinkTypes",
                            "modelAsString": false
                          },
                          "description": "Link type."
                        }
                      },
                      "description": "Metadata for a Link's property mapping."
                    },
                    "description": "The set of properties mappings between the source and target Types."
                  },
                  "participantPropertyReferences": {
                    "type": "array",
                    "items": {
                      "required": [
                        "sourcePropertyName",
                        "targetPropertyName"
                      ],
                      "properties": {
                        "sourcePropertyName": {
                          "type": "string",
                          "description": "The source property that maps to the target property."
                        },
                        "targetPropertyName": {
                          "type": "string",
                          "description": "The target property that maps to the source property."
                        }
                      },
                      "description": "The participant property reference."
                    },
                    "description": "The properties that represent the participating profile."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "referenceOnly": {
                    "type": "boolean",
                    "description": "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
                  },
                  "operationType": {
                    "type": "string",
                    "enum": [
                      "Upsert",
                      "Delete"
                    ],
                    "x-ms-enum": {
                      "name": "InstanceOperationType",
                      "modelAsString": false
                    },
                    "description": "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only."
                  }
                },
                "description": "The definition of Link."
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list link operation."
    },
    "RelationshipResourceFormat": {
      "description": "The relationship resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "profileType",
            "relatedProfileType"
          ],
          "properties": {
            "cardinality": {
              "type": "string",
              "enum": [
                "OneToOne",
                "OneToMany",
                "ManyToMany"
              ],
              "x-ms-enum": {
                "name": "CardinalityTypes",
                "modelAsString": false
              },
              "description": "The Relationship Cardinality."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display name for the Relationship."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized descriptions for the Relationship."
            },
            "expiryDateTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The expiry date time in UTC."
            },
            "fields": {
              "type": "array",
              "items": {
                "required": [
                  "fieldName",
                  "fieldType"
                ],
                "properties": {
                  "arrayValueSeparator": {
                    "type": "string",
                    "description": "Array value separator for properties with isArray set."
                  },
                  "enumValidValues": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "The integer value of the enum member."
                        },
                        "localizedValueNames": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Localized names of the enum member."
                        }
                      },
                      "description": "Valid enum values in case of an enum property."
                    },
                    "description": "Describes valid values for an enum property."
                  },
                  "fieldName": {
                    "type": "string",
                    "description": "Name of the property."
                  },
                  "fieldType": {
                    "type": "string",
                    "description": "Type of the property."
                  },
                  "isArray": {
                    "type": "boolean",
                    "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                  },
                  "isEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an enum."
                  },
                  "isFlagEnum": {
                    "type": "boolean",
                    "description": "Indicates if the property is an flag enum."
                  },
                  "isImage": {
                    "type": "boolean",
                    "description": "Whether the property is an Image."
                  },
                  "isLocalizedString": {
                    "type": "boolean",
                    "description": "Whether the property is a localized string."
                  },
                  "isName": {
                    "type": "boolean",
                    "description": "Whether the property is a name or a part of name."
                  },
                  "isRequired": {
                    "type": "boolean",
                    "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                  },
                  "propertyId": {
                    "type": "string",
                    "description": "The ID associated with the property."
                  },
                  "schemaItemPropLink": {
                    "type": "string",
                    "description": "URL encoded schema.org item prop link for the property."
                  },
                  "maxLength": {
                    "type": "integer",
                    "description": "Max length of string. Used only if type is string."
                  },
                  "isAvailableInGraph": {
                    "type": "boolean",
                    "description": "Whether property is available in graph or not."
                  },
                  "dataSourcePrecedenceRules": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "dataSource": {
                          "x-ms-client-flatten": true,
                          "properties": {
                            "name": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source name"
                            },
                            "dataSourceType": {
                              "type": "string",
                              "enum": [
                                "Connector",
                                "LinkInteraction",
                                "SystemDefault"
                              ],
                              "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source type."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "None",
                                "Active",
                                "Deleted"
                              ],
                              "x-ms-enum": {
                                "name": "Status",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The data source status."
                            },
                            "id": {
                              "type": "integer",
                              "readOnly": true,
                              "description": "The data source ID."
                            },
                            "dataSourceReferenceId": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The data source reference id."
                            }
                          },
                          "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                        },
                        "precedence": {
                          "type": "integer",
                          "description": "the precedence value."
                        }
                      },
                      "description": "The data source precedence is a way to know the precedence of each data source."
                    },
                    "readOnly": true,
                    "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                  }
                },
                "description": "Property definition."
              },
              "description": "The properties of the Relationship."
            },
            "lookupMappings": {
              "type": "array",
              "items": {
                "required": [
                  "fieldMappings"
                ],
                "properties": {
                  "fieldMappings": {
                    "type": "array",
                    "items": {
                      "required": [
                        "profileFieldName",
                        "relatedProfileKeyProperty"
                      ],
                      "properties": {
                        "profileFieldName": {
                          "type": "string",
                          "description": "Specifies the fieldName in profile."
                        },
                        "relatedProfileKeyProperty": {
                          "type": "string",
                          "description": "Specifies the KeyProperty (from StrongId) of the related profile."
                        }
                      },
                      "description": "Map a field of profile to its corresponding StrongId in Related Profile."
                    },
                    "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well."
                  }
                },
                "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile."
              },
              "description": "Optional property to be used to map fields in profile to their strong ids in related profile."
            },
            "profileType": {
              "type": "string",
              "description": "Profile type."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "relationshipName": {
              "type": "string",
              "readOnly": true,
              "description": "The Relationship name."
            },
            "relatedProfileType": {
              "type": "string",
              "description": "Related profile being referenced."
            },
            "relationshipGuidId": {
              "type": "string",
              "readOnly": true,
              "description": "The relationship guid id."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            }
          },
          "description": "The definition of Relationship."
        }
      }
    },
    "RelationshipListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The relationship resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "profileType",
                  "relatedProfileType"
                ],
                "properties": {
                  "cardinality": {
                    "type": "string",
                    "enum": [
                      "OneToOne",
                      "OneToMany",
                      "ManyToMany"
                    ],
                    "x-ms-enum": {
                      "name": "CardinalityTypes",
                      "modelAsString": false
                    },
                    "description": "The Relationship Cardinality."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name for the Relationship."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized descriptions for the Relationship."
                  },
                  "expiryDateTimeUtc": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiry date time in UTC."
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "required": [
                        "fieldName",
                        "fieldType"
                      ],
                      "properties": {
                        "arrayValueSeparator": {
                          "type": "string",
                          "description": "Array value separator for properties with isArray set."
                        },
                        "enumValidValues": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "value": {
                                "type": "integer",
                                "description": "The integer value of the enum member."
                              },
                              "localizedValueNames": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Localized names of the enum member."
                              }
                            },
                            "description": "Valid enum values in case of an enum property."
                          },
                          "description": "Describes valid values for an enum property."
                        },
                        "fieldName": {
                          "type": "string",
                          "description": "Name of the property."
                        },
                        "fieldType": {
                          "type": "string",
                          "description": "Type of the property."
                        },
                        "isArray": {
                          "type": "boolean",
                          "description": "Indicates if the property is actually an array of the fieldType above on the data api."
                        },
                        "isEnum": {
                          "type": "boolean",
                          "description": "Indicates if the property is an enum."
                        },
                        "isFlagEnum": {
                          "type": "boolean",
                          "description": "Indicates if the property is an flag enum."
                        },
                        "isImage": {
                          "type": "boolean",
                          "description": "Whether the property is an Image."
                        },
                        "isLocalizedString": {
                          "type": "boolean",
                          "description": "Whether the property is a localized string."
                        },
                        "isName": {
                          "type": "boolean",
                          "description": "Whether the property is a name or a part of name."
                        },
                        "isRequired": {
                          "type": "boolean",
                          "description": "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
                        },
                        "propertyId": {
                          "type": "string",
                          "description": "The ID associated with the property."
                        },
                        "schemaItemPropLink": {
                          "type": "string",
                          "description": "URL encoded schema.org item prop link for the property."
                        },
                        "maxLength": {
                          "type": "integer",
                          "description": "Max length of string. Used only if type is string."
                        },
                        "isAvailableInGraph": {
                          "type": "boolean",
                          "description": "Whether property is available in graph or not."
                        },
                        "dataSourcePrecedenceRules": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "dataSource": {
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The data source name"
                                  },
                                  "dataSourceType": {
                                    "type": "string",
                                    "enum": [
                                      "Connector",
                                      "LinkInteraction",
                                      "SystemDefault"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataSourceType",
                                      "modelAsString": true
                                    },
                                    "readOnly": true,
                                    "description": "The data source type."
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "Active",
                                      "Deleted"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Status",
                                      "modelAsString": true
                                    },
                                    "readOnly": true,
                                    "description": "The data source status."
                                  },
                                  "id": {
                                    "type": "integer",
                                    "readOnly": true,
                                    "description": "The data source ID."
                                  },
                                  "dataSourceReferenceId": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The data source reference id."
                                  }
                                },
                                "description": "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
                              },
                              "precedence": {
                                "type": "integer",
                                "description": "the precedence value."
                              }
                            },
                            "description": "The data source precedence is a way to know the precedence of each data source."
                          },
                          "readOnly": true,
                          "description": "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules."
                        }
                      },
                      "description": "Property definition."
                    },
                    "description": "The properties of the Relationship."
                  },
                  "lookupMappings": {
                    "type": "array",
                    "items": {
                      "required": [
                        "fieldMappings"
                      ],
                      "properties": {
                        "fieldMappings": {
                          "type": "array",
                          "items": {
                            "required": [
                              "profileFieldName",
                              "relatedProfileKeyProperty"
                            ],
                            "properties": {
                              "profileFieldName": {
                                "type": "string",
                                "description": "Specifies the fieldName in profile."
                              },
                              "relatedProfileKeyProperty": {
                                "type": "string",
                                "description": "Specifies the KeyProperty (from StrongId) of the related profile."
                              }
                            },
                            "description": "Map a field of profile to its corresponding StrongId in Related Profile."
                          },
                          "description": "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well."
                        }
                      },
                      "description": "Maps fields in Profile to their corresponding StrongIds in Related Profile."
                    },
                    "description": "Optional property to be used to map fields in profile to their strong ids in related profile."
                  },
                  "profileType": {
                    "type": "string",
                    "description": "Profile type."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "relationshipName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The Relationship name."
                  },
                  "relatedProfileType": {
                    "type": "string",
                    "description": "Related profile being referenced."
                  },
                  "relationshipGuidId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The relationship guid id."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  }
                },
                "description": "The definition of Relationship."
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list relationship operation."
    },
    "RelationshipLinkResourceFormat": {
      "description": "The relationship link resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "interactionType",
            "profilePropertyReferences",
            "relatedProfilePropertyReferences",
            "relationshipName"
          ],
          "properties": {
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display name for the Relationship Link."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized descriptions for the Relationship Link."
            },
            "interactionType": {
              "type": "string",
              "description": "The InteractionType associated with the Relationship Link."
            },
            "linkName": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the Relationship Link."
            },
            "mappings": {
              "type": "array",
              "items": {
                "required": [
                  "interactionFieldName",
                  "relationshipFieldName"
                ],
                "properties": {
                  "interactionFieldName": {
                    "type": "string",
                    "description": "The field name on the Interaction Type."
                  },
                  "linkType": {
                    "type": "string",
                    "enum": [
                      "UpdateAlways",
                      "CopyIfNull"
                    ],
                    "x-ms-enum": {
                      "name": "LinkTypes",
                      "modelAsString": false
                    },
                    "description": "Link type."
                  },
                  "relationshipFieldName": {
                    "type": "string",
                    "description": "The field name on the Relationship metadata."
                  }
                },
                "description": "The fields mapping for Relationships."
              },
              "description": "The mappings between Interaction and Relationship fields."
            },
            "profilePropertyReferences": {
              "type": "array",
              "items": {
                "required": [
                  "interactionPropertyName",
                  "profilePropertyName"
                ],
                "properties": {
                  "interactionPropertyName": {
                    "type": "string",
                    "description": "The source interaction property that maps to the target profile property."
                  },
                  "profilePropertyName": {
                    "type": "string",
                    "description": "The target profile property that maps to the source interaction property."
                  }
                },
                "description": "The participant profile property reference."
              },
              "description": "The property references for the Profile of the Relationship."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "relatedProfilePropertyReferences": {
              "type": "array",
              "items": {
                "required": [
                  "interactionPropertyName",
                  "profilePropertyName"
                ],
                "properties": {
                  "interactionPropertyName": {
                    "type": "string",
                    "description": "The source interaction property that maps to the target profile property."
                  },
                  "profilePropertyName": {
                    "type": "string",
                    "description": "The target profile property that maps to the source interaction property."
                  }
                },
                "description": "The participant profile property reference."
              },
              "description": "The property references for the Related Profile of the Relationship."
            },
            "relationshipName": {
              "type": "string",
              "description": "The Relationship associated with the Link."
            },
            "relationshipGuidId": {
              "type": "string",
              "readOnly": true,
              "description": "The relationship guid id."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            }
          },
          "description": "The definition of relationship link."
        }
      }
    },
    "RelationshipLinkListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The relationship link resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "interactionType",
                  "profilePropertyReferences",
                  "relatedProfilePropertyReferences",
                  "relationshipName"
                ],
                "properties": {
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name for the Relationship Link."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized descriptions for the Relationship Link."
                  },
                  "interactionType": {
                    "type": "string",
                    "description": "The InteractionType associated with the Relationship Link."
                  },
                  "linkName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The name of the Relationship Link."
                  },
                  "mappings": {
                    "type": "array",
                    "items": {
                      "required": [
                        "interactionFieldName",
                        "relationshipFieldName"
                      ],
                      "properties": {
                        "interactionFieldName": {
                          "type": "string",
                          "description": "The field name on the Interaction Type."
                        },
                        "linkType": {
                          "type": "string",
                          "enum": [
                            "UpdateAlways",
                            "CopyIfNull"
                          ],
                          "x-ms-enum": {
                            "name": "LinkTypes",
                            "modelAsString": false
                          },
                          "description": "Link type."
                        },
                        "relationshipFieldName": {
                          "type": "string",
                          "description": "The field name on the Relationship metadata."
                        }
                      },
                      "description": "The fields mapping for Relationships."
                    },
                    "description": "The mappings between Interaction and Relationship fields."
                  },
                  "profilePropertyReferences": {
                    "type": "array",
                    "items": {
                      "required": [
                        "interactionPropertyName",
                        "profilePropertyName"
                      ],
                      "properties": {
                        "interactionPropertyName": {
                          "type": "string",
                          "description": "The source interaction property that maps to the target profile property."
                        },
                        "profilePropertyName": {
                          "type": "string",
                          "description": "The target profile property that maps to the source interaction property."
                        }
                      },
                      "description": "The participant profile property reference."
                    },
                    "description": "The property references for the Profile of the Relationship."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "relatedProfilePropertyReferences": {
                    "type": "array",
                    "items": {
                      "required": [
                        "interactionPropertyName",
                        "profilePropertyName"
                      ],
                      "properties": {
                        "interactionPropertyName": {
                          "type": "string",
                          "description": "The source interaction property that maps to the target profile property."
                        },
                        "profilePropertyName": {
                          "type": "string",
                          "description": "The target profile property that maps to the source interaction property."
                        }
                      },
                      "description": "The participant profile property reference."
                    },
                    "description": "The property references for the Related Profile of the Relationship."
                  },
                  "relationshipName": {
                    "type": "string",
                    "description": "The Relationship associated with the Link."
                  },
                  "relationshipGuidId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The relationship guid id."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  }
                },
                "description": "The definition of relationship link."
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list relationship link operation."
    },
    "ViewResourceFormat": {
      "description": "The view resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "definition"
          ],
          "properties": {
            "viewName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the view."
            },
            "userId": {
              "type": "string",
              "description": "the user ID."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "the hub name."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display name for the view."
            },
            "definition": {
              "type": "string",
              "description": "View definition."
            },
            "changed": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "Date time when view was last modified."
            },
            "created": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "Date time when view was created."
            }
          },
          "description": "The view in Customer 360 web application."
        }
      }
    },
    "ViewListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The view resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "definition"
                ],
                "properties": {
                  "viewName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Name of the view."
                  },
                  "userId": {
                    "type": "string",
                    "description": "the user ID."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "the hub name."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name for the view."
                  },
                  "definition": {
                    "type": "string",
                    "description": "View definition."
                  },
                  "changed": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "Date time when view was last modified."
                  },
                  "created": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "Date time when view was created."
                  }
                },
                "description": "The view in Customer 360 web application."
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list view operation."
    },
    "WidgetTypeResourceFormat": {
      "description": "The WidgetTypeResourceFormat",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "definition"
          ],
          "properties": {
            "widgetTypeName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the widget type."
            },
            "definition": {
              "type": "string",
              "description": "Definition for widget type."
            },
            "description": {
              "type": "string",
              "description": "Description for widget type."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display name for the widget type."
            },
            "imageUrl": {
              "type": "string",
              "description": "The image URL."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "widgetVersion": {
              "type": "string",
              "description": "The widget version."
            },
            "changed": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "Date time when widget type was last modified."
            },
            "created": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "Date time when widget type was created."
            }
          },
          "description": "Definition of WidgetType."
        }
      }
    },
    "WidgetTypeListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The WidgetTypeResourceFormat",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "definition"
                ],
                "properties": {
                  "widgetTypeName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Name of the widget type."
                  },
                  "definition": {
                    "type": "string",
                    "description": "Definition for widget type."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for widget type."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display name for the widget type."
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "The image URL."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "widgetVersion": {
                    "type": "string",
                    "description": "The widget version."
                  },
                  "changed": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "Date time when widget type was last modified."
                  },
                  "created": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "Date time when widget type was created."
                  }
                },
                "description": "Definition of WidgetType."
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list widget type operation."
    },
    "RoleAssignment": {
      "description": "The Role Assignment definition.",
      "required": [
        "role",
        "principals"
      ],
      "properties": {
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "assignmentName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the metadata object."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized display names for the metadata."
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Localized description for the metadata."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Provisioning state.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Expiring",
            "Deleting",
            "HumanIntervention",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStates",
            "modelAsString": true
          }
        },
        "role": {
          "type": "string",
          "enum": [
            "Admin",
            "Reader",
            "ManageAdmin",
            "ManageReader",
            "DataAdmin",
            "DataReader"
          ],
          "x-ms-enum": {
            "name": "RoleTypes",
            "modelAsString": false
          },
          "description": "Type of roles."
        },
        "principals": {
          "type": "array",
          "items": {
            "description": "The AssignmentPrincipal",
            "required": [
              "principalId",
              "principalType"
            ],
            "properties": {
              "principalId": {
                "type": "string",
                "description": "The principal id being assigned to."
              },
              "principalType": {
                "type": "string",
                "description": "The Type of the principal ID."
              },
              "principalMetadata": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Other metadata for the principal."
              }
            }
          },
          "description": "The principals being assigned to."
        },
        "profiles": {
          "description": "Profiles set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "interactions": {
          "description": "Interactions set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "links": {
          "description": "Links set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "kpis": {
          "description": "Kpis set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "sasPolicies": {
          "description": "Sas Policies set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "connectors": {
          "description": "Connectors set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "views": {
          "description": "Views set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "relationshipLinks": {
          "description": "The Role assignments set for the relationship links.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "relationships": {
          "description": "The Role assignments set for the relationships.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "widgetTypes": {
          "description": "Widget types set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "roleAssignments": {
          "description": "The Role assignments set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "conflationPolicies": {
          "description": "Widget types set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        },
        "segments": {
          "description": "The Role assignments set for the assignment.",
          "properties": {
            "elements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements included in the set."
            },
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
            }
          }
        }
      }
    },
    "RoleAssignmentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The Role Assignment resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The Role Assignment definition.",
                "required": [
                  "role",
                  "principals"
                ],
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "assignmentName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The name of the metadata object."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized display names for the metadata."
                  },
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Localized description for the metadata."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "Admin",
                      "Reader",
                      "ManageAdmin",
                      "ManageReader",
                      "DataAdmin",
                      "DataReader"
                    ],
                    "x-ms-enum": {
                      "name": "RoleTypes",
                      "modelAsString": false
                    },
                    "description": "Type of roles."
                  },
                  "principals": {
                    "type": "array",
                    "items": {
                      "description": "The AssignmentPrincipal",
                      "required": [
                        "principalId",
                        "principalType"
                      ],
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "description": "The principal id being assigned to."
                        },
                        "principalType": {
                          "type": "string",
                          "description": "The Type of the principal ID."
                        },
                        "principalMetadata": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Other metadata for the principal."
                        }
                      }
                    },
                    "description": "The principals being assigned to."
                  },
                  "profiles": {
                    "description": "Profiles set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "interactions": {
                    "description": "Interactions set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "links": {
                    "description": "Links set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "kpis": {
                    "description": "Kpis set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "sasPolicies": {
                    "description": "Sas Policies set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "connectors": {
                    "description": "Connectors set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "views": {
                    "description": "Views set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "relationshipLinks": {
                    "description": "The Role assignments set for the relationship links.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "relationships": {
                    "description": "The Role assignments set for the relationships.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "widgetTypes": {
                    "description": "Widget types set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "roleAssignments": {
                    "description": "The Role assignments set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "conflationPolicies": {
                    "description": "Widget types set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  },
                  "segments": {
                    "description": "The Role assignments set for the assignment.",
                    "properties": {
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements included in the set."
                      },
                      "exceptions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list role assignment operation."
    },
    "RoleAssignmentResourceFormat": {
      "description": "The Role Assignment resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The Role Assignment definition.",
          "required": [
            "role",
            "principals"
          ],
          "properties": {
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "assignmentName": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the metadata object."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized display names for the metadata."
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Localized description for the metadata."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "role": {
              "type": "string",
              "enum": [
                "Admin",
                "Reader",
                "ManageAdmin",
                "ManageReader",
                "DataAdmin",
                "DataReader"
              ],
              "x-ms-enum": {
                "name": "RoleTypes",
                "modelAsString": false
              },
              "description": "Type of roles."
            },
            "principals": {
              "type": "array",
              "items": {
                "description": "The AssignmentPrincipal",
                "required": [
                  "principalId",
                  "principalType"
                ],
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "The principal id being assigned to."
                  },
                  "principalType": {
                    "type": "string",
                    "description": "The Type of the principal ID."
                  },
                  "principalMetadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Other metadata for the principal."
                  }
                }
              },
              "description": "The principals being assigned to."
            },
            "profiles": {
              "description": "Profiles set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "interactions": {
              "description": "Interactions set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "links": {
              "description": "Links set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "kpis": {
              "description": "Kpis set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "sasPolicies": {
              "description": "Sas Policies set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "connectors": {
              "description": "Connectors set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "views": {
              "description": "Views set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "relationshipLinks": {
              "description": "The Role assignments set for the relationship links.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "relationships": {
              "description": "The Role assignments set for the relationships.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "widgetTypes": {
              "description": "Widget types set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "roleAssignments": {
              "description": "The Role assignments set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "conflationPolicies": {
              "description": "Widget types set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            },
            "segments": {
              "description": "The Role assignments set for the assignment.",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements included in the set."
                },
                "exceptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
                }
              }
            }
          }
        }
      }
    },
    "ResourceSetDescription": {
      "description": "The resource set description.",
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The elements included in the set."
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The elements that are not included in the set, in case elements contains '*' indicating 'all'."
        }
      }
    },
    "AssignmentPrincipal": {
      "description": "The AssignmentPrincipal",
      "required": [
        "principalId",
        "principalType"
      ],
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id being assigned to."
        },
        "principalType": {
          "type": "string",
          "description": "The Type of the principal ID."
        },
        "principalMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Other metadata for the principal."
        }
      }
    },
    "Role": {
      "description": "The Role definition.",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "The role name."
        },
        "description": {
          "type": "string",
          "description": "The description of the role."
        }
      }
    },
    "RoleResourceFormat": {
      "description": "The role resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The Role definition.",
          "properties": {
            "roleName": {
              "type": "string",
              "description": "The role name."
            },
            "description": {
              "type": "string",
              "description": "The description of the role."
            }
          }
        }
      }
    },
    "RoleListResult": {
      "description": "The response of list role assignment operation.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The role resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The Role definition.",
                "properties": {
                  "roleName": {
                    "type": "string",
                    "description": "The role name."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the role."
                  }
                }
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      }
    },
    "GetImageUploadUrlInput": {
      "properties": {
        "entityType": {
          "type": "string",
          "description": "Type of entity. Can be Profile or Interaction."
        },
        "entityTypeName": {
          "type": "string",
          "description": "Name of the entity type."
        },
        "relativePath": {
          "type": "string",
          "description": "Relative path of the image."
        }
      },
      "description": "Input type for getting image upload url."
    },
    "ImageDefinition": {
      "properties": {
        "imageExists": {
          "type": "boolean",
          "description": "Whether image exists already."
        },
        "contentUrl": {
          "type": "string",
          "description": "Content URL for the image blob."
        },
        "relativePath": {
          "type": "string",
          "description": "Relative path of the image."
        }
      },
      "description": "The image definition."
    },
    "PermissionTypes": {
      "type": "string",
      "enum": [
        "Read",
        "Write",
        "Manage"
      ],
      "x-ms-enum": {
        "name": "PermissionTypes",
        "modelAsString": false
      },
      "description": "Supported permission types."
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Provisioning",
        "Succeeded",
        "Expiring",
        "Deleting",
        "HumanIntervention",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningStates",
        "modelAsString": true
      },
      "description": "Provisioning state."
    },
    "ConnectorType": {
      "type": "string",
      "enum": [
        "None",
        "CRM",
        "AzureBlob",
        "Salesforce",
        "ExchangeOnline",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "ConnectorTypes",
        "modelAsString": true
      },
      "description": "Type of connector."
    },
    "SuggestRelationshipLinksResponse": {
      "properties": {
        "interactionName": {
          "type": "string",
          "readOnly": true,
          "description": "The interaction name."
        },
        "suggestedRelationships": {
          "type": "array",
          "items": {
            "properties": {
              "profileName": {
                "type": "string",
                "readOnly": true,
                "description": "The relationship profile."
              },
              "profilePropertyReferences": {
                "type": "array",
                "items": {
                  "required": [
                    "interactionPropertyName",
                    "profilePropertyName"
                  ],
                  "properties": {
                    "interactionPropertyName": {
                      "type": "string",
                      "description": "The source interaction property that maps to the target profile property."
                    },
                    "profilePropertyName": {
                      "type": "string",
                      "description": "The target profile property that maps to the source interaction property."
                    }
                  },
                  "description": "The participant profile property reference."
                },
                "readOnly": true,
                "description": "The property references for the profile type."
              },
              "relatedProfileName": {
                "type": "string",
                "readOnly": true,
                "description": "The related profile."
              },
              "relatedProfilePropertyReferences": {
                "type": "array",
                "items": {
                  "required": [
                    "interactionPropertyName",
                    "profilePropertyName"
                  ],
                  "properties": {
                    "interactionPropertyName": {
                      "type": "string",
                      "description": "The source interaction property that maps to the target profile property."
                    },
                    "profilePropertyName": {
                      "type": "string",
                      "description": "The target profile property that maps to the source interaction property."
                    }
                  },
                  "description": "The participant profile property reference."
                },
                "readOnly": true,
                "description": "The property references for the related profile type."
              },
              "existingRelationshipName": {
                "type": "string",
                "readOnly": true,
                "description": "The name of existing Relationship."
              }
            },
            "description": "The definition of suggested relationship for the type."
          },
          "readOnly": true,
          "description": "Suggested relationships for the type."
        }
      },
      "description": "The response of suggest relationship links operation."
    },
    "RelationshipsLookup": {
      "properties": {
        "profileName": {
          "type": "string",
          "readOnly": true,
          "description": "The relationship profile."
        },
        "profilePropertyReferences": {
          "type": "array",
          "items": {
            "required": [
              "interactionPropertyName",
              "profilePropertyName"
            ],
            "properties": {
              "interactionPropertyName": {
                "type": "string",
                "description": "The source interaction property that maps to the target profile property."
              },
              "profilePropertyName": {
                "type": "string",
                "description": "The target profile property that maps to the source interaction property."
              }
            },
            "description": "The participant profile property reference."
          },
          "readOnly": true,
          "description": "The property references for the profile type."
        },
        "relatedProfileName": {
          "type": "string",
          "readOnly": true,
          "description": "The related profile."
        },
        "relatedProfilePropertyReferences": {
          "type": "array",
          "items": {
            "required": [
              "interactionPropertyName",
              "profilePropertyName"
            ],
            "properties": {
              "interactionPropertyName": {
                "type": "string",
                "description": "The source interaction property that maps to the target profile property."
              },
              "profilePropertyName": {
                "type": "string",
                "description": "The target profile property that maps to the source interaction property."
              }
            },
            "description": "The participant profile property reference."
          },
          "readOnly": true,
          "description": "The property references for the related profile type."
        },
        "existingRelationshipName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of existing Relationship."
        }
      },
      "description": "The definition of suggested relationship for the type."
    },
    "Prediction": {
      "required": [
        "negativeOutcomeExpression",
        "positiveOutcomeExpression",
        "primaryProfileType",
        "scopeExpression",
        "autoAnalyze",
        "mappings",
        "scoreLabel"
      ],
      "description": "The prediction definition.",
      "properties": {
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Description of the prediction."
        },
        "displayName": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Display name of the prediction."
        },
        "involvedInteractionTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Interaction types involved in the prediction."
        },
        "involvedKpiTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "KPI types involved in the prediction."
        },
        "involvedRelationships": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Relationships involved in the prediction."
        },
        "negativeOutcomeExpression": {
          "type": "string",
          "description": "Negative outcome expression."
        },
        "positiveOutcomeExpression": {
          "type": "string",
          "description": "Positive outcome expression."
        },
        "primaryProfileType": {
          "type": "string",
          "description": "Primary profile type."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Provisioning state.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Expiring",
            "Deleting",
            "HumanIntervention",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStates",
            "modelAsString": true
          }
        },
        "predictionName": {
          "type": "string",
          "description": "Name of the prediction."
        },
        "scopeExpression": {
          "type": "string",
          "description": "Scope expression."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "autoAnalyze": {
          "type": "boolean",
          "description": "Whether do auto analyze."
        },
        "mappings": {
          "required": [
            "score",
            "grade",
            "reason"
          ],
          "type": "object",
          "properties": {
            "score": {
              "type": "string",
              "description": "The score of the link mapping."
            },
            "grade": {
              "type": "string",
              "description": "The grade of the link mapping."
            },
            "reason": {
              "type": "string",
              "description": "The reason of the link mapping."
            }
          },
          "description": "Definition of the link mapping of prediction."
        },
        "scoreLabel": {
          "type": "string",
          "description": "Score label."
        },
        "grades": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "gradeName": {
                "type": "string",
                "description": "Name of the grade."
              },
              "minScoreThreshold": {
                "type": "integer",
                "description": "Minimum score threshold."
              },
              "maxScoreThreshold": {
                "type": "integer",
                "description": "Maximum score threshold."
              }
            },
            "description": "The definition of a prediction grade."
          },
          "description": "The prediction grades."
        },
        "systemGeneratedEntities": {
          "readOnly": true,
          "properties": {
            "generatedInteractionTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Generated interaction types."
            },
            "generatedLinks": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Generated links."
            },
            "generatedKpis": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Generated KPIs."
            }
          },
          "description": "System generated entities."
        }
      }
    },
    "PredictionTrainingResults": {
      "properties": {
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "scoreName": {
          "type": "string",
          "readOnly": true,
          "description": "Score name."
        },
        "predictionDistribution": {
          "readOnly": true,
          "description": "Prediction distribution.",
          "properties": {
            "totalPositives": {
              "type": "integer",
              "format": "int64",
              "description": "Total positive in the distribution."
            },
            "totalNegatives": {
              "type": "integer",
              "format": "int64",
              "description": "Total negatives in the distribution."
            },
            "distributions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "scoreThreshold": {
                    "type": "integer",
                    "description": "Score threshold."
                  },
                  "positives": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of positives."
                  },
                  "negatives": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of negatives."
                  },
                  "positivesAboveThreshold": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of positives above threshold."
                  },
                  "negativesAboveThreshold": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of negatives above threshold."
                  }
                },
                "description": "The definition of a prediction distribution."
              },
              "description": "Distributions of the prediction."
            }
          }
        },
        "canonicalProfiles": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "canonicalProfileId": {
                "type": "integer",
                "description": "Canonical profile ID."
              },
              "properties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "profileName": {
                      "type": "string",
                      "description": "Profile name."
                    },
                    "profilePropertyName": {
                      "type": "string",
                      "description": "Property name of profile."
                    },
                    "rank": {
                      "type": "integer",
                      "description": "The rank."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Numeric",
                        "Categorical",
                        "DerivedCategorical",
                        "DerivedNumeric"
                      ],
                      "x-ms-enum": {
                        "name": "CanonicalPropertyValueType",
                        "modelAsString": true
                      },
                      "description": "Type of canonical property value."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of the canonical property."
                    }
                  },
                  "description": "The definition of a canonical profile property."
                },
                "description": "Properties of the canonical profile."
              }
            },
            "description": "Definition of canonical profile."
          },
          "description": "Canonical profiles."
        },
        "primaryProfileInstanceCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "Instance count of the primary profile."
        }
      },
      "description": "The training results of the prediction."
    },
    "PredictionDistributionDefinition": {
      "properties": {
        "totalPositives": {
          "type": "integer",
          "format": "int64",
          "description": "Total positive in the distribution."
        },
        "totalNegatives": {
          "type": "integer",
          "format": "int64",
          "description": "Total negatives in the distribution."
        },
        "distributions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "scoreThreshold": {
                "type": "integer",
                "description": "Score threshold."
              },
              "positives": {
                "type": "integer",
                "format": "int64",
                "description": "Number of positives."
              },
              "negatives": {
                "type": "integer",
                "format": "int64",
                "description": "Number of negatives."
              },
              "positivesAboveThreshold": {
                "type": "integer",
                "format": "int64",
                "description": "Number of positives above threshold."
              },
              "negativesAboveThreshold": {
                "type": "integer",
                "format": "int64",
                "description": "Number of negatives above threshold."
              }
            },
            "description": "The definition of a prediction distribution."
          },
          "description": "Distributions of the prediction."
        }
      },
      "description": "The definition of the prediction distribution."
    },
    "CanonicalProfileDefinition": {
      "properties": {
        "canonicalProfileId": {
          "type": "integer",
          "description": "Canonical profile ID."
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "profileName": {
                "type": "string",
                "description": "Profile name."
              },
              "profilePropertyName": {
                "type": "string",
                "description": "Property name of profile."
              },
              "rank": {
                "type": "integer",
                "description": "The rank."
              },
              "type": {
                "type": "string",
                "enum": [
                  "Numeric",
                  "Categorical",
                  "DerivedCategorical",
                  "DerivedNumeric"
                ],
                "x-ms-enum": {
                  "name": "CanonicalPropertyValueType",
                  "modelAsString": true
                },
                "description": "Type of canonical property value."
              },
              "value": {
                "type": "string",
                "description": "Value of the canonical property."
              }
            },
            "description": "The definition of a canonical profile property."
          },
          "description": "Properties of the canonical profile."
        }
      },
      "description": "Definition of canonical profile."
    },
    "PredictionModelStatus": {
      "required": [
        "status"
      ],
      "description": "The prediction model status.",
      "properties": {
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The hub name."
        },
        "predictionName": {
          "type": "string",
          "readOnly": true,
          "description": "The prediction name."
        },
        "predictionGuidId": {
          "type": "string",
          "readOnly": true,
          "description": "The prediction GUID ID."
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "Provisioning",
            "ProvisioningFailed",
            "PendingDiscovering",
            "Discovering",
            "PendingFeaturing",
            "Featuring",
            "FeaturingFailed",
            "PendingTraining",
            "Training",
            "TrainingFailed",
            "Evaluating",
            "EvaluatingFailed",
            "PendingModelConfirmation",
            "Active",
            "Deleted",
            "HumanIntervention",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PredictionModelLifeCycle",
            "modelAsString": true
          },
          "description": "Prediction model life cycle.  When prediction is in PendingModelConfirmation status, it is allowed to update the status to PendingFeaturing or Active through API."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The model status message."
        },
        "trainingSetCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Count of the training set."
        },
        "testSetCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Count of the test set."
        },
        "validationSetCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Count of the validation set."
        },
        "trainingAccuracy": {
          "type": "integer",
          "format": "decimal",
          "readOnly": true,
          "description": "The training accuracy."
        },
        "signalsUsed": {
          "type": "integer",
          "readOnly": true,
          "description": "The signals used."
        },
        "modelVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Version of the model."
        }
      }
    },
    "PredictionResourceFormat": {
      "description": "The prediction resource format.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "required": [
            "negativeOutcomeExpression",
            "positiveOutcomeExpression",
            "primaryProfileType",
            "scopeExpression",
            "autoAnalyze",
            "mappings",
            "scoreLabel"
          ],
          "description": "The prediction definition.",
          "properties": {
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Description of the prediction."
            },
            "displayName": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Display name of the prediction."
            },
            "involvedInteractionTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Interaction types involved in the prediction."
            },
            "involvedKpiTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "KPI types involved in the prediction."
            },
            "involvedRelationships": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Relationships involved in the prediction."
            },
            "negativeOutcomeExpression": {
              "type": "string",
              "description": "Negative outcome expression."
            },
            "positiveOutcomeExpression": {
              "type": "string",
              "description": "Positive outcome expression."
            },
            "primaryProfileType": {
              "type": "string",
              "description": "Primary profile type."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Provisioning state.",
              "type": "string",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Expiring",
                "Deleting",
                "HumanIntervention",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStates",
                "modelAsString": true
              }
            },
            "predictionName": {
              "type": "string",
              "description": "Name of the prediction."
            },
            "scopeExpression": {
              "type": "string",
              "description": "Scope expression."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The hub name."
            },
            "autoAnalyze": {
              "type": "boolean",
              "description": "Whether do auto analyze."
            },
            "mappings": {
              "required": [
                "score",
                "grade",
                "reason"
              ],
              "type": "object",
              "properties": {
                "score": {
                  "type": "string",
                  "description": "The score of the link mapping."
                },
                "grade": {
                  "type": "string",
                  "description": "The grade of the link mapping."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason of the link mapping."
                }
              },
              "description": "Definition of the link mapping of prediction."
            },
            "scoreLabel": {
              "type": "string",
              "description": "Score label."
            },
            "grades": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "gradeName": {
                    "type": "string",
                    "description": "Name of the grade."
                  },
                  "minScoreThreshold": {
                    "type": "integer",
                    "description": "Minimum score threshold."
                  },
                  "maxScoreThreshold": {
                    "type": "integer",
                    "description": "Maximum score threshold."
                  }
                },
                "description": "The definition of a prediction grade."
              },
              "description": "The prediction grades."
            },
            "systemGeneratedEntities": {
              "readOnly": true,
              "properties": {
                "generatedInteractionTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Generated interaction types."
                },
                "generatedLinks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Generated links."
                },
                "generatedKpis": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Generated KPIs."
                }
              },
              "description": "System generated entities."
            }
          }
        }
      }
    },
    "PredictionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The prediction resource format.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource ID."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "required": [
                  "negativeOutcomeExpression",
                  "positiveOutcomeExpression",
                  "primaryProfileType",
                  "scopeExpression",
                  "autoAnalyze",
                  "mappings",
                  "scoreLabel"
                ],
                "description": "The prediction definition.",
                "properties": {
                  "description": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Description of the prediction."
                  },
                  "displayName": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Display name of the prediction."
                  },
                  "involvedInteractionTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Interaction types involved in the prediction."
                  },
                  "involvedKpiTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "KPI types involved in the prediction."
                  },
                  "involvedRelationships": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Relationships involved in the prediction."
                  },
                  "negativeOutcomeExpression": {
                    "type": "string",
                    "description": "Negative outcome expression."
                  },
                  "positiveOutcomeExpression": {
                    "type": "string",
                    "description": "Positive outcome expression."
                  },
                  "primaryProfileType": {
                    "type": "string",
                    "description": "Primary profile type."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Provisioning state.",
                    "type": "string",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Expiring",
                      "Deleting",
                      "HumanIntervention",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStates",
                      "modelAsString": true
                    }
                  },
                  "predictionName": {
                    "type": "string",
                    "description": "Name of the prediction."
                  },
                  "scopeExpression": {
                    "type": "string",
                    "description": "Scope expression."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The hub name."
                  },
                  "autoAnalyze": {
                    "type": "boolean",
                    "description": "Whether do auto analyze."
                  },
                  "mappings": {
                    "required": [
                      "score",
                      "grade",
                      "reason"
                    ],
                    "type": "object",
                    "properties": {
                      "score": {
                        "type": "string",
                        "description": "The score of the link mapping."
                      },
                      "grade": {
                        "type": "string",
                        "description": "The grade of the link mapping."
                      },
                      "reason": {
                        "type": "string",
                        "description": "The reason of the link mapping."
                      }
                    },
                    "description": "Definition of the link mapping of prediction."
                  },
                  "scoreLabel": {
                    "type": "string",
                    "description": "Score label."
                  },
                  "grades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "gradeName": {
                          "type": "string",
                          "description": "Name of the grade."
                        },
                        "minScoreThreshold": {
                          "type": "integer",
                          "description": "Minimum score threshold."
                        },
                        "maxScoreThreshold": {
                          "type": "integer",
                          "description": "Maximum score threshold."
                        }
                      },
                      "description": "The definition of a prediction grade."
                    },
                    "description": "The prediction grades."
                  },
                  "systemGeneratedEntities": {
                    "readOnly": true,
                    "properties": {
                      "generatedInteractionTypes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Generated interaction types."
                      },
                      "generatedLinks": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Generated links."
                      },
                      "generatedKpis": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Generated KPIs."
                      }
                    },
                    "description": "System generated entities."
                  }
                }
              }
            }
          },
          "description": "Results of the list operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results."
        }
      },
      "description": "The response of list predictions operation."
    },
    "OperationListResult": {
      "description": "Result of the request to list Customer Insights operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of Customer Insights operations supported by the Microsoft.CustomerInsights resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "A Customer Insights REST API operation",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Operation name: {provider}/{resource}/{operation}"
              },
              "display": {
                "description": "The object that represents the operation.",
                "properties": {
                  "provider": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Service provider: Microsoft.CustomerInsights"
                  },
                  "resource": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource on which the operation is performed: Invoice, etc."
                  },
                  "operation": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Operation type: Read, write, delete, etc."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "description": "A Customer Insights REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "readOnly": true,
              "type": "string",
              "description": "Service provider: Microsoft.CustomerInsights"
            },
            "resource": {
              "readOnly": true,
              "type": "string",
              "description": "Resource on which the operation is performed: Invoice, etc."
            },
            "operation": {
              "readOnly": true,
              "type": "string",
              "description": "Operation type: Read, write, delete, etc."
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}