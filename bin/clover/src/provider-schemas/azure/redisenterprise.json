{
  "swagger": "2.0",
  "info": {
    "title": "Azure redisenterprise",
    "version": "2025-07-01",
    "description": "Azure redisenterprise service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.Cache/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available REST API operations of the Microsoft.Cache provider.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of operations.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/locations/{location}/operationsStatus/{operationId}": {
      "get": {
        "tags": [
          "OperationsStatus"
        ],
        "operationId": "OperationsStatus_Get",
        "description": "Gets the status of operation.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The ID of an ongoing async operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The detailed status of the operation is in the response.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}": {
      "put": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Create",
        "description": "Creates or updates an existing (overwrite/recreate, with potential downtime) cache cluster",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Describes the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Distinguishes the kind of cluster. Read-only.",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                },
                "sku": {
                  "description": "The SKU to create, which affects price, performance, and features.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                      "enum": [
                        "Enterprise_E1",
                        "Enterprise_E5",
                        "Enterprise_E10",
                        "Enterprise_E20",
                        "Enterprise_E50",
                        "Enterprise_E100",
                        "Enterprise_E200",
                        "Enterprise_E400",
                        "EnterpriseFlash_F300",
                        "EnterpriseFlash_F700",
                        "EnterpriseFlash_F1500",
                        "Balanced_B0",
                        "Balanced_B1",
                        "Balanced_B3",
                        "Balanced_B5",
                        "Balanced_B10",
                        "Balanced_B20",
                        "Balanced_B50",
                        "Balanced_B100",
                        "Balanced_B150",
                        "Balanced_B250",
                        "Balanced_B350",
                        "Balanced_B500",
                        "Balanced_B700",
                        "Balanced_B1000",
                        "MemoryOptimized_M10",
                        "MemoryOptimized_M20",
                        "MemoryOptimized_M50",
                        "MemoryOptimized_M100",
                        "MemoryOptimized_M150",
                        "MemoryOptimized_M250",
                        "MemoryOptimized_M350",
                        "MemoryOptimized_M500",
                        "MemoryOptimized_M700",
                        "MemoryOptimized_M1000",
                        "MemoryOptimized_M1500",
                        "MemoryOptimized_M2000",
                        "ComputeOptimized_X3",
                        "ComputeOptimized_X5",
                        "ComputeOptimized_X10",
                        "ComputeOptimized_X20",
                        "ComputeOptimized_X50",
                        "ComputeOptimized_X100",
                        "ComputeOptimized_X150",
                        "ComputeOptimized_X250",
                        "ComputeOptimized_X350",
                        "ComputeOptimized_X500",
                        "ComputeOptimized_X700",
                        "FlashOptimized_A250",
                        "FlashOptimized_A500",
                        "FlashOptimized_A700",
                        "FlashOptimized_A1000",
                        "FlashOptimized_A1500",
                        "FlashOptimized_A2000",
                        "FlashOptimized_A4500"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The Availability Zones where this cluster will be deployed."
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the cluster.",
                  "title": "Redis Enterprise cluster properties for create operations",
                  "type": "object",
                  "properties": {
                    "highAvailability": {
                      "type": "string",
                      "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HighAvailability",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "description": "Encryption-at-rest configuration for the cluster.",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "type": "object",
                              "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                              "properties": {
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                                },
                                "identityType": {
                                  "type": "string",
                                  "enum": [
                                    "systemAssignedIdentity",
                                    "userAssignedIdentity"
                                  ],
                                  "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                  "x-ms-enum": {
                                    "name": "CmkIdentityType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                            }
                          }
                        }
                      }
                    },
                    "hostName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "DNS name of the cluster endpoint"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the cluster",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "redundancyMode": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                      "enum": [
                        "None",
                        "LR",
                        "ZR"
                      ],
                      "x-ms-enum": {
                        "name": "RedundancyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "No redundancy. Availability loss will occur."
                          },
                          {
                            "name": "LR",
                            "value": "LR",
                            "description": "Local redundancy with high availability."
                          },
                          {
                            "name": "ZR",
                            "value": "ZR",
                            "description": "Zone redundant. Higher availability."
                          }
                        ]
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the cluster",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of redis the cluster supports, e.g. '6'"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "x-nullable": true
                    }
                  },
                  "required": [
                    "publicNetworkAccess"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            },
            "description": "Parameters supplied to the Create Redis Enterprise operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The cluster was/is being updated. Check provisioningState and resourceState to see detailed status.",
            "schema": {
              "description": "Describes the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Distinguishes the kind of cluster. Read-only.",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                },
                "sku": {
                  "description": "The SKU to create, which affects price, performance, and features.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                      "enum": [
                        "Enterprise_E1",
                        "Enterprise_E5",
                        "Enterprise_E10",
                        "Enterprise_E20",
                        "Enterprise_E50",
                        "Enterprise_E100",
                        "Enterprise_E200",
                        "Enterprise_E400",
                        "EnterpriseFlash_F300",
                        "EnterpriseFlash_F700",
                        "EnterpriseFlash_F1500",
                        "Balanced_B0",
                        "Balanced_B1",
                        "Balanced_B3",
                        "Balanced_B5",
                        "Balanced_B10",
                        "Balanced_B20",
                        "Balanced_B50",
                        "Balanced_B100",
                        "Balanced_B150",
                        "Balanced_B250",
                        "Balanced_B350",
                        "Balanced_B500",
                        "Balanced_B700",
                        "Balanced_B1000",
                        "MemoryOptimized_M10",
                        "MemoryOptimized_M20",
                        "MemoryOptimized_M50",
                        "MemoryOptimized_M100",
                        "MemoryOptimized_M150",
                        "MemoryOptimized_M250",
                        "MemoryOptimized_M350",
                        "MemoryOptimized_M500",
                        "MemoryOptimized_M700",
                        "MemoryOptimized_M1000",
                        "MemoryOptimized_M1500",
                        "MemoryOptimized_M2000",
                        "ComputeOptimized_X3",
                        "ComputeOptimized_X5",
                        "ComputeOptimized_X10",
                        "ComputeOptimized_X20",
                        "ComputeOptimized_X50",
                        "ComputeOptimized_X100",
                        "ComputeOptimized_X150",
                        "ComputeOptimized_X250",
                        "ComputeOptimized_X350",
                        "ComputeOptimized_X500",
                        "ComputeOptimized_X700",
                        "FlashOptimized_A250",
                        "FlashOptimized_A500",
                        "FlashOptimized_A700",
                        "FlashOptimized_A1000",
                        "FlashOptimized_A1500",
                        "FlashOptimized_A2000",
                        "FlashOptimized_A4500"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The Availability Zones where this cluster will be deployed."
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the cluster.",
                  "title": "Redis Enterprise cluster properties for create operations",
                  "type": "object",
                  "properties": {
                    "highAvailability": {
                      "type": "string",
                      "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HighAvailability",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "description": "Encryption-at-rest configuration for the cluster.",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "type": "object",
                              "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                              "properties": {
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                                },
                                "identityType": {
                                  "type": "string",
                                  "enum": [
                                    "systemAssignedIdentity",
                                    "userAssignedIdentity"
                                  ],
                                  "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                  "x-ms-enum": {
                                    "name": "CmkIdentityType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                            }
                          }
                        }
                      }
                    },
                    "hostName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "DNS name of the cluster endpoint"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the cluster",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "redundancyMode": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                      "enum": [
                        "None",
                        "LR",
                        "ZR"
                      ],
                      "x-ms-enum": {
                        "name": "RedundancyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "No redundancy. Availability loss will occur."
                          },
                          {
                            "name": "LR",
                            "value": "LR",
                            "description": "Local redundancy with high availability."
                          },
                          {
                            "name": "ZR",
                            "value": "ZR",
                            "description": "Zone redundant. Higher availability."
                          }
                        ]
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the cluster",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of redis the cluster supports, e.g. '6'"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "x-nullable": true
                    }
                  },
                  "required": [
                    "publicNetworkAccess"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "201": {
            "description": "The cluster was/is being created. Check provisioningState and resourceState to see detailed status.",
            "schema": {
              "description": "Describes the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Distinguishes the kind of cluster. Read-only.",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                },
                "sku": {
                  "description": "The SKU to create, which affects price, performance, and features.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                      "enum": [
                        "Enterprise_E1",
                        "Enterprise_E5",
                        "Enterprise_E10",
                        "Enterprise_E20",
                        "Enterprise_E50",
                        "Enterprise_E100",
                        "Enterprise_E200",
                        "Enterprise_E400",
                        "EnterpriseFlash_F300",
                        "EnterpriseFlash_F700",
                        "EnterpriseFlash_F1500",
                        "Balanced_B0",
                        "Balanced_B1",
                        "Balanced_B3",
                        "Balanced_B5",
                        "Balanced_B10",
                        "Balanced_B20",
                        "Balanced_B50",
                        "Balanced_B100",
                        "Balanced_B150",
                        "Balanced_B250",
                        "Balanced_B350",
                        "Balanced_B500",
                        "Balanced_B700",
                        "Balanced_B1000",
                        "MemoryOptimized_M10",
                        "MemoryOptimized_M20",
                        "MemoryOptimized_M50",
                        "MemoryOptimized_M100",
                        "MemoryOptimized_M150",
                        "MemoryOptimized_M250",
                        "MemoryOptimized_M350",
                        "MemoryOptimized_M500",
                        "MemoryOptimized_M700",
                        "MemoryOptimized_M1000",
                        "MemoryOptimized_M1500",
                        "MemoryOptimized_M2000",
                        "ComputeOptimized_X3",
                        "ComputeOptimized_X5",
                        "ComputeOptimized_X10",
                        "ComputeOptimized_X20",
                        "ComputeOptimized_X50",
                        "ComputeOptimized_X100",
                        "ComputeOptimized_X150",
                        "ComputeOptimized_X250",
                        "ComputeOptimized_X350",
                        "ComputeOptimized_X500",
                        "ComputeOptimized_X700",
                        "FlashOptimized_A250",
                        "FlashOptimized_A500",
                        "FlashOptimized_A700",
                        "FlashOptimized_A1000",
                        "FlashOptimized_A1500",
                        "FlashOptimized_A2000",
                        "FlashOptimized_A4500"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The Availability Zones where this cluster will be deployed."
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the cluster.",
                  "title": "Redis Enterprise cluster properties for create operations",
                  "type": "object",
                  "properties": {
                    "highAvailability": {
                      "type": "string",
                      "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HighAvailability",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "description": "Encryption-at-rest configuration for the cluster.",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "type": "object",
                              "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                              "properties": {
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                                },
                                "identityType": {
                                  "type": "string",
                                  "enum": [
                                    "systemAssignedIdentity",
                                    "userAssignedIdentity"
                                  ],
                                  "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                  "x-ms-enum": {
                                    "name": "CmkIdentityType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                            }
                          }
                        }
                      }
                    },
                    "hostName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "DNS name of the cluster endpoint"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the cluster",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "redundancyMode": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                      "enum": [
                        "None",
                        "LR",
                        "ZR"
                      ],
                      "x-ms-enum": {
                        "name": "RedundancyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "No redundancy. Availability loss will occur."
                          },
                          {
                            "name": "LR",
                            "value": "LR",
                            "description": "Local redundancy with high availability."
                          },
                          {
                            "name": "ZR",
                            "value": "ZR",
                            "description": "Zone redundant. Higher availability."
                          }
                        ]
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the cluster",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of redis the cluster supports, e.g. '6'"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "x-nullable": true
                    }
                  },
                  "required": [
                    "publicNetworkAccess"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Update",
        "description": "Updates an existing Redis Enterprise cluster",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A partial update to the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "sku": {
                  "description": "The SKU to create, which affects price, performance, and features.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                      "enum": [
                        "Enterprise_E1",
                        "Enterprise_E5",
                        "Enterprise_E10",
                        "Enterprise_E20",
                        "Enterprise_E50",
                        "Enterprise_E100",
                        "Enterprise_E200",
                        "Enterprise_E400",
                        "EnterpriseFlash_F300",
                        "EnterpriseFlash_F700",
                        "EnterpriseFlash_F1500",
                        "Balanced_B0",
                        "Balanced_B1",
                        "Balanced_B3",
                        "Balanced_B5",
                        "Balanced_B10",
                        "Balanced_B20",
                        "Balanced_B50",
                        "Balanced_B100",
                        "Balanced_B150",
                        "Balanced_B250",
                        "Balanced_B350",
                        "Balanced_B500",
                        "Balanced_B700",
                        "Balanced_B1000",
                        "MemoryOptimized_M10",
                        "MemoryOptimized_M20",
                        "MemoryOptimized_M50",
                        "MemoryOptimized_M100",
                        "MemoryOptimized_M150",
                        "MemoryOptimized_M250",
                        "MemoryOptimized_M350",
                        "MemoryOptimized_M500",
                        "MemoryOptimized_M700",
                        "MemoryOptimized_M1000",
                        "MemoryOptimized_M1500",
                        "MemoryOptimized_M2000",
                        "ComputeOptimized_X3",
                        "ComputeOptimized_X5",
                        "ComputeOptimized_X10",
                        "ComputeOptimized_X20",
                        "ComputeOptimized_X50",
                        "ComputeOptimized_X100",
                        "ComputeOptimized_X150",
                        "ComputeOptimized_X250",
                        "ComputeOptimized_X350",
                        "ComputeOptimized_X500",
                        "ComputeOptimized_X700",
                        "FlashOptimized_A250",
                        "FlashOptimized_A500",
                        "FlashOptimized_A700",
                        "FlashOptimized_A1000",
                        "FlashOptimized_A1500",
                        "FlashOptimized_A2000",
                        "FlashOptimized_A4500"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the cluster.",
                  "title": "Redis Enterprise cluster properties for update operations",
                  "type": "object",
                  "properties": {
                    "highAvailability": {
                      "type": "string",
                      "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HighAvailability",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "description": "Encryption-at-rest configuration for the cluster.",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "type": "object",
                              "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                              "properties": {
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                                },
                                "identityType": {
                                  "type": "string",
                                  "enum": [
                                    "systemAssignedIdentity",
                                    "userAssignedIdentity"
                                  ],
                                  "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                  "x-ms-enum": {
                                    "name": "CmkIdentityType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                            }
                          }
                        }
                      }
                    },
                    "hostName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "DNS name of the cluster endpoint"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the cluster",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "redundancyMode": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                      "enum": [
                        "None",
                        "LR",
                        "ZR"
                      ],
                      "x-ms-enum": {
                        "name": "RedundancyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "No redundancy. Availability loss will occur."
                          },
                          {
                            "name": "LR",
                            "value": "LR",
                            "description": "Local redundancy with high availability."
                          },
                          {
                            "name": "ZR",
                            "value": "ZR",
                            "description": "Zone redundant. Higher availability."
                          }
                        ]
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the cluster",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of redis the cluster supports, e.g. '6'"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "x-nullable": true
                    }
                  }
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                }
              }
            },
            "description": "Parameters supplied to the Update Redis Enterprise operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The cluster was/is being updated. Check provisioningState and resourceState to see detailed status.",
            "schema": {
              "description": "Describes the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Distinguishes the kind of cluster. Read-only.",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                },
                "sku": {
                  "description": "The SKU to create, which affects price, performance, and features.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                      "enum": [
                        "Enterprise_E1",
                        "Enterprise_E5",
                        "Enterprise_E10",
                        "Enterprise_E20",
                        "Enterprise_E50",
                        "Enterprise_E100",
                        "Enterprise_E200",
                        "Enterprise_E400",
                        "EnterpriseFlash_F300",
                        "EnterpriseFlash_F700",
                        "EnterpriseFlash_F1500",
                        "Balanced_B0",
                        "Balanced_B1",
                        "Balanced_B3",
                        "Balanced_B5",
                        "Balanced_B10",
                        "Balanced_B20",
                        "Balanced_B50",
                        "Balanced_B100",
                        "Balanced_B150",
                        "Balanced_B250",
                        "Balanced_B350",
                        "Balanced_B500",
                        "Balanced_B700",
                        "Balanced_B1000",
                        "MemoryOptimized_M10",
                        "MemoryOptimized_M20",
                        "MemoryOptimized_M50",
                        "MemoryOptimized_M100",
                        "MemoryOptimized_M150",
                        "MemoryOptimized_M250",
                        "MemoryOptimized_M350",
                        "MemoryOptimized_M500",
                        "MemoryOptimized_M700",
                        "MemoryOptimized_M1000",
                        "MemoryOptimized_M1500",
                        "MemoryOptimized_M2000",
                        "ComputeOptimized_X3",
                        "ComputeOptimized_X5",
                        "ComputeOptimized_X10",
                        "ComputeOptimized_X20",
                        "ComputeOptimized_X50",
                        "ComputeOptimized_X100",
                        "ComputeOptimized_X150",
                        "ComputeOptimized_X250",
                        "ComputeOptimized_X350",
                        "ComputeOptimized_X500",
                        "ComputeOptimized_X700",
                        "FlashOptimized_A250",
                        "FlashOptimized_A500",
                        "FlashOptimized_A700",
                        "FlashOptimized_A1000",
                        "FlashOptimized_A1500",
                        "FlashOptimized_A2000",
                        "FlashOptimized_A4500"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The Availability Zones where this cluster will be deployed."
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the cluster.",
                  "title": "Redis Enterprise cluster properties for create operations",
                  "type": "object",
                  "properties": {
                    "highAvailability": {
                      "type": "string",
                      "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HighAvailability",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "description": "Encryption-at-rest configuration for the cluster.",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "type": "object",
                              "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                              "properties": {
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                                },
                                "identityType": {
                                  "type": "string",
                                  "enum": [
                                    "systemAssignedIdentity",
                                    "userAssignedIdentity"
                                  ],
                                  "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                  "x-ms-enum": {
                                    "name": "CmkIdentityType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                            }
                          }
                        }
                      }
                    },
                    "hostName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "DNS name of the cluster endpoint"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the cluster",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "redundancyMode": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                      "enum": [
                        "None",
                        "LR",
                        "ZR"
                      ],
                      "x-ms-enum": {
                        "name": "RedundancyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "No redundancy. Availability loss will occur."
                          },
                          {
                            "name": "LR",
                            "value": "LR",
                            "description": "Local redundancy with high availability."
                          },
                          {
                            "name": "ZR",
                            "value": "ZR",
                            "description": "Zone redundant. Higher availability."
                          }
                        ]
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the cluster",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of redis the cluster supports, e.g. '6'"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "x-nullable": true
                    }
                  },
                  "required": [
                    "publicNetworkAccess"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "202": {
            "description": "The cluster update operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Delete",
        "description": "Deletes a Redis Enterprise cache cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The cluster was successfully deleted."
          },
          "202": {
            "description": "The cluster delete operation was successfully started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "The cluster was successfully deleted."
          }
        }
      },
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Get",
        "description": "Gets information about a Redis Enterprise cluster",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded, response body contains the requested details.",
            "schema": {
              "description": "Describes the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Distinguishes the kind of cluster. Read-only.",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                },
                "sku": {
                  "description": "The SKU to create, which affects price, performance, and features.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                      "enum": [
                        "Enterprise_E1",
                        "Enterprise_E5",
                        "Enterprise_E10",
                        "Enterprise_E20",
                        "Enterprise_E50",
                        "Enterprise_E100",
                        "Enterprise_E200",
                        "Enterprise_E400",
                        "EnterpriseFlash_F300",
                        "EnterpriseFlash_F700",
                        "EnterpriseFlash_F1500",
                        "Balanced_B0",
                        "Balanced_B1",
                        "Balanced_B3",
                        "Balanced_B5",
                        "Balanced_B10",
                        "Balanced_B20",
                        "Balanced_B50",
                        "Balanced_B100",
                        "Balanced_B150",
                        "Balanced_B250",
                        "Balanced_B350",
                        "Balanced_B500",
                        "Balanced_B700",
                        "Balanced_B1000",
                        "MemoryOptimized_M10",
                        "MemoryOptimized_M20",
                        "MemoryOptimized_M50",
                        "MemoryOptimized_M100",
                        "MemoryOptimized_M150",
                        "MemoryOptimized_M250",
                        "MemoryOptimized_M350",
                        "MemoryOptimized_M500",
                        "MemoryOptimized_M700",
                        "MemoryOptimized_M1000",
                        "MemoryOptimized_M1500",
                        "MemoryOptimized_M2000",
                        "ComputeOptimized_X3",
                        "ComputeOptimized_X5",
                        "ComputeOptimized_X10",
                        "ComputeOptimized_X20",
                        "ComputeOptimized_X50",
                        "ComputeOptimized_X100",
                        "ComputeOptimized_X150",
                        "ComputeOptimized_X250",
                        "ComputeOptimized_X350",
                        "ComputeOptimized_X500",
                        "ComputeOptimized_X700",
                        "FlashOptimized_A250",
                        "FlashOptimized_A500",
                        "FlashOptimized_A700",
                        "FlashOptimized_A1000",
                        "FlashOptimized_A1500",
                        "FlashOptimized_A2000",
                        "FlashOptimized_A4500"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The Availability Zones where this cluster will be deployed."
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the cluster.",
                  "title": "Redis Enterprise cluster properties for create operations",
                  "type": "object",
                  "properties": {
                    "highAvailability": {
                      "type": "string",
                      "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HighAvailability",
                        "modelAsString": true
                      }
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "description": "Encryption-at-rest configuration for the cluster.",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "type": "object",
                          "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "type": "object",
                              "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                              "properties": {
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                                },
                                "identityType": {
                                  "type": "string",
                                  "enum": [
                                    "systemAssignedIdentity",
                                    "userAssignedIdentity"
                                  ],
                                  "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                  "x-ms-enum": {
                                    "name": "CmkIdentityType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                            }
                          }
                        }
                      }
                    },
                    "hostName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "DNS name of the cluster endpoint"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the cluster",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "redundancyMode": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                      "enum": [
                        "None",
                        "LR",
                        "ZR"
                      ],
                      "x-ms-enum": {
                        "name": "RedundancyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "No redundancy. Availability loss will occur."
                          },
                          {
                            "name": "LR",
                            "value": "LR",
                            "description": "Local redundancy with high availability."
                          },
                          {
                            "name": "ZR",
                            "value": "ZR",
                            "description": "Zone redundant. Higher availability."
                          }
                        ]
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the cluster",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of redis the cluster supports, e.g. '6'"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "x-nullable": true
                    }
                  },
                  "required": [
                    "publicNetworkAccess"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise": {
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_ListByResourceGroup",
        "description": "Lists all Redis Enterprise clusters in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Redis Enterprise clusters",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Describes the Redis Enterprise cluster",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "kind": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Distinguishes the kind of cluster. Read-only.",
                        "enum": [
                          "v1",
                          "v2"
                        ],
                        "x-ms-enum": {
                          "name": "Kind",
                          "modelAsString": true
                        }
                      },
                      "sku": {
                        "description": "The SKU to create, which affects price, performance, and features.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                            "enum": [
                              "Enterprise_E1",
                              "Enterprise_E5",
                              "Enterprise_E10",
                              "Enterprise_E20",
                              "Enterprise_E50",
                              "Enterprise_E100",
                              "Enterprise_E200",
                              "Enterprise_E400",
                              "EnterpriseFlash_F300",
                              "EnterpriseFlash_F700",
                              "EnterpriseFlash_F1500",
                              "Balanced_B0",
                              "Balanced_B1",
                              "Balanced_B3",
                              "Balanced_B5",
                              "Balanced_B10",
                              "Balanced_B20",
                              "Balanced_B50",
                              "Balanced_B100",
                              "Balanced_B150",
                              "Balanced_B250",
                              "Balanced_B350",
                              "Balanced_B500",
                              "Balanced_B700",
                              "Balanced_B1000",
                              "MemoryOptimized_M10",
                              "MemoryOptimized_M20",
                              "MemoryOptimized_M50",
                              "MemoryOptimized_M100",
                              "MemoryOptimized_M150",
                              "MemoryOptimized_M250",
                              "MemoryOptimized_M350",
                              "MemoryOptimized_M500",
                              "MemoryOptimized_M700",
                              "MemoryOptimized_M1000",
                              "MemoryOptimized_M1500",
                              "MemoryOptimized_M2000",
                              "ComputeOptimized_X3",
                              "ComputeOptimized_X5",
                              "ComputeOptimized_X10",
                              "ComputeOptimized_X20",
                              "ComputeOptimized_X50",
                              "ComputeOptimized_X100",
                              "ComputeOptimized_X150",
                              "ComputeOptimized_X250",
                              "ComputeOptimized_X350",
                              "ComputeOptimized_X500",
                              "ComputeOptimized_X700",
                              "FlashOptimized_A250",
                              "FlashOptimized_A500",
                              "FlashOptimized_A700",
                              "FlashOptimized_A1000",
                              "FlashOptimized_A1500",
                              "FlashOptimized_A2000",
                              "FlashOptimized_A4500"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The Availability Zones where this cluster will be deployed."
                      },
                      "identity": {
                        "description": "The identity of the resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Other properties of the cluster.",
                        "title": "Redis Enterprise cluster properties for create operations",
                        "type": "object",
                        "properties": {
                          "highAvailability": {
                            "type": "string",
                            "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "HighAvailability",
                              "modelAsString": true
                            }
                          },
                          "minimumTlsVersion": {
                            "type": "string",
                            "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "encryption": {
                            "type": "object",
                            "description": "Encryption-at-rest configuration for the cluster.",
                            "properties": {
                              "customerManagedKeyEncryption": {
                                "type": "object",
                                "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                                "properties": {
                                  "keyEncryptionKeyIdentity": {
                                    "type": "object",
                                    "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                                    "properties": {
                                      "userAssignedIdentityResourceId": {
                                        "type": "string",
                                        "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                                      },
                                      "identityType": {
                                        "type": "string",
                                        "enum": [
                                          "systemAssignedIdentity",
                                          "userAssignedIdentity"
                                        ],
                                        "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                        "x-ms-enum": {
                                          "name": "CmkIdentityType",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  },
                                  "keyEncryptionKeyUrl": {
                                    "type": "string",
                                    "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                                  }
                                }
                              }
                            }
                          },
                          "hostName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "DNS name of the cluster endpoint"
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Current provisioning status of the cluster",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Updating",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "redundancyMode": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                            "enum": [
                              "None",
                              "LR",
                              "ZR"
                            ],
                            "x-ms-enum": {
                              "name": "RedundancyMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None",
                                  "description": "No redundancy. Availability loss will occur."
                                },
                                {
                                  "name": "LR",
                                  "value": "LR",
                                  "description": "Local redundancy with high availability."
                                },
                                {
                                  "name": "ZR",
                                  "value": "ZR",
                                  "description": "Zone redundant. Higher availability."
                                }
                              ]
                            }
                          },
                          "resourceState": {
                            "readOnly": true,
                            "description": "Current resource status of the cluster",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "CreateFailed",
                              "Updating",
                              "UpdateFailed",
                              "Deleting",
                              "DeleteFailed",
                              "Enabling",
                              "EnableFailed",
                              "Disabling",
                              "DisableFailed",
                              "Disabled",
                              "Scaling",
                              "ScalingFailed",
                              "Moving"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true
                            }
                          },
                          "redisVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Version of redis the cluster supports, e.g. '6'"
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "readOnly": true,
                            "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            }
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "x-nullable": true
                          }
                        },
                        "required": [
                          "publicNetworkAccess"
                        ]
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  },
                  "description": "List of clusters."
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URI to fetch the next page of results."
                }
              },
              "description": "The response of a list-all operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/redisEnterprise": {
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_List",
        "description": "Lists all Redis Enterprise clusters in the specified subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Redis Enterprise clusters",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Describes the Redis Enterprise cluster",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "kind": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Distinguishes the kind of cluster. Read-only.",
                        "enum": [
                          "v1",
                          "v2"
                        ],
                        "x-ms-enum": {
                          "name": "Kind",
                          "modelAsString": true
                        }
                      },
                      "sku": {
                        "description": "The SKU to create, which affects price, performance, and features.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                            "enum": [
                              "Enterprise_E1",
                              "Enterprise_E5",
                              "Enterprise_E10",
                              "Enterprise_E20",
                              "Enterprise_E50",
                              "Enterprise_E100",
                              "Enterprise_E200",
                              "Enterprise_E400",
                              "EnterpriseFlash_F300",
                              "EnterpriseFlash_F700",
                              "EnterpriseFlash_F1500",
                              "Balanced_B0",
                              "Balanced_B1",
                              "Balanced_B3",
                              "Balanced_B5",
                              "Balanced_B10",
                              "Balanced_B20",
                              "Balanced_B50",
                              "Balanced_B100",
                              "Balanced_B150",
                              "Balanced_B250",
                              "Balanced_B350",
                              "Balanced_B500",
                              "Balanced_B700",
                              "Balanced_B1000",
                              "MemoryOptimized_M10",
                              "MemoryOptimized_M20",
                              "MemoryOptimized_M50",
                              "MemoryOptimized_M100",
                              "MemoryOptimized_M150",
                              "MemoryOptimized_M250",
                              "MemoryOptimized_M350",
                              "MemoryOptimized_M500",
                              "MemoryOptimized_M700",
                              "MemoryOptimized_M1000",
                              "MemoryOptimized_M1500",
                              "MemoryOptimized_M2000",
                              "ComputeOptimized_X3",
                              "ComputeOptimized_X5",
                              "ComputeOptimized_X10",
                              "ComputeOptimized_X20",
                              "ComputeOptimized_X50",
                              "ComputeOptimized_X100",
                              "ComputeOptimized_X150",
                              "ComputeOptimized_X250",
                              "ComputeOptimized_X350",
                              "ComputeOptimized_X500",
                              "ComputeOptimized_X700",
                              "FlashOptimized_A250",
                              "FlashOptimized_A500",
                              "FlashOptimized_A700",
                              "FlashOptimized_A1000",
                              "FlashOptimized_A1500",
                              "FlashOptimized_A2000",
                              "FlashOptimized_A4500"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The Availability Zones where this cluster will be deployed."
                      },
                      "identity": {
                        "description": "The identity of the resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Other properties of the cluster.",
                        "title": "Redis Enterprise cluster properties for create operations",
                        "type": "object",
                        "properties": {
                          "highAvailability": {
                            "type": "string",
                            "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "HighAvailability",
                              "modelAsString": true
                            }
                          },
                          "minimumTlsVersion": {
                            "type": "string",
                            "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "encryption": {
                            "type": "object",
                            "description": "Encryption-at-rest configuration for the cluster.",
                            "properties": {
                              "customerManagedKeyEncryption": {
                                "type": "object",
                                "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                                "properties": {
                                  "keyEncryptionKeyIdentity": {
                                    "type": "object",
                                    "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                                    "properties": {
                                      "userAssignedIdentityResourceId": {
                                        "type": "string",
                                        "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                                      },
                                      "identityType": {
                                        "type": "string",
                                        "enum": [
                                          "systemAssignedIdentity",
                                          "userAssignedIdentity"
                                        ],
                                        "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                        "x-ms-enum": {
                                          "name": "CmkIdentityType",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  },
                                  "keyEncryptionKeyUrl": {
                                    "type": "string",
                                    "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                                  }
                                }
                              }
                            }
                          },
                          "hostName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "DNS name of the cluster endpoint"
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Current provisioning status of the cluster",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Updating",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "redundancyMode": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                            "enum": [
                              "None",
                              "LR",
                              "ZR"
                            ],
                            "x-ms-enum": {
                              "name": "RedundancyMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None",
                                  "description": "No redundancy. Availability loss will occur."
                                },
                                {
                                  "name": "LR",
                                  "value": "LR",
                                  "description": "Local redundancy with high availability."
                                },
                                {
                                  "name": "ZR",
                                  "value": "ZR",
                                  "description": "Zone redundant. Higher availability."
                                }
                              ]
                            }
                          },
                          "resourceState": {
                            "readOnly": true,
                            "description": "Current resource status of the cluster",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "CreateFailed",
                              "Updating",
                              "UpdateFailed",
                              "Deleting",
                              "DeleteFailed",
                              "Enabling",
                              "EnableFailed",
                              "Disabling",
                              "DisableFailed",
                              "Disabled",
                              "Scaling",
                              "ScalingFailed",
                              "Moving"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true
                            }
                          },
                          "redisVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Version of redis the cluster supports, e.g. '6'"
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "readOnly": true,
                            "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            }
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "x-nullable": true
                          }
                        },
                        "required": [
                          "publicNetworkAccess"
                        ]
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  },
                  "description": "List of clusters."
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URI to fetch the next page of results."
                }
              },
              "description": "The response of a list-all operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases": {
      "get": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_ListByCluster",
        "description": "Gets all databases in the specified Redis Enterprise cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of databases",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Describes a database on the Redis Enterprise cluster",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Other properties of the database.",
                        "title": "Redis Enterprise database create properties",
                        "type": "object",
                        "properties": {
                          "clientProtocol": {
                            "type": "string",
                            "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
                            "enum": [
                              "Encrypted",
                              "Plaintext"
                            ],
                            "x-ms-enum": {
                              "name": "Protocol",
                              "modelAsString": true
                            }
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Current provisioning status of the database",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Updating",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "resourceState": {
                            "readOnly": true,
                            "description": "Current resource status of the database",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "CreateFailed",
                              "Updating",
                              "UpdateFailed",
                              "Deleting",
                              "DeleteFailed",
                              "Enabling",
                              "EnableFailed",
                              "Disabling",
                              "DisableFailed",
                              "Disabled",
                              "Scaling",
                              "ScalingFailed",
                              "Moving"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceState",
                              "modelAsString": true
                            }
                          },
                          "clusteringPolicy": {
                            "type": "string",
                            "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
                            "enum": [
                              "EnterpriseCluster",
                              "OSSCluster",
                              "NoCluster"
                            ],
                            "x-ms-mutability": [
                              "read",
                              "create",
                              "update"
                            ],
                            "x-ms-enum": {
                              "name": "ClusteringPolicy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "EnterpriseCluster",
                                  "name": "EnterpriseCluster",
                                  "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                                },
                                {
                                  "value": "OSSCluster",
                                  "name": "OSSCluster",
                                  "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                                },
                                {
                                  "value": "NoCluster",
                                  "name": "NoCluster",
                                  "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                                }
                              ]
                            }
                          },
                          "evictionPolicy": {
                            "type": "string",
                            "description": "Redis eviction policy - default is VolatileLRU",
                            "enum": [
                              "AllKeysLFU",
                              "AllKeysLRU",
                              "AllKeysRandom",
                              "VolatileLRU",
                              "VolatileLFU",
                              "VolatileTTL",
                              "VolatileRandom",
                              "NoEviction"
                            ],
                            "x-ms-enum": {
                              "name": "EvictionPolicy",
                              "modelAsString": true
                            }
                          },
                          "persistence": {
                            "description": "Persistence settings",
                            "x-ms-identifiers": [],
                            "title": "Persistence settings",
                            "type": "object",
                            "properties": {
                              "aofEnabled": {
                                "type": "boolean",
                                "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                              },
                              "rdbEnabled": {
                                "type": "boolean",
                                "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                              },
                              "aofFrequency": {
                                "type": "string",
                                "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                                "enum": [
                                  "1s",
                                  "always"
                                ],
                                "x-ms-enum": {
                                  "name": "AofFrequency",
                                  "modelAsString": true
                                }
                              },
                              "rdbFrequency": {
                                "type": "string",
                                "description": "Sets the frequency at which a snapshot of the database is created.",
                                "enum": [
                                  "1h",
                                  "6h",
                                  "12h"
                                ],
                                "x-ms-enum": {
                                  "name": "RdbFrequency",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "modules": {
                            "type": "array",
                            "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
                            "items": {
                              "title": "Module settings",
                              "description": "Specifies configuration of a redis module",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ],
                                  "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                                },
                                "args": {
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ],
                                  "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                                },
                                "version": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The version of the module, e.g. '1.0'."
                                }
                              },
                              "required": [
                                "name"
                              ]
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "geoReplication": {
                            "type": "object",
                            "description": "Optional set of properties to configure geo replication for this database.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "groupNickname": {
                                "type": "string",
                                "description": "Name for the group of linked database resources",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "linkedDatabases": {
                                "type": "array",
                                "description": "List of database resources to link with this database",
                                "items": {
                                  "title": "Linked Database",
                                  "description": "Specifies details of a linked database resource.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.Cache/redisEnterprise/databases"
                                          }
                                        ]
                                      },
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ],
                                      "description": "Resource ID of a database resource to link with this database."
                                    },
                                    "state": {
                                      "type": "string",
                                      "description": "State of the link between the database resources.",
                                      "enum": [
                                        "Linked",
                                        "Linking",
                                        "Unlinking",
                                        "LinkFailed",
                                        "UnlinkFailed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "LinkState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "redisVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Version of Redis the database is running on, e.g. '6.0'"
                          },
                          "deferUpgrade": {
                            "type": "string",
                            "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
                            "enum": [
                              "Deferred",
                              "NotDeferred"
                            ],
                            "x-ms-enum": {
                              "name": "DeferUpgradeSetting",
                              "modelAsString": true
                            }
                          },
                          "accessKeysAuthentication": {
                            "type": "string",
                            "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "default": "Disabled",
                            "x-ms-enum": {
                              "name": "accessKeysAuthentication",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "List of databases"
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URI to fetch the next page of results."
                }
              },
              "description": "The response of a list-all operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}": {
      "put": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Create",
        "description": "Creates a database",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Describes a database on the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the database.",
                  "title": "Redis Enterprise database create properties",
                  "type": "object",
                  "properties": {
                    "clientProtocol": {
                      "type": "string",
                      "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
                      "enum": [
                        "Encrypted",
                        "Plaintext"
                      ],
                      "x-ms-enum": {
                        "name": "Protocol",
                        "modelAsString": true
                      }
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the database",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the database",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "clusteringPolicy": {
                      "type": "string",
                      "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
                      "enum": [
                        "EnterpriseCluster",
                        "OSSCluster",
                        "NoCluster"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ],
                      "x-ms-enum": {
                        "name": "ClusteringPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EnterpriseCluster",
                            "name": "EnterpriseCluster",
                            "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                          },
                          {
                            "value": "OSSCluster",
                            "name": "OSSCluster",
                            "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                          },
                          {
                            "value": "NoCluster",
                            "name": "NoCluster",
                            "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                          }
                        ]
                      }
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "Redis eviction policy - default is VolatileLRU",
                      "enum": [
                        "AllKeysLFU",
                        "AllKeysLRU",
                        "AllKeysRandom",
                        "VolatileLRU",
                        "VolatileLFU",
                        "VolatileTTL",
                        "VolatileRandom",
                        "NoEviction"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicy",
                        "modelAsString": true
                      }
                    },
                    "persistence": {
                      "description": "Persistence settings",
                      "x-ms-identifiers": [],
                      "title": "Persistence settings",
                      "type": "object",
                      "properties": {
                        "aofEnabled": {
                          "type": "boolean",
                          "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "rdbEnabled": {
                          "type": "boolean",
                          "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "aofFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                          "enum": [
                            "1s",
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "AofFrequency",
                            "modelAsString": true
                          }
                        },
                        "rdbFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which a snapshot of the database is created.",
                          "enum": [
                            "1h",
                            "6h",
                            "12h"
                          ],
                          "x-ms-enum": {
                            "name": "RdbFrequency",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "modules": {
                      "type": "array",
                      "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
                      "items": {
                        "title": "Module settings",
                        "description": "Specifies configuration of a redis module",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                          },
                          "args": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                          },
                          "version": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The version of the module, e.g. '1.0'."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "geoReplication": {
                      "type": "object",
                      "description": "Optional set of properties to configure geo replication for this database.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "groupNickname": {
                          "type": "string",
                          "description": "Name for the group of linked database resources",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "linkedDatabases": {
                          "type": "array",
                          "description": "List of database resources to link with this database",
                          "items": {
                            "title": "Linked Database",
                            "description": "Specifies details of a linked database resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Cache/redisEnterprise/databases"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource ID of a database resource to link with this database."
                              },
                              "state": {
                                "type": "string",
                                "description": "State of the link between the database resources.",
                                "enum": [
                                  "Linked",
                                  "Linking",
                                  "Unlinking",
                                  "LinkFailed",
                                  "UnlinkFailed"
                                ],
                                "x-ms-enum": {
                                  "name": "LinkState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Redis the database is running on, e.g. '6.0'"
                    },
                    "deferUpgrade": {
                      "type": "string",
                      "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
                      "enum": [
                        "Deferred",
                        "NotDeferred"
                      ],
                      "x-ms-enum": {
                        "name": "DeferUpgradeSetting",
                        "modelAsString": true
                      }
                    },
                    "accessKeysAuthentication": {
                      "type": "string",
                      "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "default": "Disabled",
                      "x-ms-enum": {
                        "name": "accessKeysAuthentication",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to the create or update database operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The database was/is being updated. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "description": "Describes a database on the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the database.",
                  "title": "Redis Enterprise database create properties",
                  "type": "object",
                  "properties": {
                    "clientProtocol": {
                      "type": "string",
                      "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
                      "enum": [
                        "Encrypted",
                        "Plaintext"
                      ],
                      "x-ms-enum": {
                        "name": "Protocol",
                        "modelAsString": true
                      }
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the database",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the database",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "clusteringPolicy": {
                      "type": "string",
                      "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
                      "enum": [
                        "EnterpriseCluster",
                        "OSSCluster",
                        "NoCluster"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ],
                      "x-ms-enum": {
                        "name": "ClusteringPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EnterpriseCluster",
                            "name": "EnterpriseCluster",
                            "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                          },
                          {
                            "value": "OSSCluster",
                            "name": "OSSCluster",
                            "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                          },
                          {
                            "value": "NoCluster",
                            "name": "NoCluster",
                            "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                          }
                        ]
                      }
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "Redis eviction policy - default is VolatileLRU",
                      "enum": [
                        "AllKeysLFU",
                        "AllKeysLRU",
                        "AllKeysRandom",
                        "VolatileLRU",
                        "VolatileLFU",
                        "VolatileTTL",
                        "VolatileRandom",
                        "NoEviction"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicy",
                        "modelAsString": true
                      }
                    },
                    "persistence": {
                      "description": "Persistence settings",
                      "x-ms-identifiers": [],
                      "title": "Persistence settings",
                      "type": "object",
                      "properties": {
                        "aofEnabled": {
                          "type": "boolean",
                          "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "rdbEnabled": {
                          "type": "boolean",
                          "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "aofFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                          "enum": [
                            "1s",
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "AofFrequency",
                            "modelAsString": true
                          }
                        },
                        "rdbFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which a snapshot of the database is created.",
                          "enum": [
                            "1h",
                            "6h",
                            "12h"
                          ],
                          "x-ms-enum": {
                            "name": "RdbFrequency",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "modules": {
                      "type": "array",
                      "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
                      "items": {
                        "title": "Module settings",
                        "description": "Specifies configuration of a redis module",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                          },
                          "args": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                          },
                          "version": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The version of the module, e.g. '1.0'."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "geoReplication": {
                      "type": "object",
                      "description": "Optional set of properties to configure geo replication for this database.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "groupNickname": {
                          "type": "string",
                          "description": "Name for the group of linked database resources",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "linkedDatabases": {
                          "type": "array",
                          "description": "List of database resources to link with this database",
                          "items": {
                            "title": "Linked Database",
                            "description": "Specifies details of a linked database resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Cache/redisEnterprise/databases"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource ID of a database resource to link with this database."
                              },
                              "state": {
                                "type": "string",
                                "description": "State of the link between the database resources.",
                                "enum": [
                                  "Linked",
                                  "Linking",
                                  "Unlinking",
                                  "LinkFailed",
                                  "UnlinkFailed"
                                ],
                                "x-ms-enum": {
                                  "name": "LinkState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Redis the database is running on, e.g. '6.0'"
                    },
                    "deferUpgrade": {
                      "type": "string",
                      "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
                      "enum": [
                        "Deferred",
                        "NotDeferred"
                      ],
                      "x-ms-enum": {
                        "name": "DeferUpgradeSetting",
                        "modelAsString": true
                      }
                    },
                    "accessKeysAuthentication": {
                      "type": "string",
                      "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "default": "Disabled",
                      "x-ms-enum": {
                        "name": "accessKeysAuthentication",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "The database was/is being created. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "description": "Describes a database on the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the database.",
                  "title": "Redis Enterprise database create properties",
                  "type": "object",
                  "properties": {
                    "clientProtocol": {
                      "type": "string",
                      "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
                      "enum": [
                        "Encrypted",
                        "Plaintext"
                      ],
                      "x-ms-enum": {
                        "name": "Protocol",
                        "modelAsString": true
                      }
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the database",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the database",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "clusteringPolicy": {
                      "type": "string",
                      "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
                      "enum": [
                        "EnterpriseCluster",
                        "OSSCluster",
                        "NoCluster"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ],
                      "x-ms-enum": {
                        "name": "ClusteringPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EnterpriseCluster",
                            "name": "EnterpriseCluster",
                            "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                          },
                          {
                            "value": "OSSCluster",
                            "name": "OSSCluster",
                            "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                          },
                          {
                            "value": "NoCluster",
                            "name": "NoCluster",
                            "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                          }
                        ]
                      }
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "Redis eviction policy - default is VolatileLRU",
                      "enum": [
                        "AllKeysLFU",
                        "AllKeysLRU",
                        "AllKeysRandom",
                        "VolatileLRU",
                        "VolatileLFU",
                        "VolatileTTL",
                        "VolatileRandom",
                        "NoEviction"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicy",
                        "modelAsString": true
                      }
                    },
                    "persistence": {
                      "description": "Persistence settings",
                      "x-ms-identifiers": [],
                      "title": "Persistence settings",
                      "type": "object",
                      "properties": {
                        "aofEnabled": {
                          "type": "boolean",
                          "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "rdbEnabled": {
                          "type": "boolean",
                          "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "aofFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                          "enum": [
                            "1s",
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "AofFrequency",
                            "modelAsString": true
                          }
                        },
                        "rdbFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which a snapshot of the database is created.",
                          "enum": [
                            "1h",
                            "6h",
                            "12h"
                          ],
                          "x-ms-enum": {
                            "name": "RdbFrequency",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "modules": {
                      "type": "array",
                      "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
                      "items": {
                        "title": "Module settings",
                        "description": "Specifies configuration of a redis module",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                          },
                          "args": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                          },
                          "version": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The version of the module, e.g. '1.0'."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "geoReplication": {
                      "type": "object",
                      "description": "Optional set of properties to configure geo replication for this database.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "groupNickname": {
                          "type": "string",
                          "description": "Name for the group of linked database resources",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "linkedDatabases": {
                          "type": "array",
                          "description": "List of database resources to link with this database",
                          "items": {
                            "title": "Linked Database",
                            "description": "Specifies details of a linked database resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Cache/redisEnterprise/databases"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource ID of a database resource to link with this database."
                              },
                              "state": {
                                "type": "string",
                                "description": "State of the link between the database resources.",
                                "enum": [
                                  "Linked",
                                  "Linking",
                                  "Unlinking",
                                  "LinkFailed",
                                  "UnlinkFailed"
                                ],
                                "x-ms-enum": {
                                  "name": "LinkState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Redis the database is running on, e.g. '6.0'"
                    },
                    "deferUpgrade": {
                      "type": "string",
                      "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
                      "enum": [
                        "Deferred",
                        "NotDeferred"
                      ],
                      "x-ms-enum": {
                        "name": "DeferUpgradeSetting",
                        "modelAsString": true
                      }
                    },
                    "accessKeysAuthentication": {
                      "type": "string",
                      "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "default": "Disabled",
                      "x-ms-enum": {
                        "name": "accessKeysAuthentication",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Update",
        "description": "Updates a database",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A partial update to the Redis Enterprise database",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the database.",
                  "title": "Redis Enterprise database update properties",
                  "type": "object",
                  "properties": {
                    "clientProtocol": {
                      "type": "string",
                      "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
                      "enum": [
                        "Encrypted",
                        "Plaintext"
                      ],
                      "x-ms-enum": {
                        "name": "Protocol",
                        "modelAsString": true
                      }
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the database",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the database",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "clusteringPolicy": {
                      "type": "string",
                      "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
                      "enum": [
                        "EnterpriseCluster",
                        "OSSCluster",
                        "NoCluster"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ],
                      "x-ms-enum": {
                        "name": "ClusteringPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EnterpriseCluster",
                            "name": "EnterpriseCluster",
                            "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                          },
                          {
                            "value": "OSSCluster",
                            "name": "OSSCluster",
                            "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                          },
                          {
                            "value": "NoCluster",
                            "name": "NoCluster",
                            "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                          }
                        ]
                      }
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "Redis eviction policy - default is VolatileLRU",
                      "enum": [
                        "AllKeysLFU",
                        "AllKeysLRU",
                        "AllKeysRandom",
                        "VolatileLRU",
                        "VolatileLFU",
                        "VolatileTTL",
                        "VolatileRandom",
                        "NoEviction"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicy",
                        "modelAsString": true
                      }
                    },
                    "persistence": {
                      "description": "Persistence settings",
                      "x-ms-identifiers": [],
                      "title": "Persistence settings",
                      "type": "object",
                      "properties": {
                        "aofEnabled": {
                          "type": "boolean",
                          "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "rdbEnabled": {
                          "type": "boolean",
                          "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "aofFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                          "enum": [
                            "1s",
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "AofFrequency",
                            "modelAsString": true
                          }
                        },
                        "rdbFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which a snapshot of the database is created.",
                          "enum": [
                            "1h",
                            "6h",
                            "12h"
                          ],
                          "x-ms-enum": {
                            "name": "RdbFrequency",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "modules": {
                      "type": "array",
                      "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
                      "items": {
                        "title": "Module settings",
                        "description": "Specifies configuration of a redis module",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                          },
                          "args": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                          },
                          "version": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The version of the module, e.g. '1.0'."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "geoReplication": {
                      "type": "object",
                      "description": "Optional set of properties to configure geo replication for this database.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "groupNickname": {
                          "type": "string",
                          "description": "Name for the group of linked database resources",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "linkedDatabases": {
                          "type": "array",
                          "description": "List of database resources to link with this database",
                          "items": {
                            "title": "Linked Database",
                            "description": "Specifies details of a linked database resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Cache/redisEnterprise/databases"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource ID of a database resource to link with this database."
                              },
                              "state": {
                                "type": "string",
                                "description": "State of the link between the database resources.",
                                "enum": [
                                  "Linked",
                                  "Linking",
                                  "Unlinking",
                                  "LinkFailed",
                                  "UnlinkFailed"
                                ],
                                "x-ms-enum": {
                                  "name": "LinkState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Redis the database is running on, e.g. '6.0'"
                    },
                    "deferUpgrade": {
                      "type": "string",
                      "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
                      "enum": [
                        "Deferred",
                        "NotDeferred"
                      ],
                      "x-ms-enum": {
                        "name": "DeferUpgradeSetting",
                        "modelAsString": true
                      }
                    },
                    "accessKeysAuthentication": {
                      "type": "string",
                      "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "accessKeysAuthentication",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to the create or update database operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The database was/is being updated. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "description": "Describes a database on the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the database.",
                  "title": "Redis Enterprise database create properties",
                  "type": "object",
                  "properties": {
                    "clientProtocol": {
                      "type": "string",
                      "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
                      "enum": [
                        "Encrypted",
                        "Plaintext"
                      ],
                      "x-ms-enum": {
                        "name": "Protocol",
                        "modelAsString": true
                      }
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the database",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the database",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "clusteringPolicy": {
                      "type": "string",
                      "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
                      "enum": [
                        "EnterpriseCluster",
                        "OSSCluster",
                        "NoCluster"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ],
                      "x-ms-enum": {
                        "name": "ClusteringPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EnterpriseCluster",
                            "name": "EnterpriseCluster",
                            "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                          },
                          {
                            "value": "OSSCluster",
                            "name": "OSSCluster",
                            "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                          },
                          {
                            "value": "NoCluster",
                            "name": "NoCluster",
                            "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                          }
                        ]
                      }
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "Redis eviction policy - default is VolatileLRU",
                      "enum": [
                        "AllKeysLFU",
                        "AllKeysLRU",
                        "AllKeysRandom",
                        "VolatileLRU",
                        "VolatileLFU",
                        "VolatileTTL",
                        "VolatileRandom",
                        "NoEviction"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicy",
                        "modelAsString": true
                      }
                    },
                    "persistence": {
                      "description": "Persistence settings",
                      "x-ms-identifiers": [],
                      "title": "Persistence settings",
                      "type": "object",
                      "properties": {
                        "aofEnabled": {
                          "type": "boolean",
                          "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "rdbEnabled": {
                          "type": "boolean",
                          "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "aofFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                          "enum": [
                            "1s",
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "AofFrequency",
                            "modelAsString": true
                          }
                        },
                        "rdbFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which a snapshot of the database is created.",
                          "enum": [
                            "1h",
                            "6h",
                            "12h"
                          ],
                          "x-ms-enum": {
                            "name": "RdbFrequency",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "modules": {
                      "type": "array",
                      "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
                      "items": {
                        "title": "Module settings",
                        "description": "Specifies configuration of a redis module",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                          },
                          "args": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                          },
                          "version": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The version of the module, e.g. '1.0'."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "geoReplication": {
                      "type": "object",
                      "description": "Optional set of properties to configure geo replication for this database.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "groupNickname": {
                          "type": "string",
                          "description": "Name for the group of linked database resources",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "linkedDatabases": {
                          "type": "array",
                          "description": "List of database resources to link with this database",
                          "items": {
                            "title": "Linked Database",
                            "description": "Specifies details of a linked database resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Cache/redisEnterprise/databases"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource ID of a database resource to link with this database."
                              },
                              "state": {
                                "type": "string",
                                "description": "State of the link between the database resources.",
                                "enum": [
                                  "Linked",
                                  "Linking",
                                  "Unlinking",
                                  "LinkFailed",
                                  "UnlinkFailed"
                                ],
                                "x-ms-enum": {
                                  "name": "LinkState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Redis the database is running on, e.g. '6.0'"
                    },
                    "deferUpgrade": {
                      "type": "string",
                      "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
                      "enum": [
                        "Deferred",
                        "NotDeferred"
                      ],
                      "x-ms-enum": {
                        "name": "DeferUpgradeSetting",
                        "modelAsString": true
                      }
                    },
                    "accessKeysAuthentication": {
                      "type": "string",
                      "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "default": "Disabled",
                      "x-ms-enum": {
                        "name": "accessKeysAuthentication",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The database update operation was successfully started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Get",
        "description": "Gets information about a database in a Redis Enterprise cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found the database",
            "schema": {
              "description": "Describes a database on the Redis Enterprise cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Other properties of the database.",
                  "title": "Redis Enterprise database create properties",
                  "type": "object",
                  "properties": {
                    "clientProtocol": {
                      "type": "string",
                      "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
                      "enum": [
                        "Encrypted",
                        "Plaintext"
                      ],
                      "x-ms-enum": {
                        "name": "Protocol",
                        "modelAsString": true
                      }
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the database",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceState": {
                      "readOnly": true,
                      "description": "Current resource status of the database",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "CreateFailed",
                        "Updating",
                        "UpdateFailed",
                        "Deleting",
                        "DeleteFailed",
                        "Enabling",
                        "EnableFailed",
                        "Disabling",
                        "DisableFailed",
                        "Disabled",
                        "Scaling",
                        "ScalingFailed",
                        "Moving"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceState",
                        "modelAsString": true
                      }
                    },
                    "clusteringPolicy": {
                      "type": "string",
                      "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
                      "enum": [
                        "EnterpriseCluster",
                        "OSSCluster",
                        "NoCluster"
                      ],
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ],
                      "x-ms-enum": {
                        "name": "ClusteringPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EnterpriseCluster",
                            "name": "EnterpriseCluster",
                            "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                          },
                          {
                            "value": "OSSCluster",
                            "name": "OSSCluster",
                            "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                          },
                          {
                            "value": "NoCluster",
                            "name": "NoCluster",
                            "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                          }
                        ]
                      }
                    },
                    "evictionPolicy": {
                      "type": "string",
                      "description": "Redis eviction policy - default is VolatileLRU",
                      "enum": [
                        "AllKeysLFU",
                        "AllKeysLRU",
                        "AllKeysRandom",
                        "VolatileLRU",
                        "VolatileLFU",
                        "VolatileTTL",
                        "VolatileRandom",
                        "NoEviction"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicy",
                        "modelAsString": true
                      }
                    },
                    "persistence": {
                      "description": "Persistence settings",
                      "x-ms-identifiers": [],
                      "title": "Persistence settings",
                      "type": "object",
                      "properties": {
                        "aofEnabled": {
                          "type": "boolean",
                          "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "rdbEnabled": {
                          "type": "boolean",
                          "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                        },
                        "aofFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                          "enum": [
                            "1s",
                            "always"
                          ],
                          "x-ms-enum": {
                            "name": "AofFrequency",
                            "modelAsString": true
                          }
                        },
                        "rdbFrequency": {
                          "type": "string",
                          "description": "Sets the frequency at which a snapshot of the database is created.",
                          "enum": [
                            "1h",
                            "6h",
                            "12h"
                          ],
                          "x-ms-enum": {
                            "name": "RdbFrequency",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "modules": {
                      "type": "array",
                      "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
                      "items": {
                        "title": "Module settings",
                        "description": "Specifies configuration of a redis module",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                          },
                          "args": {
                            "type": "string",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                          },
                          "version": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The version of the module, e.g. '1.0'."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "geoReplication": {
                      "type": "object",
                      "description": "Optional set of properties to configure geo replication for this database.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "groupNickname": {
                          "type": "string",
                          "description": "Name for the group of linked database resources",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "linkedDatabases": {
                          "type": "array",
                          "description": "List of database resources to link with this database",
                          "items": {
                            "title": "Linked Database",
                            "description": "Specifies details of a linked database resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Cache/redisEnterprise/databases"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource ID of a database resource to link with this database."
                              },
                              "state": {
                                "type": "string",
                                "description": "State of the link between the database resources.",
                                "enum": [
                                  "Linked",
                                  "Linking",
                                  "Unlinking",
                                  "LinkFailed",
                                  "UnlinkFailed"
                                ],
                                "x-ms-enum": {
                                  "name": "LinkState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "redisVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Redis the database is running on, e.g. '6.0'"
                    },
                    "deferUpgrade": {
                      "type": "string",
                      "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
                      "enum": [
                        "Deferred",
                        "NotDeferred"
                      ],
                      "x-ms-enum": {
                        "name": "DeferUpgradeSetting",
                        "modelAsString": true
                      }
                    },
                    "accessKeysAuthentication": {
                      "type": "string",
                      "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "default": "Disabled",
                      "x-ms-enum": {
                        "name": "accessKeysAuthentication",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Delete",
        "description": "Deletes a single database",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "The database delete operation started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "Successfully deleted the database."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/listKeys": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_ListKeys",
        "description": "Retrieves the access keys for the Redis Enterprise database.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The access keys for the specified database.",
            "schema": {
              "title": "Access keys",
              "description": "The secret access keys used for authenticating connections to redis",
              "type": "object",
              "properties": {
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The current primary key that clients can use to authenticate"
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The current secondary key that clients can use to authenticate"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/regenerateKey": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_RegenerateKey",
        "description": "Regenerates the Redis Enterprise database's access keys.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "title": "Regenerate access keys request",
              "type": "object",
              "properties": {
                "keyType": {
                  "type": "string",
                  "description": "Which access key to regenerate.",
                  "enum": [
                    "Primary",
                    "Secondary"
                  ],
                  "x-ms-enum": {
                    "name": "AccessKeyType",
                    "modelAsString": false
                  }
                }
              },
              "required": [
                "keyType"
              ],
              "description": "Specifies which access keys to reset to a new random value."
            },
            "description": "Specifies which key to regenerate."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new access keys for the database",
            "schema": {
              "title": "Access keys",
              "description": "The secret access keys used for authenticating connections to redis",
              "type": "object",
              "properties": {
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The current primary key that clients can use to authenticate"
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The current secondary key that clients can use to authenticate"
                }
              }
            }
          },
          "202": {
            "description": "The cluster update operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/import": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Import",
        "description": "Imports database files to target database.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "title": "Import RDB files into a target database",
              "type": "object",
              "properties": {
                "sasUris": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "SAS URIs for the target blobs to import from",
                  "x-ms-secret": true
                }
              },
              "required": [
                "sasUris"
              ],
              "description": "Parameters for a Redis Enterprise import operation."
            },
            "description": "Storage information for importing into the cluster"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Import operation succeeded."
          },
          "202": {
            "description": "The import operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/export": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Export",
        "description": "Exports a database file from target database.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "title": "Export an RDB file into a target database",
              "type": "object",
              "properties": {
                "sasUri": {
                  "type": "string",
                  "description": "SAS URI for the target directory to export to",
                  "x-ms-secret": true
                }
              },
              "required": [
                "sasUri"
              ],
              "description": "Parameters for a Redis Enterprise export operation."
            },
            "description": "Storage information for exporting into the cluster"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Export operation succeeded."
          },
          "202": {
            "description": "Export operation successfully enqueued; follow the Location header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/accessPolicyAssignments/{accessPolicyAssignmentName}": {
      "put": {
        "tags": [
          "RedisEnterprise",
          "Databases",
          "AccessPolicyAssignments"
        ],
        "operationId": "AccessPolicyAssignment_CreateUpdate",
        "description": "Creates/Updates a particular access policy assignment for a database",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accessPolicyAssignmentName",
            "pattern": "^[A-Za-z0-9]{1,60}$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database access policy assignment.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Describes the access policy assignment of Redis Enterprise database",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the access policy assignment.",
                  "title": "Redis Enterprise database access policy assignment properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the access policy assignment.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicyName": {
                      "type": "string",
                      "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
                      "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "objectId": {
                          "type": "string",
                          "description": "The object ID of the user.",
                          "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
                        }
                      },
                      "description": "The user associated with the access policy."
                    }
                  },
                  "required": [
                    "user",
                    "accessPolicyName"
                  ]
                }
              }
            },
            "description": "Parameters supplied to the create access policy assignment for database."
          }
        ],
        "responses": {
          "200": {
            "description": "The database access policy assignment is being created. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "description": "Describes the access policy assignment of Redis Enterprise database",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the access policy assignment.",
                  "title": "Redis Enterprise database access policy assignment properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the access policy assignment.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicyName": {
                      "type": "string",
                      "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
                      "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "objectId": {
                          "type": "string",
                          "description": "The object ID of the user.",
                          "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
                        }
                      },
                      "description": "The user associated with the access policy."
                    }
                  },
                  "required": [
                    "user",
                    "accessPolicyName"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "The database access policy assignment is being created. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "description": "Describes the access policy assignment of Redis Enterprise database",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the access policy assignment.",
                  "title": "Redis Enterprise database access policy assignment properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the access policy assignment.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicyName": {
                      "type": "string",
                      "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
                      "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "objectId": {
                          "type": "string",
                          "description": "The object ID of the user.",
                          "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
                        }
                      },
                      "description": "The user associated with the access policy."
                    }
                  },
                  "required": [
                    "user",
                    "accessPolicyName"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "RedisEnterprise",
          "Databases",
          "AccessPolicyAssignments"
        ],
        "operationId": "AccessPolicyAssignment_Get",
        "description": "Gets information about access policy assignment for database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accessPolicyAssignmentName",
            "pattern": "^[A-Za-z0-9]{1,60}$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database access policy assignment.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found the access policy assignment",
            "schema": {
              "description": "Describes the access policy assignment of Redis Enterprise database",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the access policy assignment.",
                  "title": "Redis Enterprise database access policy assignment properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "Current provisioning status of the access policy assignment.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "accessPolicyName": {
                      "type": "string",
                      "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
                      "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "objectId": {
                          "type": "string",
                          "description": "The object ID of the user.",
                          "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
                        }
                      },
                      "description": "The user associated with the access policy."
                    }
                  },
                  "required": [
                    "user",
                    "accessPolicyName"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RedisEnterprise",
          "Databases",
          "AccessPolicyAssignments"
        ],
        "operationId": "AccessPolicyAssignment_Delete",
        "description": "Deletes a single access policy assignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accessPolicyAssignmentName",
            "pattern": "^[A-Za-z0-9]{1,60}$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database access policy assignment.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The access policy assignment delete operation started for database. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "Successfully deleted the access policy assignment."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/accessPolicyAssignments": {
      "get": {
        "tags": [
          "RedisEnterprise",
          "Databases",
          "AccessPolicyAssignments"
        ],
        "operationId": "AccessPolicyAssignment_List",
        "description": "Gets all access policy assignments..",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of access policy assignment.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Describes the access policy assignment of Redis Enterprise database",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the access policy assignment.",
                        "title": "Redis Enterprise database access policy assignment properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "description": "Current provisioning status of the access policy assignment.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Updating",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "accessPolicyName": {
                            "type": "string",
                            "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "objectId": {
                                "type": "string",
                                "description": "The object ID of the user.",
                                "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
                              }
                            },
                            "description": "The user associated with the access policy."
                          }
                        },
                        "required": [
                          "user",
                          "accessPolicyName"
                        ]
                      }
                    }
                  },
                  "description": "List of access policy assignments."
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URI to fetch the next page of results."
                }
              },
              "description": "The response of a list-all operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/listSkusForScaling": {
      "post": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_ListSkusForScaling",
        "description": "Lists the available SKUs for scaling the Redis Enterprise cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the available SKUs for scaling up or scaling down.",
            "schema": {
              "type": "object",
              "properties": {
                "skus": {
                  "type": "array",
                  "items": {
                    "title": "SKU details",
                    "description": "Details of a Redis Enterprise cluster SKU.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the SKU."
                      },
                      "sizeInGB": {
                        "readOnly": true,
                        "type": "number",
                        "description": "The cache size in GB."
                      }
                    }
                  },
                  "description": "List of SKUS available to scale up or scale down."
                }
              },
              "description": "The response of a listSkusForScaling operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "Lists all the private endpoint connections associated with the Redis Enterprise cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully retrieved private endpoint connections.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private endpoint connections",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The resource of private end point.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The ARM identifier for Private Endpoint"
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      }
                    },
                    "description": "The Private Endpoint Connection resource."
                  }
                }
              },
              "description": "List of private endpoint connection associated with the specified storage account"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the Redis Enterprise cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the private endpoint connection properties successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Put",
        "description": "Updates the state of the specified private endpoint connection associated with the Redis Enterprise cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "201": {
            "description": "OK -- Update the private endpoint connection properties successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the Redis Enterprise cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the private endpoint connection successfully."
          },
          "202": {
            "description": "Deletion of specified private endpoint connection was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByCluster",
        "description": "Gets the private link resources that need to be created for a Redis Enterprise cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The private link resource Private link DNS zone name."
                          }
                        }
                      }
                    },
                    "description": "A private link resource"
                  }
                }
              },
              "description": "A list of private link resources"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/forceUnlink": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_ForceUnlink",
        "description": "Forcibly removes the link to the specified database resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "title": "Forcibly unlink another database from this database.",
              "description": "Parameters for a Redis Enterprise Active Geo Replication Force Unlink operation.",
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Cache/redisEnterprise/databases"
                        }
                      ]
                    }
                  },
                  "description": "The resource IDs of the database resources to be unlinked."
                }
              },
              "required": [
                "ids"
              ]
            },
            "description": "Information identifying the database to be unlinked."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Force unlink operation succeeded. The unlinked database must be deleted before it can be recreated and linked again."
          },
          "202": {
            "description": "Force unlink operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/forceLinkToReplicationGroup": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_ForceLinkToReplicationGroup",
        "description": "Forcibly recreates an existing database on the specified cluster, and rejoins it to an existing replication group. **IMPORTANT NOTE:** All data in this database will be discarded, and the database will temporarily be unavailable while rejoining the replication group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters for reconfiguring active geo-replication, of an existing database that was previously unlinked from a replication group.",
              "required": [
                "geoReplication"
              ],
              "properties": {
                "geoReplication": {
                  "type": "object",
                  "description": "Properties to configure geo replication for this database.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "groupNickname": {
                      "type": "string",
                      "description": "The name of the group of linked database resources. This should match the existing replication group name.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "linkedDatabases": {
                      "type": "array",
                      "description": "The resource IDs of the databases that are expected to be linked and included in the replication group. This parameter is used to validate that the linking is to the expected (unlinked) part of the replication group, if it is splintered.",
                      "items": {
                        "title": "Linked Database",
                        "description": "Specifies details of a linked database resource.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Cache/redisEnterprise/databases"
                                }
                              ]
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Resource ID of a database resource to link with this database."
                          },
                          "state": {
                            "type": "string",
                            "description": "State of the link between the database resources.",
                            "enum": [
                              "Linked",
                              "Linking",
                              "Unlinking",
                              "LinkFailed",
                              "UnlinkFailed"
                            ],
                            "x-ms-enum": {
                              "name": "LinkState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Information identifying the database to be unlinked."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Force link operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/flush": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Flush",
        "description": "Flushes all the keys in this database and also from its linked databases.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "title": "Flush all the keys from the current and all its linked databases.",
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Cache/redisEnterprise/databases"
                        }
                      ]
                    }
                  },
                  "description": "The identifiers of all the other database resources in the georeplication group to be flushed."
                }
              },
              "description": "Parameters for a Redis Enterprise active geo-replication flush operation"
            },
            "description": "Information identifying the databases to be flushed"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Flush operation succeeded. All the keys are cleared in this and all its linked databases."
          },
          "202": {
            "description": "Flush operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/upgradeDBRedisVersion": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_UpgradeDBRedisVersion",
        "description": "Upgrades the database Redis version to the latest available.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Redis Enterprise database.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Upgrade operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Kind": {
      "type": "string",
      "readOnly": true,
      "description": "Distinguishes the kind of cluster. Read-only.",
      "enum": [
        "v1",
        "v2"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true
      }
    },
    "Sku": {
      "description": "SKU parameters supplied to the create Redis Enterprise cluster operation.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
          "enum": [
            "Enterprise_E1",
            "Enterprise_E5",
            "Enterprise_E10",
            "Enterprise_E20",
            "Enterprise_E50",
            "Enterprise_E100",
            "Enterprise_E200",
            "Enterprise_E400",
            "EnterpriseFlash_F300",
            "EnterpriseFlash_F700",
            "EnterpriseFlash_F1500",
            "Balanced_B0",
            "Balanced_B1",
            "Balanced_B3",
            "Balanced_B5",
            "Balanced_B10",
            "Balanced_B20",
            "Balanced_B50",
            "Balanced_B100",
            "Balanced_B150",
            "Balanced_B250",
            "Balanced_B350",
            "Balanced_B500",
            "Balanced_B700",
            "Balanced_B1000",
            "MemoryOptimized_M10",
            "MemoryOptimized_M20",
            "MemoryOptimized_M50",
            "MemoryOptimized_M100",
            "MemoryOptimized_M150",
            "MemoryOptimized_M250",
            "MemoryOptimized_M350",
            "MemoryOptimized_M500",
            "MemoryOptimized_M700",
            "MemoryOptimized_M1000",
            "MemoryOptimized_M1500",
            "MemoryOptimized_M2000",
            "ComputeOptimized_X3",
            "ComputeOptimized_X5",
            "ComputeOptimized_X10",
            "ComputeOptimized_X20",
            "ComputeOptimized_X50",
            "ComputeOptimized_X100",
            "ComputeOptimized_X150",
            "ComputeOptimized_X250",
            "ComputeOptimized_X350",
            "ComputeOptimized_X500",
            "ComputeOptimized_X700",
            "FlashOptimized_A250",
            "FlashOptimized_A500",
            "FlashOptimized_A700",
            "FlashOptimized_A1000",
            "FlashOptimized_A1500",
            "FlashOptimized_A2000",
            "FlashOptimized_A4500"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
        }
      },
      "required": [
        "name"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "Current provisioning status",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ResourceState": {
      "type": "string",
      "readOnly": true,
      "description": "Current resource status",
      "enum": [
        "Running",
        "Creating",
        "CreateFailed",
        "Updating",
        "UpdateFailed",
        "Deleting",
        "DeleteFailed",
        "Enabling",
        "EnableFailed",
        "Disabling",
        "DisableFailed",
        "Disabled",
        "Scaling",
        "ScalingFailed",
        "Moving"
      ],
      "x-ms-enum": {
        "name": "ResourceState",
        "modelAsString": true
      }
    },
    "Cluster": {
      "description": "Describes the Redis Enterprise cluster",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "kind": {
          "type": "string",
          "readOnly": true,
          "description": "Distinguishes the kind of cluster. Read-only.",
          "enum": [
            "v1",
            "v2"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          }
        },
        "sku": {
          "description": "The SKU to create, which affects price, performance, and features.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
              "enum": [
                "Enterprise_E1",
                "Enterprise_E5",
                "Enterprise_E10",
                "Enterprise_E20",
                "Enterprise_E50",
                "Enterprise_E100",
                "Enterprise_E200",
                "Enterprise_E400",
                "EnterpriseFlash_F300",
                "EnterpriseFlash_F700",
                "EnterpriseFlash_F1500",
                "Balanced_B0",
                "Balanced_B1",
                "Balanced_B3",
                "Balanced_B5",
                "Balanced_B10",
                "Balanced_B20",
                "Balanced_B50",
                "Balanced_B100",
                "Balanced_B150",
                "Balanced_B250",
                "Balanced_B350",
                "Balanced_B500",
                "Balanced_B700",
                "Balanced_B1000",
                "MemoryOptimized_M10",
                "MemoryOptimized_M20",
                "MemoryOptimized_M50",
                "MemoryOptimized_M100",
                "MemoryOptimized_M150",
                "MemoryOptimized_M250",
                "MemoryOptimized_M350",
                "MemoryOptimized_M500",
                "MemoryOptimized_M700",
                "MemoryOptimized_M1000",
                "MemoryOptimized_M1500",
                "MemoryOptimized_M2000",
                "ComputeOptimized_X3",
                "ComputeOptimized_X5",
                "ComputeOptimized_X10",
                "ComputeOptimized_X20",
                "ComputeOptimized_X50",
                "ComputeOptimized_X100",
                "ComputeOptimized_X150",
                "ComputeOptimized_X250",
                "ComputeOptimized_X350",
                "ComputeOptimized_X500",
                "ComputeOptimized_X700",
                "FlashOptimized_A250",
                "FlashOptimized_A500",
                "FlashOptimized_A700",
                "FlashOptimized_A1000",
                "FlashOptimized_A1500",
                "FlashOptimized_A2000",
                "FlashOptimized_A4500"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
            }
          },
          "required": [
            "name"
          ]
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Availability Zones where this cluster will be deployed."
        },
        "identity": {
          "description": "The identity of the resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Other properties of the cluster.",
          "title": "Redis Enterprise cluster properties for create operations",
          "type": "object",
          "properties": {
            "highAvailability": {
              "type": "string",
              "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "HighAvailability",
                "modelAsString": true
              }
            },
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "encryption": {
              "type": "object",
              "description": "Encryption-at-rest configuration for the cluster.",
              "properties": {
                "customerManagedKeyEncryption": {
                  "type": "object",
                  "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                  "properties": {
                    "keyEncryptionKeyIdentity": {
                      "type": "object",
                      "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                      "properties": {
                        "userAssignedIdentityResourceId": {
                          "type": "string",
                          "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                        },
                        "identityType": {
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity"
                          ],
                          "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                          "x-ms-enum": {
                            "name": "CmkIdentityType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                    }
                  }
                }
              }
            },
            "hostName": {
              "type": "string",
              "readOnly": true,
              "description": "DNS name of the cluster endpoint"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the cluster",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "redundancyMode": {
              "type": "string",
              "readOnly": true,
              "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
              "enum": [
                "None",
                "LR",
                "ZR"
              ],
              "x-ms-enum": {
                "name": "RedundancyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "No redundancy. Availability loss will occur."
                  },
                  {
                    "name": "LR",
                    "value": "LR",
                    "description": "Local redundancy with high availability."
                  },
                  {
                    "name": "ZR",
                    "value": "ZR",
                    "description": "Zone redundant. Higher availability."
                  }
                ]
              }
            },
            "resourceState": {
              "readOnly": true,
              "description": "Current resource status of the cluster",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "CreateFailed",
                "Updating",
                "UpdateFailed",
                "Deleting",
                "DeleteFailed",
                "Enabling",
                "EnableFailed",
                "Disabling",
                "DisableFailed",
                "Disabled",
                "Scaling",
                "ScalingFailed",
                "Moving"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true
              }
            },
            "redisVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of redis the cluster supports, e.g. '6'"
            },
            "privateEndpointConnections": {
              "type": "array",
              "readOnly": true,
              "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "x-nullable": true
            }
          },
          "required": [
            "publicNetworkAccess"
          ]
        }
      },
      "required": [
        "sku"
      ]
    },
    "ClusterUpdate": {
      "description": "A partial update to the Redis Enterprise cluster",
      "type": "object",
      "properties": {
        "sku": {
          "description": "The SKU to create, which affects price, performance, and features.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
              "enum": [
                "Enterprise_E1",
                "Enterprise_E5",
                "Enterprise_E10",
                "Enterprise_E20",
                "Enterprise_E50",
                "Enterprise_E100",
                "Enterprise_E200",
                "Enterprise_E400",
                "EnterpriseFlash_F300",
                "EnterpriseFlash_F700",
                "EnterpriseFlash_F1500",
                "Balanced_B0",
                "Balanced_B1",
                "Balanced_B3",
                "Balanced_B5",
                "Balanced_B10",
                "Balanced_B20",
                "Balanced_B50",
                "Balanced_B100",
                "Balanced_B150",
                "Balanced_B250",
                "Balanced_B350",
                "Balanced_B500",
                "Balanced_B700",
                "Balanced_B1000",
                "MemoryOptimized_M10",
                "MemoryOptimized_M20",
                "MemoryOptimized_M50",
                "MemoryOptimized_M100",
                "MemoryOptimized_M150",
                "MemoryOptimized_M250",
                "MemoryOptimized_M350",
                "MemoryOptimized_M500",
                "MemoryOptimized_M700",
                "MemoryOptimized_M1000",
                "MemoryOptimized_M1500",
                "MemoryOptimized_M2000",
                "ComputeOptimized_X3",
                "ComputeOptimized_X5",
                "ComputeOptimized_X10",
                "ComputeOptimized_X20",
                "ComputeOptimized_X50",
                "ComputeOptimized_X100",
                "ComputeOptimized_X150",
                "ComputeOptimized_X250",
                "ComputeOptimized_X350",
                "ComputeOptimized_X500",
                "ComputeOptimized_X700",
                "FlashOptimized_A250",
                "FlashOptimized_A500",
                "FlashOptimized_A700",
                "FlashOptimized_A1000",
                "FlashOptimized_A1500",
                "FlashOptimized_A2000",
                "FlashOptimized_A4500"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
            }
          },
          "required": [
            "name"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Other properties of the cluster.",
          "title": "Redis Enterprise cluster properties for update operations",
          "type": "object",
          "properties": {
            "highAvailability": {
              "type": "string",
              "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "HighAvailability",
                "modelAsString": true
              }
            },
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "encryption": {
              "type": "object",
              "description": "Encryption-at-rest configuration for the cluster.",
              "properties": {
                "customerManagedKeyEncryption": {
                  "type": "object",
                  "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                  "properties": {
                    "keyEncryptionKeyIdentity": {
                      "type": "object",
                      "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                      "properties": {
                        "userAssignedIdentityResourceId": {
                          "type": "string",
                          "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                        },
                        "identityType": {
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity"
                          ],
                          "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                          "x-ms-enum": {
                            "name": "CmkIdentityType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                    }
                  }
                }
              }
            },
            "hostName": {
              "type": "string",
              "readOnly": true,
              "description": "DNS name of the cluster endpoint"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the cluster",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "redundancyMode": {
              "type": "string",
              "readOnly": true,
              "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
              "enum": [
                "None",
                "LR",
                "ZR"
              ],
              "x-ms-enum": {
                "name": "RedundancyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "No redundancy. Availability loss will occur."
                  },
                  {
                    "name": "LR",
                    "value": "LR",
                    "description": "Local redundancy with high availability."
                  },
                  {
                    "name": "ZR",
                    "value": "ZR",
                    "description": "Zone redundant. Higher availability."
                  }
                ]
              }
            },
            "resourceState": {
              "readOnly": true,
              "description": "Current resource status of the cluster",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "CreateFailed",
                "Updating",
                "UpdateFailed",
                "Deleting",
                "DeleteFailed",
                "Enabling",
                "EnableFailed",
                "Disabling",
                "DisableFailed",
                "Disabled",
                "Scaling",
                "ScalingFailed",
                "Moving"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true
              }
            },
            "redisVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of redis the cluster supports, e.g. '6'"
            },
            "privateEndpointConnections": {
              "type": "array",
              "readOnly": true,
              "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "x-nullable": true
            }
          }
        },
        "identity": {
          "description": "The identity of the resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      }
    },
    "ClusterCommonProperties": {
      "title": "Redis Enterprise cluster properties",
      "description": "Properties of Redis Enterprise clusters, as opposed to general resource properties like location, tags",
      "type": "object",
      "properties": {
        "highAvailability": {
          "type": "string",
          "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "HighAvailability",
            "modelAsString": true
          }
        },
        "minimumTlsVersion": {
          "type": "string",
          "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "encryption": {
          "type": "object",
          "description": "Encryption-at-rest configuration for the cluster.",
          "properties": {
            "customerManagedKeyEncryption": {
              "type": "object",
              "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
              "properties": {
                "keyEncryptionKeyIdentity": {
                  "type": "object",
                  "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                  "properties": {
                    "userAssignedIdentityResourceId": {
                      "type": "string",
                      "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                    },
                    "identityType": {
                      "type": "string",
                      "enum": [
                        "systemAssignedIdentity",
                        "userAssignedIdentity"
                      ],
                      "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                      "x-ms-enum": {
                        "name": "CmkIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "keyEncryptionKeyUrl": {
                  "type": "string",
                  "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                }
              }
            }
          }
        },
        "hostName": {
          "type": "string",
          "readOnly": true,
          "description": "DNS name of the cluster endpoint"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Current provisioning status of the cluster",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "redundancyMode": {
          "type": "string",
          "readOnly": true,
          "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
          "enum": [
            "None",
            "LR",
            "ZR"
          ],
          "x-ms-enum": {
            "name": "RedundancyMode",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No redundancy. Availability loss will occur."
              },
              {
                "name": "LR",
                "value": "LR",
                "description": "Local redundancy with high availability."
              },
              {
                "name": "ZR",
                "value": "ZR",
                "description": "Zone redundant. Higher availability."
              }
            ]
          }
        },
        "resourceState": {
          "readOnly": true,
          "description": "Current resource status of the cluster",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "CreateFailed",
            "Updating",
            "UpdateFailed",
            "Deleting",
            "DeleteFailed",
            "Enabling",
            "EnableFailed",
            "Disabling",
            "DisableFailed",
            "Disabled",
            "Scaling",
            "ScalingFailed",
            "Moving"
          ],
          "x-ms-enum": {
            "name": "ResourceState",
            "modelAsString": true
          }
        },
        "redisVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Version of redis the cluster supports, e.g. '6'"
        },
        "privateEndpointConnections": {
          "type": "array",
          "readOnly": true,
          "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            },
            "description": "The Private Endpoint Connection resource."
          }
        }
      }
    },
    "ClusterCreateProperties": {
      "title": "Redis Enterprise cluster properties for create operations",
      "description": "Properties of Redis Enterprise clusters for create operations",
      "type": "object",
      "allOf": [
        {
          "title": "Redis Enterprise cluster properties",
          "description": "Properties of Redis Enterprise clusters, as opposed to general resource properties like location, tags",
          "type": "object",
          "properties": {
            "highAvailability": {
              "type": "string",
              "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "HighAvailability",
                "modelAsString": true
              }
            },
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "encryption": {
              "type": "object",
              "description": "Encryption-at-rest configuration for the cluster.",
              "properties": {
                "customerManagedKeyEncryption": {
                  "type": "object",
                  "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                  "properties": {
                    "keyEncryptionKeyIdentity": {
                      "type": "object",
                      "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                      "properties": {
                        "userAssignedIdentityResourceId": {
                          "type": "string",
                          "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                        },
                        "identityType": {
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity"
                          ],
                          "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                          "x-ms-enum": {
                            "name": "CmkIdentityType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                    }
                  }
                }
              }
            },
            "hostName": {
              "type": "string",
              "readOnly": true,
              "description": "DNS name of the cluster endpoint"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the cluster",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "redundancyMode": {
              "type": "string",
              "readOnly": true,
              "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
              "enum": [
                "None",
                "LR",
                "ZR"
              ],
              "x-ms-enum": {
                "name": "RedundancyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "No redundancy. Availability loss will occur."
                  },
                  {
                    "name": "LR",
                    "value": "LR",
                    "description": "Local redundancy with high availability."
                  },
                  {
                    "name": "ZR",
                    "value": "ZR",
                    "description": "Zone redundant. Higher availability."
                  }
                ]
              }
            },
            "resourceState": {
              "readOnly": true,
              "description": "Current resource status of the cluster",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "CreateFailed",
                "Updating",
                "UpdateFailed",
                "Deleting",
                "DeleteFailed",
                "Enabling",
                "EnableFailed",
                "Disabling",
                "DisableFailed",
                "Disabled",
                "Scaling",
                "ScalingFailed",
                "Moving"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true
              }
            },
            "redisVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of redis the cluster supports, e.g. '6'"
            },
            "privateEndpointConnections": {
              "type": "array",
              "readOnly": true,
              "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              }
            }
          }
        }
      ],
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "x-nullable": true
        }
      },
      "required": [
        "publicNetworkAccess"
      ]
    },
    "ClusterUpdateProperties": {
      "title": "Redis Enterprise cluster properties for update operations",
      "description": "Properties of Redis Enterprise clusters for update operations",
      "type": "object",
      "allOf": [
        {
          "title": "Redis Enterprise cluster properties",
          "description": "Properties of Redis Enterprise clusters, as opposed to general resource properties like location, tags",
          "type": "object",
          "properties": {
            "highAvailability": {
              "type": "string",
              "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "HighAvailability",
                "modelAsString": true
              }
            },
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "encryption": {
              "type": "object",
              "description": "Encryption-at-rest configuration for the cluster.",
              "properties": {
                "customerManagedKeyEncryption": {
                  "type": "object",
                  "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                  "properties": {
                    "keyEncryptionKeyIdentity": {
                      "type": "object",
                      "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                      "properties": {
                        "userAssignedIdentityResourceId": {
                          "type": "string",
                          "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                        },
                        "identityType": {
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity"
                          ],
                          "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                          "x-ms-enum": {
                            "name": "CmkIdentityType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                    }
                  }
                }
              }
            },
            "hostName": {
              "type": "string",
              "readOnly": true,
              "description": "DNS name of the cluster endpoint"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the cluster",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "redundancyMode": {
              "type": "string",
              "readOnly": true,
              "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
              "enum": [
                "None",
                "LR",
                "ZR"
              ],
              "x-ms-enum": {
                "name": "RedundancyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "No redundancy. Availability loss will occur."
                  },
                  {
                    "name": "LR",
                    "value": "LR",
                    "description": "Local redundancy with high availability."
                  },
                  {
                    "name": "ZR",
                    "value": "ZR",
                    "description": "Zone redundant. Higher availability."
                  }
                ]
              }
            },
            "resourceState": {
              "readOnly": true,
              "description": "Current resource status of the cluster",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "CreateFailed",
                "Updating",
                "UpdateFailed",
                "Deleting",
                "DeleteFailed",
                "Enabling",
                "EnableFailed",
                "Disabling",
                "DisableFailed",
                "Disabled",
                "Scaling",
                "ScalingFailed",
                "Moving"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true
              }
            },
            "redisVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of redis the cluster supports, e.g. '6'"
            },
            "privateEndpointConnections": {
              "type": "array",
              "readOnly": true,
              "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              }
            }
          }
        }
      ],
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "x-nullable": true
        }
      }
    },
    "ClusterList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Describes the Redis Enterprise cluster",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "kind": {
                "type": "string",
                "readOnly": true,
                "description": "Distinguishes the kind of cluster. Read-only.",
                "enum": [
                  "v1",
                  "v2"
                ],
                "x-ms-enum": {
                  "name": "Kind",
                  "modelAsString": true
                }
              },
              "sku": {
                "description": "The SKU to create, which affects price, performance, and features.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The level of Redis Enterprise cluster to deploy. Possible values: ('Balanced_B5', 'MemoryOptimized_M10', 'ComputeOptimized_X5', etc.). For more information on SKUs see the latest pricing documentation. Note that additional SKUs may become supported in the future.",
                    "enum": [
                      "Enterprise_E1",
                      "Enterprise_E5",
                      "Enterprise_E10",
                      "Enterprise_E20",
                      "Enterprise_E50",
                      "Enterprise_E100",
                      "Enterprise_E200",
                      "Enterprise_E400",
                      "EnterpriseFlash_F300",
                      "EnterpriseFlash_F700",
                      "EnterpriseFlash_F1500",
                      "Balanced_B0",
                      "Balanced_B1",
                      "Balanced_B3",
                      "Balanced_B5",
                      "Balanced_B10",
                      "Balanced_B20",
                      "Balanced_B50",
                      "Balanced_B100",
                      "Balanced_B150",
                      "Balanced_B250",
                      "Balanced_B350",
                      "Balanced_B500",
                      "Balanced_B700",
                      "Balanced_B1000",
                      "MemoryOptimized_M10",
                      "MemoryOptimized_M20",
                      "MemoryOptimized_M50",
                      "MemoryOptimized_M100",
                      "MemoryOptimized_M150",
                      "MemoryOptimized_M250",
                      "MemoryOptimized_M350",
                      "MemoryOptimized_M500",
                      "MemoryOptimized_M700",
                      "MemoryOptimized_M1000",
                      "MemoryOptimized_M1500",
                      "MemoryOptimized_M2000",
                      "ComputeOptimized_X3",
                      "ComputeOptimized_X5",
                      "ComputeOptimized_X10",
                      "ComputeOptimized_X20",
                      "ComputeOptimized_X50",
                      "ComputeOptimized_X100",
                      "ComputeOptimized_X150",
                      "ComputeOptimized_X250",
                      "ComputeOptimized_X350",
                      "ComputeOptimized_X500",
                      "ComputeOptimized_X700",
                      "FlashOptimized_A250",
                      "FlashOptimized_A500",
                      "FlashOptimized_A700",
                      "FlashOptimized_A1000",
                      "FlashOptimized_A1500",
                      "FlashOptimized_A2000",
                      "FlashOptimized_A4500"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": true
                    }
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "This property is only used with Enterprise and EnterpriseFlash SKUs. Determines the size of the cluster. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "zones": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The Availability Zones where this cluster will be deployed."
              },
              "identity": {
                "description": "The identity of the resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Other properties of the cluster.",
                "title": "Redis Enterprise cluster properties for create operations",
                "type": "object",
                "properties": {
                  "highAvailability": {
                    "type": "string",
                    "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "HighAvailability",
                      "modelAsString": true
                    }
                  },
                  "minimumTlsVersion": {
                    "type": "string",
                    "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
                    "enum": [
                      "1.0",
                      "1.1",
                      "1.2"
                    ],
                    "x-ms-enum": {
                      "name": "TlsVersion",
                      "modelAsString": true
                    }
                  },
                  "encryption": {
                    "type": "object",
                    "description": "Encryption-at-rest configuration for the cluster.",
                    "properties": {
                      "customerManagedKeyEncryption": {
                        "type": "object",
                        "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
                        "properties": {
                          "keyEncryptionKeyIdentity": {
                            "type": "object",
                            "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                            "properties": {
                              "userAssignedIdentityResourceId": {
                                "type": "string",
                                "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                              },
                              "identityType": {
                                "type": "string",
                                "enum": [
                                  "systemAssignedIdentity",
                                  "userAssignedIdentity"
                                ],
                                "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                                "x-ms-enum": {
                                  "name": "CmkIdentityType",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "keyEncryptionKeyUrl": {
                            "type": "string",
                            "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                          }
                        }
                      }
                    }
                  },
                  "hostName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "DNS name of the cluster endpoint"
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Current provisioning status of the cluster",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Updating",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "redundancyMode": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
                    "enum": [
                      "None",
                      "LR",
                      "ZR"
                    ],
                    "x-ms-enum": {
                      "name": "RedundancyMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No redundancy. Availability loss will occur."
                        },
                        {
                          "name": "LR",
                          "value": "LR",
                          "description": "Local redundancy with high availability."
                        },
                        {
                          "name": "ZR",
                          "value": "ZR",
                          "description": "Zone redundant. Higher availability."
                        }
                      ]
                    }
                  },
                  "resourceState": {
                    "readOnly": true,
                    "description": "Current resource status of the cluster",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "CreateFailed",
                      "Updating",
                      "UpdateFailed",
                      "Deleting",
                      "DeleteFailed",
                      "Enabling",
                      "EnableFailed",
                      "Disabling",
                      "DisableFailed",
                      "Disabled",
                      "Scaling",
                      "ScalingFailed",
                      "Moving"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceState",
                      "modelAsString": true
                    }
                  },
                  "redisVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Version of redis the cluster supports, e.g. '6'"
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "readOnly": true,
                    "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Resource properties.",
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The resource of private end point.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The ARM identifier for Private Endpoint"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      },
                      "description": "The Private Endpoint Connection resource."
                    }
                  },
                  "publicNetworkAccess": {
                    "type": "string",
                    "description": "Whether or not public network traffic can access the Redis cluster. Only 'Enabled' or 'Disabled' can be set. null is returned only for clusters created using an old API version which do not have this property and cannot be set.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "x-nullable": true
                  }
                },
                "required": [
                  "publicNetworkAccess"
                ]
              }
            },
            "required": [
              "sku"
            ]
          },
          "description": "List of clusters."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URI to fetch the next page of results."
        }
      },
      "description": "The response of a list-all operation."
    },
    "Database": {
      "description": "Describes a database on the Redis Enterprise cluster",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Other properties of the database.",
          "title": "Redis Enterprise database create properties",
          "type": "object",
          "properties": {
            "clientProtocol": {
              "type": "string",
              "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
              "enum": [
                "Encrypted",
                "Plaintext"
              ],
              "x-ms-enum": {
                "name": "Protocol",
                "modelAsString": true
              }
            },
            "port": {
              "type": "integer",
              "format": "int32",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the database",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "resourceState": {
              "readOnly": true,
              "description": "Current resource status of the database",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "CreateFailed",
                "Updating",
                "UpdateFailed",
                "Deleting",
                "DeleteFailed",
                "Enabling",
                "EnableFailed",
                "Disabling",
                "DisableFailed",
                "Disabled",
                "Scaling",
                "ScalingFailed",
                "Moving"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true
              }
            },
            "clusteringPolicy": {
              "type": "string",
              "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
              "enum": [
                "EnterpriseCluster",
                "OSSCluster",
                "NoCluster"
              ],
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ],
              "x-ms-enum": {
                "name": "ClusteringPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "value": "EnterpriseCluster",
                    "name": "EnterpriseCluster",
                    "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                  },
                  {
                    "value": "OSSCluster",
                    "name": "OSSCluster",
                    "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                  },
                  {
                    "value": "NoCluster",
                    "name": "NoCluster",
                    "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                  }
                ]
              }
            },
            "evictionPolicy": {
              "type": "string",
              "description": "Redis eviction policy - default is VolatileLRU",
              "enum": [
                "AllKeysLFU",
                "AllKeysLRU",
                "AllKeysRandom",
                "VolatileLRU",
                "VolatileLFU",
                "VolatileTTL",
                "VolatileRandom",
                "NoEviction"
              ],
              "x-ms-enum": {
                "name": "EvictionPolicy",
                "modelAsString": true
              }
            },
            "persistence": {
              "description": "Persistence settings",
              "x-ms-identifiers": [],
              "title": "Persistence settings",
              "type": "object",
              "properties": {
                "aofEnabled": {
                  "type": "boolean",
                  "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                },
                "rdbEnabled": {
                  "type": "boolean",
                  "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                },
                "aofFrequency": {
                  "type": "string",
                  "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                  "enum": [
                    "1s",
                    "always"
                  ],
                  "x-ms-enum": {
                    "name": "AofFrequency",
                    "modelAsString": true
                  }
                },
                "rdbFrequency": {
                  "type": "string",
                  "description": "Sets the frequency at which a snapshot of the database is created.",
                  "enum": [
                    "1h",
                    "6h",
                    "12h"
                  ],
                  "x-ms-enum": {
                    "name": "RdbFrequency",
                    "modelAsString": true
                  }
                }
              }
            },
            "modules": {
              "type": "array",
              "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
              "items": {
                "title": "Module settings",
                "description": "Specifies configuration of a redis module",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                  },
                  "args": {
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                  },
                  "version": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The version of the module, e.g. '1.0'."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "x-ms-identifiers": [
                "name"
              ]
            },
            "geoReplication": {
              "type": "object",
              "description": "Optional set of properties to configure geo replication for this database.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "groupNickname": {
                  "type": "string",
                  "description": "Name for the group of linked database resources",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "linkedDatabases": {
                  "type": "array",
                  "description": "List of database resources to link with this database",
                  "items": {
                    "title": "Linked Database",
                    "description": "Specifies details of a linked database resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Cache/redisEnterprise/databases"
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource ID of a database resource to link with this database."
                      },
                      "state": {
                        "type": "string",
                        "description": "State of the link between the database resources.",
                        "enum": [
                          "Linked",
                          "Linking",
                          "Unlinking",
                          "LinkFailed",
                          "UnlinkFailed"
                        ],
                        "x-ms-enum": {
                          "name": "LinkState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            },
            "redisVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of Redis the database is running on, e.g. '6.0'"
            },
            "deferUpgrade": {
              "type": "string",
              "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
              "enum": [
                "Deferred",
                "NotDeferred"
              ],
              "x-ms-enum": {
                "name": "DeferUpgradeSetting",
                "modelAsString": true
              }
            },
            "accessKeysAuthentication": {
              "type": "string",
              "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "default": "Disabled",
              "x-ms-enum": {
                "name": "accessKeysAuthentication",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "DatabaseUpdate": {
      "description": "A partial update to the Redis Enterprise database",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the database.",
          "title": "Redis Enterprise database update properties",
          "type": "object",
          "properties": {
            "clientProtocol": {
              "type": "string",
              "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
              "enum": [
                "Encrypted",
                "Plaintext"
              ],
              "x-ms-enum": {
                "name": "Protocol",
                "modelAsString": true
              }
            },
            "port": {
              "type": "integer",
              "format": "int32",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the database",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "resourceState": {
              "readOnly": true,
              "description": "Current resource status of the database",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "CreateFailed",
                "Updating",
                "UpdateFailed",
                "Deleting",
                "DeleteFailed",
                "Enabling",
                "EnableFailed",
                "Disabling",
                "DisableFailed",
                "Disabled",
                "Scaling",
                "ScalingFailed",
                "Moving"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true
              }
            },
            "clusteringPolicy": {
              "type": "string",
              "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
              "enum": [
                "EnterpriseCluster",
                "OSSCluster",
                "NoCluster"
              ],
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ],
              "x-ms-enum": {
                "name": "ClusteringPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "value": "EnterpriseCluster",
                    "name": "EnterpriseCluster",
                    "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                  },
                  {
                    "value": "OSSCluster",
                    "name": "OSSCluster",
                    "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                  },
                  {
                    "value": "NoCluster",
                    "name": "NoCluster",
                    "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                  }
                ]
              }
            },
            "evictionPolicy": {
              "type": "string",
              "description": "Redis eviction policy - default is VolatileLRU",
              "enum": [
                "AllKeysLFU",
                "AllKeysLRU",
                "AllKeysRandom",
                "VolatileLRU",
                "VolatileLFU",
                "VolatileTTL",
                "VolatileRandom",
                "NoEviction"
              ],
              "x-ms-enum": {
                "name": "EvictionPolicy",
                "modelAsString": true
              }
            },
            "persistence": {
              "description": "Persistence settings",
              "x-ms-identifiers": [],
              "title": "Persistence settings",
              "type": "object",
              "properties": {
                "aofEnabled": {
                  "type": "boolean",
                  "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                },
                "rdbEnabled": {
                  "type": "boolean",
                  "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                },
                "aofFrequency": {
                  "type": "string",
                  "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                  "enum": [
                    "1s",
                    "always"
                  ],
                  "x-ms-enum": {
                    "name": "AofFrequency",
                    "modelAsString": true
                  }
                },
                "rdbFrequency": {
                  "type": "string",
                  "description": "Sets the frequency at which a snapshot of the database is created.",
                  "enum": [
                    "1h",
                    "6h",
                    "12h"
                  ],
                  "x-ms-enum": {
                    "name": "RdbFrequency",
                    "modelAsString": true
                  }
                }
              }
            },
            "modules": {
              "type": "array",
              "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
              "items": {
                "title": "Module settings",
                "description": "Specifies configuration of a redis module",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                  },
                  "args": {
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                  },
                  "version": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The version of the module, e.g. '1.0'."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "x-ms-identifiers": [
                "name"
              ]
            },
            "geoReplication": {
              "type": "object",
              "description": "Optional set of properties to configure geo replication for this database.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "groupNickname": {
                  "type": "string",
                  "description": "Name for the group of linked database resources",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "linkedDatabases": {
                  "type": "array",
                  "description": "List of database resources to link with this database",
                  "items": {
                    "title": "Linked Database",
                    "description": "Specifies details of a linked database resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Cache/redisEnterprise/databases"
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource ID of a database resource to link with this database."
                      },
                      "state": {
                        "type": "string",
                        "description": "State of the link between the database resources.",
                        "enum": [
                          "Linked",
                          "Linking",
                          "Unlinking",
                          "LinkFailed",
                          "UnlinkFailed"
                        ],
                        "x-ms-enum": {
                          "name": "LinkState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            },
            "redisVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of Redis the database is running on, e.g. '6.0'"
            },
            "deferUpgrade": {
              "type": "string",
              "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
              "enum": [
                "Deferred",
                "NotDeferred"
              ],
              "x-ms-enum": {
                "name": "DeferUpgradeSetting",
                "modelAsString": true
              }
            },
            "accessKeysAuthentication": {
              "type": "string",
              "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "accessKeysAuthentication",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "DatabaseCommonProperties": {
      "title": "Redis Enterprise database properties",
      "description": "Properties of Redis Enterprise databases, as opposed to general resource properties like location, tags",
      "type": "object",
      "properties": {
        "clientProtocol": {
          "type": "string",
          "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
          "enum": [
            "Encrypted",
            "Plaintext"
          ],
          "x-ms-enum": {
            "name": "Protocol",
            "modelAsString": true
          }
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "Current provisioning status of the database",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "resourceState": {
          "readOnly": true,
          "description": "Current resource status of the database",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "CreateFailed",
            "Updating",
            "UpdateFailed",
            "Deleting",
            "DeleteFailed",
            "Enabling",
            "EnableFailed",
            "Disabling",
            "DisableFailed",
            "Disabled",
            "Scaling",
            "ScalingFailed",
            "Moving"
          ],
          "x-ms-enum": {
            "name": "ResourceState",
            "modelAsString": true
          }
        },
        "clusteringPolicy": {
          "type": "string",
          "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
          "enum": [
            "EnterpriseCluster",
            "OSSCluster",
            "NoCluster"
          ],
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "x-ms-enum": {
            "name": "ClusteringPolicy",
            "modelAsString": true,
            "values": [
              {
                "value": "EnterpriseCluster",
                "name": "EnterpriseCluster",
                "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
              },
              {
                "value": "OSSCluster",
                "name": "OSSCluster",
                "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
              },
              {
                "value": "NoCluster",
                "name": "NoCluster",
                "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
              }
            ]
          }
        },
        "evictionPolicy": {
          "type": "string",
          "description": "Redis eviction policy - default is VolatileLRU",
          "enum": [
            "AllKeysLFU",
            "AllKeysLRU",
            "AllKeysRandom",
            "VolatileLRU",
            "VolatileLFU",
            "VolatileTTL",
            "VolatileRandom",
            "NoEviction"
          ],
          "x-ms-enum": {
            "name": "EvictionPolicy",
            "modelAsString": true
          }
        },
        "persistence": {
          "description": "Persistence settings",
          "x-ms-identifiers": [],
          "title": "Persistence settings",
          "type": "object",
          "properties": {
            "aofEnabled": {
              "type": "boolean",
              "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
            },
            "rdbEnabled": {
              "type": "boolean",
              "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
            },
            "aofFrequency": {
              "type": "string",
              "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
              "enum": [
                "1s",
                "always"
              ],
              "x-ms-enum": {
                "name": "AofFrequency",
                "modelAsString": true
              }
            },
            "rdbFrequency": {
              "type": "string",
              "description": "Sets the frequency at which a snapshot of the database is created.",
              "enum": [
                "1h",
                "6h",
                "12h"
              ],
              "x-ms-enum": {
                "name": "RdbFrequency",
                "modelAsString": true
              }
            }
          }
        },
        "modules": {
          "type": "array",
          "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "items": {
            "title": "Module settings",
            "description": "Specifies configuration of a redis module",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
              },
              "args": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
              },
              "version": {
                "type": "string",
                "readOnly": true,
                "description": "The version of the module, e.g. '1.0'."
              }
            },
            "required": [
              "name"
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-identifiers": [
            "name"
          ]
        },
        "geoReplication": {
          "type": "object",
          "description": "Optional set of properties to configure geo replication for this database.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "groupNickname": {
              "type": "string",
              "description": "Name for the group of linked database resources",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "linkedDatabases": {
              "type": "array",
              "description": "List of database resources to link with this database",
              "items": {
                "title": "Linked Database",
                "description": "Specifies details of a linked database resource.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Cache/redisEnterprise/databases"
                        }
                      ]
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource ID of a database resource to link with this database."
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the link between the database resources.",
                    "enum": [
                      "Linked",
                      "Linking",
                      "Unlinking",
                      "LinkFailed",
                      "UnlinkFailed"
                    ],
                    "x-ms-enum": {
                      "name": "LinkState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "redisVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Version of Redis the database is running on, e.g. '6.0'"
        },
        "deferUpgrade": {
          "type": "string",
          "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
          "enum": [
            "Deferred",
            "NotDeferred"
          ],
          "x-ms-enum": {
            "name": "DeferUpgradeSetting",
            "modelAsString": true
          }
        },
        "accessKeysAuthentication": {
          "type": "string",
          "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "accessKeysAuthentication",
            "modelAsString": true
          }
        }
      }
    },
    "DatabaseCreateProperties": {
      "title": "Redis Enterprise database create properties",
      "description": "Properties for creating Redis Enterprise databases",
      "allOf": [
        {
          "title": "Redis Enterprise database properties",
          "description": "Properties of Redis Enterprise databases, as opposed to general resource properties like location, tags",
          "type": "object",
          "properties": {
            "clientProtocol": {
              "type": "string",
              "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
              "enum": [
                "Encrypted",
                "Plaintext"
              ],
              "x-ms-enum": {
                "name": "Protocol",
                "modelAsString": true
              }
            },
            "port": {
              "type": "integer",
              "format": "int32",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the database",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "resourceState": {
              "readOnly": true,
              "description": "Current resource status of the database",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "CreateFailed",
                "Updating",
                "UpdateFailed",
                "Deleting",
                "DeleteFailed",
                "Enabling",
                "EnableFailed",
                "Disabling",
                "DisableFailed",
                "Disabled",
                "Scaling",
                "ScalingFailed",
                "Moving"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true
              }
            },
            "clusteringPolicy": {
              "type": "string",
              "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
              "enum": [
                "EnterpriseCluster",
                "OSSCluster",
                "NoCluster"
              ],
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ],
              "x-ms-enum": {
                "name": "ClusteringPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "value": "EnterpriseCluster",
                    "name": "EnterpriseCluster",
                    "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                  },
                  {
                    "value": "OSSCluster",
                    "name": "OSSCluster",
                    "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                  },
                  {
                    "value": "NoCluster",
                    "name": "NoCluster",
                    "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                  }
                ]
              }
            },
            "evictionPolicy": {
              "type": "string",
              "description": "Redis eviction policy - default is VolatileLRU",
              "enum": [
                "AllKeysLFU",
                "AllKeysLRU",
                "AllKeysRandom",
                "VolatileLRU",
                "VolatileLFU",
                "VolatileTTL",
                "VolatileRandom",
                "NoEviction"
              ],
              "x-ms-enum": {
                "name": "EvictionPolicy",
                "modelAsString": true
              }
            },
            "persistence": {
              "description": "Persistence settings",
              "x-ms-identifiers": [],
              "title": "Persistence settings",
              "type": "object",
              "properties": {
                "aofEnabled": {
                  "type": "boolean",
                  "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                },
                "rdbEnabled": {
                  "type": "boolean",
                  "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                },
                "aofFrequency": {
                  "type": "string",
                  "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                  "enum": [
                    "1s",
                    "always"
                  ],
                  "x-ms-enum": {
                    "name": "AofFrequency",
                    "modelAsString": true
                  }
                },
                "rdbFrequency": {
                  "type": "string",
                  "description": "Sets the frequency at which a snapshot of the database is created.",
                  "enum": [
                    "1h",
                    "6h",
                    "12h"
                  ],
                  "x-ms-enum": {
                    "name": "RdbFrequency",
                    "modelAsString": true
                  }
                }
              }
            },
            "modules": {
              "type": "array",
              "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
              "items": {
                "title": "Module settings",
                "description": "Specifies configuration of a redis module",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                  },
                  "args": {
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                  },
                  "version": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The version of the module, e.g. '1.0'."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "x-ms-identifiers": [
                "name"
              ]
            },
            "geoReplication": {
              "type": "object",
              "description": "Optional set of properties to configure geo replication for this database.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "groupNickname": {
                  "type": "string",
                  "description": "Name for the group of linked database resources",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "linkedDatabases": {
                  "type": "array",
                  "description": "List of database resources to link with this database",
                  "items": {
                    "title": "Linked Database",
                    "description": "Specifies details of a linked database resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Cache/redisEnterprise/databases"
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource ID of a database resource to link with this database."
                      },
                      "state": {
                        "type": "string",
                        "description": "State of the link between the database resources.",
                        "enum": [
                          "Linked",
                          "Linking",
                          "Unlinking",
                          "LinkFailed",
                          "UnlinkFailed"
                        ],
                        "x-ms-enum": {
                          "name": "LinkState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            },
            "redisVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of Redis the database is running on, e.g. '6.0'"
            },
            "deferUpgrade": {
              "type": "string",
              "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
              "enum": [
                "Deferred",
                "NotDeferred"
              ],
              "x-ms-enum": {
                "name": "DeferUpgradeSetting",
                "modelAsString": true
              }
            },
            "accessKeysAuthentication": {
              "type": "string",
              "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "accessKeysAuthentication",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "accessKeysAuthentication": {
          "type": "string",
          "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "default": "Disabled",
          "x-ms-enum": {
            "name": "accessKeysAuthentication",
            "modelAsString": true
          }
        }
      }
    },
    "DatabaseUpdateProperties": {
      "title": "Redis Enterprise database update properties",
      "description": "Properties for updating Redis Enterprise databases",
      "allOf": [
        {
          "title": "Redis Enterprise database properties",
          "description": "Properties of Redis Enterprise databases, as opposed to general resource properties like location, tags",
          "type": "object",
          "properties": {
            "clientProtocol": {
              "type": "string",
              "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
              "enum": [
                "Encrypted",
                "Plaintext"
              ],
              "x-ms-enum": {
                "name": "Protocol",
                "modelAsString": true
              }
            },
            "port": {
              "type": "integer",
              "format": "int32",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the database",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "resourceState": {
              "readOnly": true,
              "description": "Current resource status of the database",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "CreateFailed",
                "Updating",
                "UpdateFailed",
                "Deleting",
                "DeleteFailed",
                "Enabling",
                "EnableFailed",
                "Disabling",
                "DisableFailed",
                "Disabled",
                "Scaling",
                "ScalingFailed",
                "Moving"
              ],
              "x-ms-enum": {
                "name": "ResourceState",
                "modelAsString": true
              }
            },
            "clusteringPolicy": {
              "type": "string",
              "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
              "enum": [
                "EnterpriseCluster",
                "OSSCluster",
                "NoCluster"
              ],
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ],
              "x-ms-enum": {
                "name": "ClusteringPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "value": "EnterpriseCluster",
                    "name": "EnterpriseCluster",
                    "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                  },
                  {
                    "value": "OSSCluster",
                    "name": "OSSCluster",
                    "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                  },
                  {
                    "value": "NoCluster",
                    "name": "NoCluster",
                    "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                  }
                ]
              }
            },
            "evictionPolicy": {
              "type": "string",
              "description": "Redis eviction policy - default is VolatileLRU",
              "enum": [
                "AllKeysLFU",
                "AllKeysLRU",
                "AllKeysRandom",
                "VolatileLRU",
                "VolatileLFU",
                "VolatileTTL",
                "VolatileRandom",
                "NoEviction"
              ],
              "x-ms-enum": {
                "name": "EvictionPolicy",
                "modelAsString": true
              }
            },
            "persistence": {
              "description": "Persistence settings",
              "x-ms-identifiers": [],
              "title": "Persistence settings",
              "type": "object",
              "properties": {
                "aofEnabled": {
                  "type": "boolean",
                  "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                },
                "rdbEnabled": {
                  "type": "boolean",
                  "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                },
                "aofFrequency": {
                  "type": "string",
                  "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                  "enum": [
                    "1s",
                    "always"
                  ],
                  "x-ms-enum": {
                    "name": "AofFrequency",
                    "modelAsString": true
                  }
                },
                "rdbFrequency": {
                  "type": "string",
                  "description": "Sets the frequency at which a snapshot of the database is created.",
                  "enum": [
                    "1h",
                    "6h",
                    "12h"
                  ],
                  "x-ms-enum": {
                    "name": "RdbFrequency",
                    "modelAsString": true
                  }
                }
              }
            },
            "modules": {
              "type": "array",
              "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
              "items": {
                "title": "Module settings",
                "description": "Specifies configuration of a redis module",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                  },
                  "args": {
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                  },
                  "version": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The version of the module, e.g. '1.0'."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "x-ms-identifiers": [
                "name"
              ]
            },
            "geoReplication": {
              "type": "object",
              "description": "Optional set of properties to configure geo replication for this database.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "groupNickname": {
                  "type": "string",
                  "description": "Name for the group of linked database resources",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "linkedDatabases": {
                  "type": "array",
                  "description": "List of database resources to link with this database",
                  "items": {
                    "title": "Linked Database",
                    "description": "Specifies details of a linked database resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Cache/redisEnterprise/databases"
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource ID of a database resource to link with this database."
                      },
                      "state": {
                        "type": "string",
                        "description": "State of the link between the database resources.",
                        "enum": [
                          "Linked",
                          "Linking",
                          "Unlinking",
                          "LinkFailed",
                          "UnlinkFailed"
                        ],
                        "x-ms-enum": {
                          "name": "LinkState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            },
            "redisVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of Redis the database is running on, e.g. '6.0'"
            },
            "deferUpgrade": {
              "type": "string",
              "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
              "enum": [
                "Deferred",
                "NotDeferred"
              ],
              "x-ms-enum": {
                "name": "DeferUpgradeSetting",
                "modelAsString": true
              }
            },
            "accessKeysAuthentication": {
              "type": "string",
              "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "accessKeysAuthentication",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "accessKeysAuthentication": {
          "type": "string",
          "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "accessKeysAuthentication",
            "modelAsString": true
          }
        }
      }
    },
    "DatabaseList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Describes a database on the Redis Enterprise cluster",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Other properties of the database.",
                "title": "Redis Enterprise database create properties",
                "type": "object",
                "properties": {
                  "clientProtocol": {
                    "type": "string",
                    "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
                    "enum": [
                      "Encrypted",
                      "Plaintext"
                    ],
                    "x-ms-enum": {
                      "name": "Protocol",
                      "modelAsString": true
                    }
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Current provisioning status of the database",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Updating",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "resourceState": {
                    "readOnly": true,
                    "description": "Current resource status of the database",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "CreateFailed",
                      "Updating",
                      "UpdateFailed",
                      "Deleting",
                      "DeleteFailed",
                      "Enabling",
                      "EnableFailed",
                      "Disabling",
                      "DisableFailed",
                      "Disabled",
                      "Scaling",
                      "ScalingFailed",
                      "Moving"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceState",
                      "modelAsString": true
                    }
                  },
                  "clusteringPolicy": {
                    "type": "string",
                    "description": "Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database.",
                    "enum": [
                      "EnterpriseCluster",
                      "OSSCluster",
                      "NoCluster"
                    ],
                    "x-ms-mutability": [
                      "read",
                      "create",
                      "update"
                    ],
                    "x-ms-enum": {
                      "name": "ClusteringPolicy",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "EnterpriseCluster",
                          "name": "EnterpriseCluster",
                          "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
                        },
                        {
                          "value": "OSSCluster",
                          "name": "OSSCluster",
                          "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
                        },
                        {
                          "value": "NoCluster",
                          "name": "NoCluster",
                          "description": "The NoCluster policy is used for non-clustered Redis instances that do not require clustering features."
                        }
                      ]
                    }
                  },
                  "evictionPolicy": {
                    "type": "string",
                    "description": "Redis eviction policy - default is VolatileLRU",
                    "enum": [
                      "AllKeysLFU",
                      "AllKeysLRU",
                      "AllKeysRandom",
                      "VolatileLRU",
                      "VolatileLFU",
                      "VolatileTTL",
                      "VolatileRandom",
                      "NoEviction"
                    ],
                    "x-ms-enum": {
                      "name": "EvictionPolicy",
                      "modelAsString": true
                    }
                  },
                  "persistence": {
                    "description": "Persistence settings",
                    "x-ms-identifiers": [],
                    "title": "Persistence settings",
                    "type": "object",
                    "properties": {
                      "aofEnabled": {
                        "type": "boolean",
                        "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                      },
                      "rdbEnabled": {
                        "type": "boolean",
                        "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
                      },
                      "aofFrequency": {
                        "type": "string",
                        "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
                        "enum": [
                          "1s",
                          "always"
                        ],
                        "x-ms-enum": {
                          "name": "AofFrequency",
                          "modelAsString": true
                        }
                      },
                      "rdbFrequency": {
                        "type": "string",
                        "description": "Sets the frequency at which a snapshot of the database is created.",
                        "enum": [
                          "1h",
                          "6h",
                          "12h"
                        ],
                        "x-ms-enum": {
                          "name": "RdbFrequency",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "modules": {
                    "type": "array",
                    "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
                    "items": {
                      "title": "Module settings",
                      "description": "Specifies configuration of a redis module",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
                        },
                        "args": {
                          "type": "string",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
                        },
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of the module, e.g. '1.0'."
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "geoReplication": {
                    "type": "object",
                    "description": "Optional set of properties to configure geo replication for this database.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "properties": {
                      "groupNickname": {
                        "type": "string",
                        "description": "Name for the group of linked database resources",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "linkedDatabases": {
                        "type": "array",
                        "description": "List of database resources to link with this database",
                        "items": {
                          "title": "Linked Database",
                          "description": "Specifies details of a linked database resource.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.Cache/redisEnterprise/databases"
                                  }
                                ]
                              },
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "description": "Resource ID of a database resource to link with this database."
                            },
                            "state": {
                              "type": "string",
                              "description": "State of the link between the database resources.",
                              "enum": [
                                "Linked",
                                "Linking",
                                "Unlinking",
                                "LinkFailed",
                                "UnlinkFailed"
                              ],
                              "x-ms-enum": {
                                "name": "LinkState",
                                "modelAsString": true
                              },
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "redisVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Version of Redis the database is running on, e.g. '6.0'"
                  },
                  "deferUpgrade": {
                    "type": "string",
                    "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
                    "enum": [
                      "Deferred",
                      "NotDeferred"
                    ],
                    "x-ms-enum": {
                      "name": "DeferUpgradeSetting",
                      "modelAsString": true
                    }
                  },
                  "accessKeysAuthentication": {
                    "type": "string",
                    "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created. Default is Disabled.",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "default": "Disabled",
                    "x-ms-enum": {
                      "name": "accessKeysAuthentication",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          },
          "description": "List of databases"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URI to fetch the next page of results."
        }
      },
      "description": "The response of a list-all operation."
    },
    "AccessPolicyAssignmentProperties": {
      "title": "Redis Enterprise database access policy assignment properties",
      "description": "Properties of Redis Enterprise database access policy assignment.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "description": "Current provisioning status of the access policy assignment.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "accessPolicyName": {
          "type": "string",
          "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
          "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
        },
        "user": {
          "type": "object",
          "properties": {
            "objectId": {
              "type": "string",
              "description": "The object ID of the user.",
              "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
            }
          },
          "description": "The user associated with the access policy."
        }
      },
      "required": [
        "user",
        "accessPolicyName"
      ]
    },
    "AccessPolicyAssignment": {
      "description": "Describes the access policy assignment of Redis Enterprise database",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the access policy assignment.",
          "title": "Redis Enterprise database access policy assignment properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "description": "Current provisioning status of the access policy assignment.",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "accessPolicyName": {
              "type": "string",
              "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
              "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
            },
            "user": {
              "type": "object",
              "properties": {
                "objectId": {
                  "type": "string",
                  "description": "The object ID of the user.",
                  "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
                }
              },
              "description": "The user associated with the access policy."
            }
          },
          "required": [
            "user",
            "accessPolicyName"
          ]
        }
      }
    },
    "AccessPolicyAssignmentList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Describes the access policy assignment of Redis Enterprise database",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the access policy assignment.",
                "title": "Redis Enterprise database access policy assignment properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "description": "Current provisioning status of the access policy assignment.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Updating",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "accessPolicyName": {
                    "type": "string",
                    "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
                    "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "objectId": {
                        "type": "string",
                        "description": "The object ID of the user.",
                        "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
                      }
                    },
                    "description": "The user associated with the access policy."
                  }
                },
                "required": [
                  "user",
                  "accessPolicyName"
                ]
              }
            }
          },
          "description": "List of access policy assignments."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URI to fetch the next page of results."
        }
      },
      "description": "The response of a list-all operation."
    },
    "Persistence": {
      "title": "Persistence settings",
      "description": "Persistence-related configuration for the Redis Enterprise database",
      "type": "object",
      "properties": {
        "aofEnabled": {
          "type": "boolean",
          "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
        },
        "rdbEnabled": {
          "type": "boolean",
          "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
        },
        "aofFrequency": {
          "type": "string",
          "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
          "enum": [
            "1s",
            "always"
          ],
          "x-ms-enum": {
            "name": "AofFrequency",
            "modelAsString": true
          }
        },
        "rdbFrequency": {
          "type": "string",
          "description": "Sets the frequency at which a snapshot of the database is created.",
          "enum": [
            "1h",
            "6h",
            "12h"
          ],
          "x-ms-enum": {
            "name": "RdbFrequency",
            "modelAsString": true
          }
        }
      }
    },
    "Module": {
      "title": "Module settings",
      "description": "Specifies configuration of a redis module",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
        },
        "args": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
        },
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "The version of the module, e.g. '1.0'."
        }
      },
      "required": [
        "name"
      ]
    },
    "LinkedDatabase": {
      "title": "Linked Database",
      "description": "Specifies details of a linked database resource.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Cache/redisEnterprise/databases"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource ID of a database resource to link with this database."
        },
        "state": {
          "type": "string",
          "description": "State of the link between the database resources.",
          "enum": [
            "Linked",
            "Linking",
            "Unlinking",
            "LinkFailed",
            "UnlinkFailed"
          ],
          "x-ms-enum": {
            "name": "LinkState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "AccessKeys": {
      "title": "Access keys",
      "description": "The secret access keys used for authenticating connections to redis",
      "type": "object",
      "properties": {
        "primaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "The current primary key that clients can use to authenticate"
        },
        "secondaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "The current secondary key that clients can use to authenticate"
        }
      }
    },
    "RegenerateKeyParameters": {
      "title": "Regenerate access keys request",
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "Which access key to regenerate.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "AccessKeyType",
            "modelAsString": false
          }
        }
      },
      "required": [
        "keyType"
      ],
      "description": "Specifies which access keys to reset to a new random value."
    },
    "ImportClusterParameters": {
      "title": "Import RDB files into a target database",
      "type": "object",
      "properties": {
        "sasUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "SAS URIs for the target blobs to import from",
          "x-ms-secret": true
        }
      },
      "required": [
        "sasUris"
      ],
      "description": "Parameters for a Redis Enterprise import operation."
    },
    "ExportClusterParameters": {
      "title": "Export an RDB file into a target database",
      "type": "object",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "SAS URI for the target directory to export to",
          "x-ms-secret": true
        }
      },
      "required": [
        "sasUri"
      ],
      "description": "Parameters for a Redis Enterprise export operation."
    },
    "OperationStatus": {
      "description": "The status of a long-running operation.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The operation's unique id."
        },
        "name": {
          "type": "string",
          "description": "The operation's name."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the operation."
        },
        "status": {
          "type": "string",
          "description": "The current status of the operation."
        },
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse",
          "description": "Error response describing why the operation failed."
        }
      }
    },
    "ForceLinkParameters": {
      "type": "object",
      "description": "Parameters for reconfiguring active geo-replication, of an existing database that was previously unlinked from a replication group.",
      "required": [
        "geoReplication"
      ],
      "properties": {
        "geoReplication": {
          "type": "object",
          "description": "Properties to configure geo replication for this database.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "groupNickname": {
              "type": "string",
              "description": "The name of the group of linked database resources. This should match the existing replication group name.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "linkedDatabases": {
              "type": "array",
              "description": "The resource IDs of the databases that are expected to be linked and included in the replication group. This parameter is used to validate that the linking is to the expected (unlinked) part of the replication group, if it is splintered.",
              "items": {
                "title": "Linked Database",
                "description": "Specifies details of a linked database resource.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Cache/redisEnterprise/databases"
                        }
                      ]
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource ID of a database resource to link with this database."
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the link between the database resources.",
                    "enum": [
                      "Linked",
                      "Linking",
                      "Unlinking",
                      "LinkFailed",
                      "UnlinkFailed"
                    ],
                    "x-ms-enum": {
                      "name": "LinkState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "ForceUnlinkParameters": {
      "title": "Forcibly unlink another database from this database.",
      "description": "Parameters for a Redis Enterprise Active Geo Replication Force Unlink operation.",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Cache/redisEnterprise/databases"
                }
              ]
            }
          },
          "description": "The resource IDs of the database resources to be unlinked."
        }
      },
      "required": [
        "ids"
      ]
    },
    "FlushParameters": {
      "title": "Flush all the keys from the current and all its linked databases.",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Cache/redisEnterprise/databases"
                }
              ]
            }
          },
          "description": "The identifiers of all the other database resources in the georeplication group to be flushed."
        }
      },
      "description": "Parameters for a Redis Enterprise active geo-replication flush operation"
    },
    "SkuDetails": {
      "title": "SKU details",
      "description": "Details of a Redis Enterprise cluster SKU.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the SKU."
        },
        "sizeInGB": {
          "readOnly": true,
          "type": "number",
          "description": "The cache size in GB."
        }
      }
    },
    "SkuDetailsList": {
      "type": "object",
      "properties": {
        "skus": {
          "type": "array",
          "items": {
            "title": "SKU details",
            "description": "Details of a Redis Enterprise cluster SKU.",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the SKU."
              },
              "sizeInGB": {
                "readOnly": true,
                "type": "number",
                "description": "The cache size in GB."
              }
            }
          },
          "description": "List of SKUS available to scale up or scale down."
        }
      },
      "description": "The response of a listSkusForScaling operation."
    }
  },
  "parameters": {
    "ClusterNameParameter": {
      "name": "clusterName",
      "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Redis Enterprise database.",
      "x-ms-parameter-location": "method"
    },
    "AccessPolicyAssignmentNameParameter": {
      "name": "accessPolicyAssignmentName",
      "pattern": "^[A-Za-z0-9]{1,60}$",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Redis Enterprise database access policy assignment.",
      "x-ms-parameter-location": "method"
    }
  }
}