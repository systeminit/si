{
  "swagger": "2.0",
  "info": {
    "title": "Azure aad",
    "version": "2022-12-01",
    "description": "Azure aad service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.AAD/operations": {
      "get": {
        "tags": [
          "DomainServices"
        ],
        "description": "Lists all the available Domain Services operations.",
        "operationId": "DomainServiceOperations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "description": "The list of domain service operation response.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of operations.",
                  "type": "array",
                  "items": {
                    "description": "The operation supported by Domain Services.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}.",
                        "type": "string"
                      },
                      "display": {
                        "description": "The operation supported by Domain Services.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description of the operation.",
                            "type": "string"
                          },
                          "operation": {
                            "description": "The action that users can perform, based on their permission level.",
                            "type": "string"
                          },
                          "provider": {
                            "description": "Service provider: Domain Services.",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource on which the operation is performed.",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "description": "The origin of the operation.",
                        "type": "string"
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The continuation token for the next page of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AAD/domainServices": {
      "get": {
        "tags": [
          "DomainServices"
        ],
        "operationId": "DomainServices_List",
        "summary": "List Domain Services in Subscription",
        "description": "The List Domain Services in Subscription operation lists all the domain services available under the given subscription (and across all resource groups within that subscription).",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Domain service.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      },
                      "etag": {
                        "type": "string",
                        "description": "Resource etag"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Domain service properties",
                        "type": "object",
                        "properties": {
                          "version": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32",
                            "description": "Data Model Version"
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Azure Active Directory Tenant Id"
                          },
                          "domainName": {
                            "type": "string",
                            "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                          },
                          "deploymentId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Deployment Id"
                          },
                          "syncOwner": {
                            "readOnly": true,
                            "type": "string",
                            "description": "SyncOwner ReplicaSet Id"
                          },
                          "syncApplicationId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The unique sync application id of the Azure AD Domain Services deployment."
                          },
                          "replicaSets": {
                            "type": "array",
                            "items": {
                              "description": "ReplicaSet",
                              "type": "object",
                              "properties": {
                                "replicaSetId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "ReplicaSet Id"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Virtual network location"
                                },
                                "vnetSiteId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Virtual network site id"
                                },
                                "subnetId": {
                                  "type": "string",
                                  "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                                },
                                "domainControllerIpAddress": {
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Domain Controller IP Address"
                                  },
                                  "description": "List of Domain Controller IP Address"
                                },
                                "externalAccessIpAddress": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "External access ip address."
                                },
                                "serviceStatus": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Status of Domain Service instance"
                                },
                                "healthLastEvaluated": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time-rfc1123",
                                  "description": "Last domain evaluation run DateTime"
                                },
                                "healthMonitors": {
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "description": "Domain Health Monitors",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Monitor Id"
                                      },
                                      "name": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Monitor Name"
                                      },
                                      "details": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Monitor Details"
                                      }
                                    }
                                  },
                                  "description": "List of Domain Health Monitors"
                                },
                                "healthAlerts": {
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "description": "Domain Health Alerts",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert Id"
                                      },
                                      "name": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert Name"
                                      },
                                      "issue": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert Issue"
                                      },
                                      "severity": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert Severity"
                                      },
                                      "raised": {
                                        "readOnly": true,
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Health Alert Raised DateTime"
                                      },
                                      "lastDetected": {
                                        "readOnly": true,
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Health Alert Last Detected DateTime"
                                      },
                                      "resolutionUri": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert TSG Link"
                                      }
                                    }
                                  },
                                  "description": "List of Domain Health Alerts"
                                }
                              }
                            },
                            "description": "List of ReplicaSets"
                          },
                          "ldapsSettings": {
                            "description": "Secure LDAP Settings",
                            "type": "object",
                            "properties": {
                              "ldaps": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "Ldaps",
                                  "modelAsString": true
                                }
                              },
                              "pfxCertificate": {
                                "type": "string",
                                "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                              },
                              "pfxCertificatePassword": {
                                "type": "string",
                                "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                              },
                              "publicCertificate": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Public certificate used to configure secure ldap."
                              },
                              "certificateThumbprint": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Thumbprint of configure ldaps certificate."
                              },
                              "certificateNotAfter": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "NotAfter DateTime of configure ldaps certificate."
                              },
                              "externalAccess": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "ExternalAccess",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "resourceForestSettings": {
                            "description": "Resource Forest Settings",
                            "type": "object",
                            "properties": {
                              "settings": {
                                "type": "array",
                                "items": {
                                  "description": "Forest Trust Setting",
                                  "type": "object",
                                  "properties": {
                                    "trustedDomainFqdn": {
                                      "type": "string",
                                      "description": "Trusted Domain FQDN"
                                    },
                                    "trustDirection": {
                                      "type": "string",
                                      "description": "Trust Direction"
                                    },
                                    "friendlyName": {
                                      "type": "string",
                                      "description": "Friendly Name"
                                    },
                                    "remoteDnsIps": {
                                      "type": "string",
                                      "description": "Remote Dns ips"
                                    },
                                    "trustPassword": {
                                      "type": "string",
                                      "description": "Trust Password",
                                      "x-ms-secret": true
                                    }
                                  }
                                },
                                "description": "List of settings for Resource Forest"
                              },
                              "resourceForest": {
                                "type": "string",
                                "description": "Resource Forest"
                              }
                            }
                          },
                          "domainSecuritySettings": {
                            "description": "DomainSecurity Settings",
                            "type": "object",
                            "properties": {
                              "ntlmV1": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "NtlmV1",
                                  "modelAsString": true
                                }
                              },
                              "tlsV1": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "TlsV1",
                                  "modelAsString": true
                                }
                              },
                              "syncNtlmPasswords": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "SyncNtlmPasswords",
                                  "modelAsString": true
                                }
                              },
                              "syncKerberosPasswords": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "SyncKerberosPasswords",
                                  "modelAsString": true
                                }
                              },
                              "syncOnPremPasswords": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "SyncOnPremPasswords",
                                  "modelAsString": true
                                }
                              },
                              "kerberosRc4Encryption": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "KerberosRc4Encryption",
                                  "modelAsString": true
                                }
                              },
                              "kerberosArmoring": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "KerberosArmoring",
                                  "modelAsString": true
                                }
                              },
                              "ldapSigning": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "LdapSigning",
                                  "modelAsString": true
                                }
                              },
                              "channelBinding": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "ChannelBinding",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "domainConfigurationType": {
                            "type": "string",
                            "description": "Domain Configuration Type"
                          },
                          "sku": {
                            "type": "string",
                            "description": "Sku Type"
                          },
                          "filteredSync": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                            "x-ms-enum": {
                              "name": "FilteredSync",
                              "modelAsString": true
                            }
                          },
                          "syncScope": {
                            "type": "string",
                            "enum": [
                              "All",
                              "CloudOnly"
                            ],
                            "default": "All",
                            "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                            "x-ms-enum": {
                              "name": "SyncScope",
                              "modelAsString": true
                            }
                          },
                          "notificationSettings": {
                            "description": "Notification Settings",
                            "type": "object",
                            "properties": {
                              "notifyGlobalAdmins": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "description": "Should global admins be notified",
                                "x-ms-enum": {
                                  "name": "notifyGlobalAdmins",
                                  "modelAsString": true
                                }
                              },
                              "notifyDcAdmins": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "description": "Should domain controller admins be notified",
                                "x-ms-enum": {
                                  "name": "notifyDcAdmins",
                                  "modelAsString": true
                                }
                              },
                              "additionalRecipients": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Email address for additional recipient"
                                },
                                "description": "The list of additional recipients"
                              }
                            }
                          },
                          "migrationProperties": {
                            "readOnly": true,
                            "description": "Migration Properties",
                            "type": "object",
                            "properties": {
                              "oldSubnetId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Old Subnet Id"
                              },
                              "oldVnetSiteId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Old Vnet Site Id"
                              },
                              "migrationProgress": {
                                "readOnly": true,
                                "description": "Migration Progress",
                                "type": "object",
                                "properties": {
                                  "completionPercentage": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Completion Percentage"
                                  },
                                  "progressMessage": {
                                    "type": "string",
                                    "description": "Progress Message"
                                  }
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "the current deployment or provisioning state, which only appears in the response."
                          },
                          "configDiagnostics": {
                            "description": "Configuration diagnostics data containing latest execution from client.",
                            "type": "object",
                            "properties": {
                              "lastExecuted": {
                                "type": "string",
                                "format": "date-time-rfc1123",
                                "description": "Last domain configuration diagnostics DateTime"
                              },
                              "validatorResults": {
                                "type": "array",
                                "description": "List of Configuration Diagnostics validator results.",
                                "items": {
                                  "description": "Config Diagnostics validator result data",
                                  "type": "object",
                                  "properties": {
                                    "validatorId": {
                                      "type": "string",
                                      "description": "Validator identifier"
                                    },
                                    "replicaSetSubnetDisplayName": {
                                      "type": "string",
                                      "description": "Replica set location and subnet name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Running",
                                        "OK",
                                        "Failure",
                                        "Warning",
                                        "Skipped"
                                      ],
                                      "default": "None",
                                      "description": "Status for individual validator after running diagnostics.",
                                      "x-ms-enum": {
                                        "name": "status",
                                        "modelAsString": true
                                      }
                                    },
                                    "issues": {
                                      "type": "array",
                                      "description": "List of resource config validation issues.",
                                      "items": {
                                        "description": "Specific issue for a particular config diagnostics validator",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Validation issue identifier."
                                          },
                                          "descriptionParams": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "Single resource property involved in issue description."
                                            },
                                            "description": "List of domain resource property name or values used to compose a rich description."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "the list of domain services."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The continuation token for the next page of results.",
                  "readOnly": true
                }
              },
              "description": "The response from the List Domain Services operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices": {
      "get": {
        "tags": [
          "DomainServices"
        ],
        "operationId": "DomainServices_ListByResourceGroup",
        "summary": "List Domain Services in Resource Group",
        "description": "The List Domain Services in Resource Group operation lists all the domain services available under the given resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Domain service.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      },
                      "etag": {
                        "type": "string",
                        "description": "Resource etag"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Domain service properties",
                        "type": "object",
                        "properties": {
                          "version": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32",
                            "description": "Data Model Version"
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Azure Active Directory Tenant Id"
                          },
                          "domainName": {
                            "type": "string",
                            "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                          },
                          "deploymentId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Deployment Id"
                          },
                          "syncOwner": {
                            "readOnly": true,
                            "type": "string",
                            "description": "SyncOwner ReplicaSet Id"
                          },
                          "syncApplicationId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The unique sync application id of the Azure AD Domain Services deployment."
                          },
                          "replicaSets": {
                            "type": "array",
                            "items": {
                              "description": "ReplicaSet",
                              "type": "object",
                              "properties": {
                                "replicaSetId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "ReplicaSet Id"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Virtual network location"
                                },
                                "vnetSiteId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Virtual network site id"
                                },
                                "subnetId": {
                                  "type": "string",
                                  "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                                },
                                "domainControllerIpAddress": {
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Domain Controller IP Address"
                                  },
                                  "description": "List of Domain Controller IP Address"
                                },
                                "externalAccessIpAddress": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "External access ip address."
                                },
                                "serviceStatus": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Status of Domain Service instance"
                                },
                                "healthLastEvaluated": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time-rfc1123",
                                  "description": "Last domain evaluation run DateTime"
                                },
                                "healthMonitors": {
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "description": "Domain Health Monitors",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Monitor Id"
                                      },
                                      "name": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Monitor Name"
                                      },
                                      "details": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Monitor Details"
                                      }
                                    }
                                  },
                                  "description": "List of Domain Health Monitors"
                                },
                                "healthAlerts": {
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "description": "Domain Health Alerts",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert Id"
                                      },
                                      "name": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert Name"
                                      },
                                      "issue": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert Issue"
                                      },
                                      "severity": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert Severity"
                                      },
                                      "raised": {
                                        "readOnly": true,
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Health Alert Raised DateTime"
                                      },
                                      "lastDetected": {
                                        "readOnly": true,
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Health Alert Last Detected DateTime"
                                      },
                                      "resolutionUri": {
                                        "readOnly": true,
                                        "type": "string",
                                        "description": "Health Alert TSG Link"
                                      }
                                    }
                                  },
                                  "description": "List of Domain Health Alerts"
                                }
                              }
                            },
                            "description": "List of ReplicaSets"
                          },
                          "ldapsSettings": {
                            "description": "Secure LDAP Settings",
                            "type": "object",
                            "properties": {
                              "ldaps": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "Ldaps",
                                  "modelAsString": true
                                }
                              },
                              "pfxCertificate": {
                                "type": "string",
                                "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                              },
                              "pfxCertificatePassword": {
                                "type": "string",
                                "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                              },
                              "publicCertificate": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Public certificate used to configure secure ldap."
                              },
                              "certificateThumbprint": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Thumbprint of configure ldaps certificate."
                              },
                              "certificateNotAfter": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "NotAfter DateTime of configure ldaps certificate."
                              },
                              "externalAccess": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "ExternalAccess",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "resourceForestSettings": {
                            "description": "Resource Forest Settings",
                            "type": "object",
                            "properties": {
                              "settings": {
                                "type": "array",
                                "items": {
                                  "description": "Forest Trust Setting",
                                  "type": "object",
                                  "properties": {
                                    "trustedDomainFqdn": {
                                      "type": "string",
                                      "description": "Trusted Domain FQDN"
                                    },
                                    "trustDirection": {
                                      "type": "string",
                                      "description": "Trust Direction"
                                    },
                                    "friendlyName": {
                                      "type": "string",
                                      "description": "Friendly Name"
                                    },
                                    "remoteDnsIps": {
                                      "type": "string",
                                      "description": "Remote Dns ips"
                                    },
                                    "trustPassword": {
                                      "type": "string",
                                      "description": "Trust Password",
                                      "x-ms-secret": true
                                    }
                                  }
                                },
                                "description": "List of settings for Resource Forest"
                              },
                              "resourceForest": {
                                "type": "string",
                                "description": "Resource Forest"
                              }
                            }
                          },
                          "domainSecuritySettings": {
                            "description": "DomainSecurity Settings",
                            "type": "object",
                            "properties": {
                              "ntlmV1": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "NtlmV1",
                                  "modelAsString": true
                                }
                              },
                              "tlsV1": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "TlsV1",
                                  "modelAsString": true
                                }
                              },
                              "syncNtlmPasswords": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "SyncNtlmPasswords",
                                  "modelAsString": true
                                }
                              },
                              "syncKerberosPasswords": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "SyncKerberosPasswords",
                                  "modelAsString": true
                                }
                              },
                              "syncOnPremPasswords": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "SyncOnPremPasswords",
                                  "modelAsString": true
                                }
                              },
                              "kerberosRc4Encryption": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Enabled",
                                "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "KerberosRc4Encryption",
                                  "modelAsString": true
                                }
                              },
                              "kerberosArmoring": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "KerberosArmoring",
                                  "modelAsString": true
                                }
                              },
                              "ldapSigning": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "LdapSigning",
                                  "modelAsString": true
                                }
                              },
                              "channelBinding": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "default": "Disabled",
                                "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                                "x-ms-enum": {
                                  "name": "ChannelBinding",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "domainConfigurationType": {
                            "type": "string",
                            "description": "Domain Configuration Type"
                          },
                          "sku": {
                            "type": "string",
                            "description": "Sku Type"
                          },
                          "filteredSync": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                            "x-ms-enum": {
                              "name": "FilteredSync",
                              "modelAsString": true
                            }
                          },
                          "syncScope": {
                            "type": "string",
                            "enum": [
                              "All",
                              "CloudOnly"
                            ],
                            "default": "All",
                            "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                            "x-ms-enum": {
                              "name": "SyncScope",
                              "modelAsString": true
                            }
                          },
                          "notificationSettings": {
                            "description": "Notification Settings",
                            "type": "object",
                            "properties": {
                              "notifyGlobalAdmins": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "description": "Should global admins be notified",
                                "x-ms-enum": {
                                  "name": "notifyGlobalAdmins",
                                  "modelAsString": true
                                }
                              },
                              "notifyDcAdmins": {
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "description": "Should domain controller admins be notified",
                                "x-ms-enum": {
                                  "name": "notifyDcAdmins",
                                  "modelAsString": true
                                }
                              },
                              "additionalRecipients": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Email address for additional recipient"
                                },
                                "description": "The list of additional recipients"
                              }
                            }
                          },
                          "migrationProperties": {
                            "readOnly": true,
                            "description": "Migration Properties",
                            "type": "object",
                            "properties": {
                              "oldSubnetId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Old Subnet Id"
                              },
                              "oldVnetSiteId": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Old Vnet Site Id"
                              },
                              "migrationProgress": {
                                "readOnly": true,
                                "description": "Migration Progress",
                                "type": "object",
                                "properties": {
                                  "completionPercentage": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Completion Percentage"
                                  },
                                  "progressMessage": {
                                    "type": "string",
                                    "description": "Progress Message"
                                  }
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "the current deployment or provisioning state, which only appears in the response."
                          },
                          "configDiagnostics": {
                            "description": "Configuration diagnostics data containing latest execution from client.",
                            "type": "object",
                            "properties": {
                              "lastExecuted": {
                                "type": "string",
                                "format": "date-time-rfc1123",
                                "description": "Last domain configuration diagnostics DateTime"
                              },
                              "validatorResults": {
                                "type": "array",
                                "description": "List of Configuration Diagnostics validator results.",
                                "items": {
                                  "description": "Config Diagnostics validator result data",
                                  "type": "object",
                                  "properties": {
                                    "validatorId": {
                                      "type": "string",
                                      "description": "Validator identifier"
                                    },
                                    "replicaSetSubnetDisplayName": {
                                      "type": "string",
                                      "description": "Replica set location and subnet name"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "Running",
                                        "OK",
                                        "Failure",
                                        "Warning",
                                        "Skipped"
                                      ],
                                      "default": "None",
                                      "description": "Status for individual validator after running diagnostics.",
                                      "x-ms-enum": {
                                        "name": "status",
                                        "modelAsString": true
                                      }
                                    },
                                    "issues": {
                                      "type": "array",
                                      "description": "List of resource config validation issues.",
                                      "items": {
                                        "description": "Specific issue for a particular config diagnostics validator",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Validation issue identifier."
                                          },
                                          "descriptionParams": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "Single resource property involved in issue description."
                                            },
                                            "description": "List of domain resource property name or values used to compose a rich description."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "the list of domain services."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The continuation token for the next page of results.",
                  "readOnly": true
                }
              },
              "description": "The response from the List Domain Services operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}": {
      "put": {
        "tags": [
          "DomainServices"
        ],
        "operationId": "DomainServices_CreateOrUpdate",
        "summary": "Create or Update Domain Service (PUT Resource)",
        "description": "The Create Domain Service operation creates a new domain service with the specified parameters. If the specific service already exists, then any patchable properties will be updated and any immutable properties will remain unchanged.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainService",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Domain service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Domain service properties",
                  "type": "object",
                  "properties": {
                    "version": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Data Model Version"
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory Tenant Id"
                    },
                    "domainName": {
                      "type": "string",
                      "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Deployment Id"
                    },
                    "syncOwner": {
                      "readOnly": true,
                      "type": "string",
                      "description": "SyncOwner ReplicaSet Id"
                    },
                    "syncApplicationId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The unique sync application id of the Azure AD Domain Services deployment."
                    },
                    "replicaSets": {
                      "type": "array",
                      "items": {
                        "description": "ReplicaSet",
                        "type": "object",
                        "properties": {
                          "replicaSetId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ReplicaSet Id"
                          },
                          "location": {
                            "type": "string",
                            "description": "Virtual network location"
                          },
                          "vnetSiteId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Virtual network site id"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                          },
                          "domainControllerIpAddress": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Domain Controller IP Address"
                            },
                            "description": "List of Domain Controller IP Address"
                          },
                          "externalAccessIpAddress": {
                            "readOnly": true,
                            "type": "string",
                            "description": "External access ip address."
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of Domain Service instance"
                          },
                          "healthLastEvaluated": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "description": "Last domain evaluation run DateTime"
                          },
                          "healthMonitors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Monitors",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Name"
                                },
                                "details": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Details"
                                }
                              }
                            },
                            "description": "List of Domain Health Monitors"
                          },
                          "healthAlerts": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Alerts",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Name"
                                },
                                "issue": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Issue"
                                },
                                "severity": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Severity"
                                },
                                "raised": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Raised DateTime"
                                },
                                "lastDetected": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Last Detected DateTime"
                                },
                                "resolutionUri": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert TSG Link"
                                }
                              }
                            },
                            "description": "List of Domain Health Alerts"
                          }
                        }
                      },
                      "description": "List of ReplicaSets"
                    },
                    "ldapsSettings": {
                      "description": "Secure LDAP Settings",
                      "type": "object",
                      "properties": {
                        "ldaps": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "Ldaps",
                            "modelAsString": true
                          }
                        },
                        "pfxCertificate": {
                          "type": "string",
                          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                        },
                        "pfxCertificatePassword": {
                          "type": "string",
                          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                        },
                        "publicCertificate": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Public certificate used to configure secure ldap."
                        },
                        "certificateThumbprint": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Thumbprint of configure ldaps certificate."
                        },
                        "certificateNotAfter": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "NotAfter DateTime of configure ldaps certificate."
                        },
                        "externalAccess": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ExternalAccess",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "resourceForestSettings": {
                      "description": "Resource Forest Settings",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "array",
                          "items": {
                            "description": "Forest Trust Setting",
                            "type": "object",
                            "properties": {
                              "trustedDomainFqdn": {
                                "type": "string",
                                "description": "Trusted Domain FQDN"
                              },
                              "trustDirection": {
                                "type": "string",
                                "description": "Trust Direction"
                              },
                              "friendlyName": {
                                "type": "string",
                                "description": "Friendly Name"
                              },
                              "remoteDnsIps": {
                                "type": "string",
                                "description": "Remote Dns ips"
                              },
                              "trustPassword": {
                                "type": "string",
                                "description": "Trust Password",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "description": "List of settings for Resource Forest"
                        },
                        "resourceForest": {
                          "type": "string",
                          "description": "Resource Forest"
                        }
                      }
                    },
                    "domainSecuritySettings": {
                      "description": "DomainSecurity Settings",
                      "type": "object",
                      "properties": {
                        "ntlmV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "NtlmV1",
                            "modelAsString": true
                          }
                        },
                        "tlsV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "TlsV1",
                            "modelAsString": true
                          }
                        },
                        "syncNtlmPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncNtlmPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncKerberosPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncKerberosPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncOnPremPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncOnPremPasswords",
                            "modelAsString": true
                          }
                        },
                        "kerberosRc4Encryption": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosRc4Encryption",
                            "modelAsString": true
                          }
                        },
                        "kerberosArmoring": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosArmoring",
                            "modelAsString": true
                          }
                        },
                        "ldapSigning": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "LdapSigning",
                            "modelAsString": true
                          }
                        },
                        "channelBinding": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ChannelBinding",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "domainConfigurationType": {
                      "type": "string",
                      "description": "Domain Configuration Type"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Sku Type"
                    },
                    "filteredSync": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                      "x-ms-enum": {
                        "name": "FilteredSync",
                        "modelAsString": true
                      }
                    },
                    "syncScope": {
                      "type": "string",
                      "enum": [
                        "All",
                        "CloudOnly"
                      ],
                      "default": "All",
                      "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                      "x-ms-enum": {
                        "name": "SyncScope",
                        "modelAsString": true
                      }
                    },
                    "notificationSettings": {
                      "description": "Notification Settings",
                      "type": "object",
                      "properties": {
                        "notifyGlobalAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should global admins be notified",
                          "x-ms-enum": {
                            "name": "notifyGlobalAdmins",
                            "modelAsString": true
                          }
                        },
                        "notifyDcAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should domain controller admins be notified",
                          "x-ms-enum": {
                            "name": "notifyDcAdmins",
                            "modelAsString": true
                          }
                        },
                        "additionalRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Email address for additional recipient"
                          },
                          "description": "The list of additional recipients"
                        }
                      }
                    },
                    "migrationProperties": {
                      "readOnly": true,
                      "description": "Migration Properties",
                      "type": "object",
                      "properties": {
                        "oldSubnetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Subnet Id"
                        },
                        "oldVnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Vnet Site Id"
                        },
                        "migrationProgress": {
                          "readOnly": true,
                          "description": "Migration Progress",
                          "type": "object",
                          "properties": {
                            "completionPercentage": {
                              "type": "number",
                              "format": "double",
                              "description": "Completion Percentage"
                            },
                            "progressMessage": {
                              "type": "string",
                              "description": "Progress Message"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "the current deployment or provisioning state, which only appears in the response."
                    },
                    "configDiagnostics": {
                      "description": "Configuration diagnostics data containing latest execution from client.",
                      "type": "object",
                      "properties": {
                        "lastExecuted": {
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain configuration diagnostics DateTime"
                        },
                        "validatorResults": {
                          "type": "array",
                          "description": "List of Configuration Diagnostics validator results.",
                          "items": {
                            "description": "Config Diagnostics validator result data",
                            "type": "object",
                            "properties": {
                              "validatorId": {
                                "type": "string",
                                "description": "Validator identifier"
                              },
                              "replicaSetSubnetDisplayName": {
                                "type": "string",
                                "description": "Replica set location and subnet name"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Running",
                                  "OK",
                                  "Failure",
                                  "Warning",
                                  "Skipped"
                                ],
                                "default": "None",
                                "description": "Status for individual validator after running diagnostics.",
                                "x-ms-enum": {
                                  "name": "status",
                                  "modelAsString": true
                                }
                              },
                              "issues": {
                                "type": "array",
                                "description": "List of resource config validation issues.",
                                "items": {
                                  "description": "Specific issue for a particular config diagnostics validator",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Validation issue identifier."
                                    },
                                    "descriptionParams": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Single resource property involved in issue description."
                                      },
                                      "description": "List of domain resource property name or values used to compose a rich description."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Properties supplied to the Create or Update a Domain Service operation."
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "description": "Domain service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Domain service properties",
                  "type": "object",
                  "properties": {
                    "version": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Data Model Version"
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory Tenant Id"
                    },
                    "domainName": {
                      "type": "string",
                      "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Deployment Id"
                    },
                    "syncOwner": {
                      "readOnly": true,
                      "type": "string",
                      "description": "SyncOwner ReplicaSet Id"
                    },
                    "syncApplicationId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The unique sync application id of the Azure AD Domain Services deployment."
                    },
                    "replicaSets": {
                      "type": "array",
                      "items": {
                        "description": "ReplicaSet",
                        "type": "object",
                        "properties": {
                          "replicaSetId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ReplicaSet Id"
                          },
                          "location": {
                            "type": "string",
                            "description": "Virtual network location"
                          },
                          "vnetSiteId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Virtual network site id"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                          },
                          "domainControllerIpAddress": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Domain Controller IP Address"
                            },
                            "description": "List of Domain Controller IP Address"
                          },
                          "externalAccessIpAddress": {
                            "readOnly": true,
                            "type": "string",
                            "description": "External access ip address."
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of Domain Service instance"
                          },
                          "healthLastEvaluated": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "description": "Last domain evaluation run DateTime"
                          },
                          "healthMonitors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Monitors",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Name"
                                },
                                "details": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Details"
                                }
                              }
                            },
                            "description": "List of Domain Health Monitors"
                          },
                          "healthAlerts": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Alerts",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Name"
                                },
                                "issue": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Issue"
                                },
                                "severity": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Severity"
                                },
                                "raised": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Raised DateTime"
                                },
                                "lastDetected": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Last Detected DateTime"
                                },
                                "resolutionUri": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert TSG Link"
                                }
                              }
                            },
                            "description": "List of Domain Health Alerts"
                          }
                        }
                      },
                      "description": "List of ReplicaSets"
                    },
                    "ldapsSettings": {
                      "description": "Secure LDAP Settings",
                      "type": "object",
                      "properties": {
                        "ldaps": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "Ldaps",
                            "modelAsString": true
                          }
                        },
                        "pfxCertificate": {
                          "type": "string",
                          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                        },
                        "pfxCertificatePassword": {
                          "type": "string",
                          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                        },
                        "publicCertificate": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Public certificate used to configure secure ldap."
                        },
                        "certificateThumbprint": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Thumbprint of configure ldaps certificate."
                        },
                        "certificateNotAfter": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "NotAfter DateTime of configure ldaps certificate."
                        },
                        "externalAccess": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ExternalAccess",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "resourceForestSettings": {
                      "description": "Resource Forest Settings",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "array",
                          "items": {
                            "description": "Forest Trust Setting",
                            "type": "object",
                            "properties": {
                              "trustedDomainFqdn": {
                                "type": "string",
                                "description": "Trusted Domain FQDN"
                              },
                              "trustDirection": {
                                "type": "string",
                                "description": "Trust Direction"
                              },
                              "friendlyName": {
                                "type": "string",
                                "description": "Friendly Name"
                              },
                              "remoteDnsIps": {
                                "type": "string",
                                "description": "Remote Dns ips"
                              },
                              "trustPassword": {
                                "type": "string",
                                "description": "Trust Password",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "description": "List of settings for Resource Forest"
                        },
                        "resourceForest": {
                          "type": "string",
                          "description": "Resource Forest"
                        }
                      }
                    },
                    "domainSecuritySettings": {
                      "description": "DomainSecurity Settings",
                      "type": "object",
                      "properties": {
                        "ntlmV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "NtlmV1",
                            "modelAsString": true
                          }
                        },
                        "tlsV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "TlsV1",
                            "modelAsString": true
                          }
                        },
                        "syncNtlmPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncNtlmPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncKerberosPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncKerberosPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncOnPremPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncOnPremPasswords",
                            "modelAsString": true
                          }
                        },
                        "kerberosRc4Encryption": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosRc4Encryption",
                            "modelAsString": true
                          }
                        },
                        "kerberosArmoring": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosArmoring",
                            "modelAsString": true
                          }
                        },
                        "ldapSigning": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "LdapSigning",
                            "modelAsString": true
                          }
                        },
                        "channelBinding": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ChannelBinding",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "domainConfigurationType": {
                      "type": "string",
                      "description": "Domain Configuration Type"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Sku Type"
                    },
                    "filteredSync": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                      "x-ms-enum": {
                        "name": "FilteredSync",
                        "modelAsString": true
                      }
                    },
                    "syncScope": {
                      "type": "string",
                      "enum": [
                        "All",
                        "CloudOnly"
                      ],
                      "default": "All",
                      "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                      "x-ms-enum": {
                        "name": "SyncScope",
                        "modelAsString": true
                      }
                    },
                    "notificationSettings": {
                      "description": "Notification Settings",
                      "type": "object",
                      "properties": {
                        "notifyGlobalAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should global admins be notified",
                          "x-ms-enum": {
                            "name": "notifyGlobalAdmins",
                            "modelAsString": true
                          }
                        },
                        "notifyDcAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should domain controller admins be notified",
                          "x-ms-enum": {
                            "name": "notifyDcAdmins",
                            "modelAsString": true
                          }
                        },
                        "additionalRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Email address for additional recipient"
                          },
                          "description": "The list of additional recipients"
                        }
                      }
                    },
                    "migrationProperties": {
                      "readOnly": true,
                      "description": "Migration Properties",
                      "type": "object",
                      "properties": {
                        "oldSubnetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Subnet Id"
                        },
                        "oldVnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Vnet Site Id"
                        },
                        "migrationProgress": {
                          "readOnly": true,
                          "description": "Migration Progress",
                          "type": "object",
                          "properties": {
                            "completionPercentage": {
                              "type": "number",
                              "format": "double",
                              "description": "Completion Percentage"
                            },
                            "progressMessage": {
                              "type": "string",
                              "description": "Progress Message"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "the current deployment or provisioning state, which only appears in the response."
                    },
                    "configDiagnostics": {
                      "description": "Configuration diagnostics data containing latest execution from client.",
                      "type": "object",
                      "properties": {
                        "lastExecuted": {
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain configuration diagnostics DateTime"
                        },
                        "validatorResults": {
                          "type": "array",
                          "description": "List of Configuration Diagnostics validator results.",
                          "items": {
                            "description": "Config Diagnostics validator result data",
                            "type": "object",
                            "properties": {
                              "validatorId": {
                                "type": "string",
                                "description": "Validator identifier"
                              },
                              "replicaSetSubnetDisplayName": {
                                "type": "string",
                                "description": "Replica set location and subnet name"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Running",
                                  "OK",
                                  "Failure",
                                  "Warning",
                                  "Skipped"
                                ],
                                "default": "None",
                                "description": "Status for individual validator after running diagnostics.",
                                "x-ms-enum": {
                                  "name": "status",
                                  "modelAsString": true
                                }
                              },
                              "issues": {
                                "type": "array",
                                "description": "List of resource config validation issues.",
                                "items": {
                                  "description": "Specific issue for a particular config diagnostics validator",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Validation issue identifier."
                                    },
                                    "descriptionParams": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Single resource property involved in issue description."
                                      },
                                      "description": "List of domain resource property name or values used to compose a rich description."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "HTTP 201 (Created) if the operation completed successfully.",
            "schema": {
              "description": "Domain service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Domain service properties",
                  "type": "object",
                  "properties": {
                    "version": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Data Model Version"
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory Tenant Id"
                    },
                    "domainName": {
                      "type": "string",
                      "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Deployment Id"
                    },
                    "syncOwner": {
                      "readOnly": true,
                      "type": "string",
                      "description": "SyncOwner ReplicaSet Id"
                    },
                    "syncApplicationId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The unique sync application id of the Azure AD Domain Services deployment."
                    },
                    "replicaSets": {
                      "type": "array",
                      "items": {
                        "description": "ReplicaSet",
                        "type": "object",
                        "properties": {
                          "replicaSetId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ReplicaSet Id"
                          },
                          "location": {
                            "type": "string",
                            "description": "Virtual network location"
                          },
                          "vnetSiteId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Virtual network site id"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                          },
                          "domainControllerIpAddress": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Domain Controller IP Address"
                            },
                            "description": "List of Domain Controller IP Address"
                          },
                          "externalAccessIpAddress": {
                            "readOnly": true,
                            "type": "string",
                            "description": "External access ip address."
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of Domain Service instance"
                          },
                          "healthLastEvaluated": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "description": "Last domain evaluation run DateTime"
                          },
                          "healthMonitors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Monitors",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Name"
                                },
                                "details": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Details"
                                }
                              }
                            },
                            "description": "List of Domain Health Monitors"
                          },
                          "healthAlerts": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Alerts",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Name"
                                },
                                "issue": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Issue"
                                },
                                "severity": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Severity"
                                },
                                "raised": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Raised DateTime"
                                },
                                "lastDetected": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Last Detected DateTime"
                                },
                                "resolutionUri": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert TSG Link"
                                }
                              }
                            },
                            "description": "List of Domain Health Alerts"
                          }
                        }
                      },
                      "description": "List of ReplicaSets"
                    },
                    "ldapsSettings": {
                      "description": "Secure LDAP Settings",
                      "type": "object",
                      "properties": {
                        "ldaps": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "Ldaps",
                            "modelAsString": true
                          }
                        },
                        "pfxCertificate": {
                          "type": "string",
                          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                        },
                        "pfxCertificatePassword": {
                          "type": "string",
                          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                        },
                        "publicCertificate": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Public certificate used to configure secure ldap."
                        },
                        "certificateThumbprint": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Thumbprint of configure ldaps certificate."
                        },
                        "certificateNotAfter": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "NotAfter DateTime of configure ldaps certificate."
                        },
                        "externalAccess": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ExternalAccess",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "resourceForestSettings": {
                      "description": "Resource Forest Settings",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "array",
                          "items": {
                            "description": "Forest Trust Setting",
                            "type": "object",
                            "properties": {
                              "trustedDomainFqdn": {
                                "type": "string",
                                "description": "Trusted Domain FQDN"
                              },
                              "trustDirection": {
                                "type": "string",
                                "description": "Trust Direction"
                              },
                              "friendlyName": {
                                "type": "string",
                                "description": "Friendly Name"
                              },
                              "remoteDnsIps": {
                                "type": "string",
                                "description": "Remote Dns ips"
                              },
                              "trustPassword": {
                                "type": "string",
                                "description": "Trust Password",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "description": "List of settings for Resource Forest"
                        },
                        "resourceForest": {
                          "type": "string",
                          "description": "Resource Forest"
                        }
                      }
                    },
                    "domainSecuritySettings": {
                      "description": "DomainSecurity Settings",
                      "type": "object",
                      "properties": {
                        "ntlmV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "NtlmV1",
                            "modelAsString": true
                          }
                        },
                        "tlsV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "TlsV1",
                            "modelAsString": true
                          }
                        },
                        "syncNtlmPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncNtlmPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncKerberosPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncKerberosPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncOnPremPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncOnPremPasswords",
                            "modelAsString": true
                          }
                        },
                        "kerberosRc4Encryption": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosRc4Encryption",
                            "modelAsString": true
                          }
                        },
                        "kerberosArmoring": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosArmoring",
                            "modelAsString": true
                          }
                        },
                        "ldapSigning": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "LdapSigning",
                            "modelAsString": true
                          }
                        },
                        "channelBinding": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ChannelBinding",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "domainConfigurationType": {
                      "type": "string",
                      "description": "Domain Configuration Type"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Sku Type"
                    },
                    "filteredSync": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                      "x-ms-enum": {
                        "name": "FilteredSync",
                        "modelAsString": true
                      }
                    },
                    "syncScope": {
                      "type": "string",
                      "enum": [
                        "All",
                        "CloudOnly"
                      ],
                      "default": "All",
                      "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                      "x-ms-enum": {
                        "name": "SyncScope",
                        "modelAsString": true
                      }
                    },
                    "notificationSettings": {
                      "description": "Notification Settings",
                      "type": "object",
                      "properties": {
                        "notifyGlobalAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should global admins be notified",
                          "x-ms-enum": {
                            "name": "notifyGlobalAdmins",
                            "modelAsString": true
                          }
                        },
                        "notifyDcAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should domain controller admins be notified",
                          "x-ms-enum": {
                            "name": "notifyDcAdmins",
                            "modelAsString": true
                          }
                        },
                        "additionalRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Email address for additional recipient"
                          },
                          "description": "The list of additional recipients"
                        }
                      }
                    },
                    "migrationProperties": {
                      "readOnly": true,
                      "description": "Migration Properties",
                      "type": "object",
                      "properties": {
                        "oldSubnetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Subnet Id"
                        },
                        "oldVnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Vnet Site Id"
                        },
                        "migrationProgress": {
                          "readOnly": true,
                          "description": "Migration Progress",
                          "type": "object",
                          "properties": {
                            "completionPercentage": {
                              "type": "number",
                              "format": "double",
                              "description": "Completion Percentage"
                            },
                            "progressMessage": {
                              "type": "string",
                              "description": "Progress Message"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "the current deployment or provisioning state, which only appears in the response."
                    },
                    "configDiagnostics": {
                      "description": "Configuration diagnostics data containing latest execution from client.",
                      "type": "object",
                      "properties": {
                        "lastExecuted": {
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain configuration diagnostics DateTime"
                        },
                        "validatorResults": {
                          "type": "array",
                          "description": "List of Configuration Diagnostics validator results.",
                          "items": {
                            "description": "Config Diagnostics validator result data",
                            "type": "object",
                            "properties": {
                              "validatorId": {
                                "type": "string",
                                "description": "Validator identifier"
                              },
                              "replicaSetSubnetDisplayName": {
                                "type": "string",
                                "description": "Replica set location and subnet name"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Running",
                                  "OK",
                                  "Failure",
                                  "Warning",
                                  "Skipped"
                                ],
                                "default": "None",
                                "description": "Status for individual validator after running diagnostics.",
                                "x-ms-enum": {
                                  "name": "status",
                                  "modelAsString": true
                                }
                              },
                              "issues": {
                                "type": "array",
                                "description": "List of resource config validation issues.",
                                "items": {
                                  "description": "Specific issue for a particular config diagnostics validator",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Validation issue identifier."
                                    },
                                    "descriptionParams": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Single resource property involved in issue description."
                                      },
                                      "description": "List of domain resource property name or values used to compose a rich description."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "description": "Domain service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Domain service properties",
                  "type": "object",
                  "properties": {
                    "version": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Data Model Version"
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory Tenant Id"
                    },
                    "domainName": {
                      "type": "string",
                      "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Deployment Id"
                    },
                    "syncOwner": {
                      "readOnly": true,
                      "type": "string",
                      "description": "SyncOwner ReplicaSet Id"
                    },
                    "syncApplicationId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The unique sync application id of the Azure AD Domain Services deployment."
                    },
                    "replicaSets": {
                      "type": "array",
                      "items": {
                        "description": "ReplicaSet",
                        "type": "object",
                        "properties": {
                          "replicaSetId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ReplicaSet Id"
                          },
                          "location": {
                            "type": "string",
                            "description": "Virtual network location"
                          },
                          "vnetSiteId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Virtual network site id"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                          },
                          "domainControllerIpAddress": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Domain Controller IP Address"
                            },
                            "description": "List of Domain Controller IP Address"
                          },
                          "externalAccessIpAddress": {
                            "readOnly": true,
                            "type": "string",
                            "description": "External access ip address."
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of Domain Service instance"
                          },
                          "healthLastEvaluated": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "description": "Last domain evaluation run DateTime"
                          },
                          "healthMonitors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Monitors",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Name"
                                },
                                "details": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Details"
                                }
                              }
                            },
                            "description": "List of Domain Health Monitors"
                          },
                          "healthAlerts": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Alerts",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Name"
                                },
                                "issue": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Issue"
                                },
                                "severity": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Severity"
                                },
                                "raised": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Raised DateTime"
                                },
                                "lastDetected": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Last Detected DateTime"
                                },
                                "resolutionUri": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert TSG Link"
                                }
                              }
                            },
                            "description": "List of Domain Health Alerts"
                          }
                        }
                      },
                      "description": "List of ReplicaSets"
                    },
                    "ldapsSettings": {
                      "description": "Secure LDAP Settings",
                      "type": "object",
                      "properties": {
                        "ldaps": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "Ldaps",
                            "modelAsString": true
                          }
                        },
                        "pfxCertificate": {
                          "type": "string",
                          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                        },
                        "pfxCertificatePassword": {
                          "type": "string",
                          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                        },
                        "publicCertificate": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Public certificate used to configure secure ldap."
                        },
                        "certificateThumbprint": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Thumbprint of configure ldaps certificate."
                        },
                        "certificateNotAfter": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "NotAfter DateTime of configure ldaps certificate."
                        },
                        "externalAccess": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ExternalAccess",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "resourceForestSettings": {
                      "description": "Resource Forest Settings",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "array",
                          "items": {
                            "description": "Forest Trust Setting",
                            "type": "object",
                            "properties": {
                              "trustedDomainFqdn": {
                                "type": "string",
                                "description": "Trusted Domain FQDN"
                              },
                              "trustDirection": {
                                "type": "string",
                                "description": "Trust Direction"
                              },
                              "friendlyName": {
                                "type": "string",
                                "description": "Friendly Name"
                              },
                              "remoteDnsIps": {
                                "type": "string",
                                "description": "Remote Dns ips"
                              },
                              "trustPassword": {
                                "type": "string",
                                "description": "Trust Password",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "description": "List of settings for Resource Forest"
                        },
                        "resourceForest": {
                          "type": "string",
                          "description": "Resource Forest"
                        }
                      }
                    },
                    "domainSecuritySettings": {
                      "description": "DomainSecurity Settings",
                      "type": "object",
                      "properties": {
                        "ntlmV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "NtlmV1",
                            "modelAsString": true
                          }
                        },
                        "tlsV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "TlsV1",
                            "modelAsString": true
                          }
                        },
                        "syncNtlmPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncNtlmPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncKerberosPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncKerberosPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncOnPremPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncOnPremPasswords",
                            "modelAsString": true
                          }
                        },
                        "kerberosRc4Encryption": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosRc4Encryption",
                            "modelAsString": true
                          }
                        },
                        "kerberosArmoring": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosArmoring",
                            "modelAsString": true
                          }
                        },
                        "ldapSigning": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "LdapSigning",
                            "modelAsString": true
                          }
                        },
                        "channelBinding": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ChannelBinding",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "domainConfigurationType": {
                      "type": "string",
                      "description": "Domain Configuration Type"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Sku Type"
                    },
                    "filteredSync": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                      "x-ms-enum": {
                        "name": "FilteredSync",
                        "modelAsString": true
                      }
                    },
                    "syncScope": {
                      "type": "string",
                      "enum": [
                        "All",
                        "CloudOnly"
                      ],
                      "default": "All",
                      "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                      "x-ms-enum": {
                        "name": "SyncScope",
                        "modelAsString": true
                      }
                    },
                    "notificationSettings": {
                      "description": "Notification Settings",
                      "type": "object",
                      "properties": {
                        "notifyGlobalAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should global admins be notified",
                          "x-ms-enum": {
                            "name": "notifyGlobalAdmins",
                            "modelAsString": true
                          }
                        },
                        "notifyDcAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should domain controller admins be notified",
                          "x-ms-enum": {
                            "name": "notifyDcAdmins",
                            "modelAsString": true
                          }
                        },
                        "additionalRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Email address for additional recipient"
                          },
                          "description": "The list of additional recipients"
                        }
                      }
                    },
                    "migrationProperties": {
                      "readOnly": true,
                      "description": "Migration Properties",
                      "type": "object",
                      "properties": {
                        "oldSubnetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Subnet Id"
                        },
                        "oldVnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Vnet Site Id"
                        },
                        "migrationProgress": {
                          "readOnly": true,
                          "description": "Migration Progress",
                          "type": "object",
                          "properties": {
                            "completionPercentage": {
                              "type": "number",
                              "format": "double",
                              "description": "Completion Percentage"
                            },
                            "progressMessage": {
                              "type": "string",
                              "description": "Progress Message"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "the current deployment or provisioning state, which only appears in the response."
                    },
                    "configDiagnostics": {
                      "description": "Configuration diagnostics data containing latest execution from client.",
                      "type": "object",
                      "properties": {
                        "lastExecuted": {
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain configuration diagnostics DateTime"
                        },
                        "validatorResults": {
                          "type": "array",
                          "description": "List of Configuration Diagnostics validator results.",
                          "items": {
                            "description": "Config Diagnostics validator result data",
                            "type": "object",
                            "properties": {
                              "validatorId": {
                                "type": "string",
                                "description": "Validator identifier"
                              },
                              "replicaSetSubnetDisplayName": {
                                "type": "string",
                                "description": "Replica set location and subnet name"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Running",
                                  "OK",
                                  "Failure",
                                  "Warning",
                                  "Skipped"
                                ],
                                "default": "None",
                                "description": "Status for individual validator after running diagnostics.",
                                "x-ms-enum": {
                                  "name": "status",
                                  "modelAsString": true
                                }
                              },
                              "issues": {
                                "type": "array",
                                "description": "List of resource config validation issues.",
                                "items": {
                                  "description": "Specific issue for a particular config diagnostics validator",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Validation issue identifier."
                                    },
                                    "descriptionParams": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Single resource property involved in issue description."
                                      },
                                      "description": "List of domain resource property name or values used to compose a rich description."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "DomainServices"
        ],
        "operationId": "DomainServices_Get",
        "summary": "Get Domain Service",
        "description": "The Get Domain Service operation retrieves a json representation of the Domain Service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "description": "Domain service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Domain service properties",
                  "type": "object",
                  "properties": {
                    "version": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Data Model Version"
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory Tenant Id"
                    },
                    "domainName": {
                      "type": "string",
                      "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Deployment Id"
                    },
                    "syncOwner": {
                      "readOnly": true,
                      "type": "string",
                      "description": "SyncOwner ReplicaSet Id"
                    },
                    "syncApplicationId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The unique sync application id of the Azure AD Domain Services deployment."
                    },
                    "replicaSets": {
                      "type": "array",
                      "items": {
                        "description": "ReplicaSet",
                        "type": "object",
                        "properties": {
                          "replicaSetId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ReplicaSet Id"
                          },
                          "location": {
                            "type": "string",
                            "description": "Virtual network location"
                          },
                          "vnetSiteId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Virtual network site id"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                          },
                          "domainControllerIpAddress": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Domain Controller IP Address"
                            },
                            "description": "List of Domain Controller IP Address"
                          },
                          "externalAccessIpAddress": {
                            "readOnly": true,
                            "type": "string",
                            "description": "External access ip address."
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of Domain Service instance"
                          },
                          "healthLastEvaluated": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "description": "Last domain evaluation run DateTime"
                          },
                          "healthMonitors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Monitors",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Name"
                                },
                                "details": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Details"
                                }
                              }
                            },
                            "description": "List of Domain Health Monitors"
                          },
                          "healthAlerts": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Alerts",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Name"
                                },
                                "issue": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Issue"
                                },
                                "severity": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Severity"
                                },
                                "raised": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Raised DateTime"
                                },
                                "lastDetected": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Last Detected DateTime"
                                },
                                "resolutionUri": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert TSG Link"
                                }
                              }
                            },
                            "description": "List of Domain Health Alerts"
                          }
                        }
                      },
                      "description": "List of ReplicaSets"
                    },
                    "ldapsSettings": {
                      "description": "Secure LDAP Settings",
                      "type": "object",
                      "properties": {
                        "ldaps": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "Ldaps",
                            "modelAsString": true
                          }
                        },
                        "pfxCertificate": {
                          "type": "string",
                          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                        },
                        "pfxCertificatePassword": {
                          "type": "string",
                          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                        },
                        "publicCertificate": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Public certificate used to configure secure ldap."
                        },
                        "certificateThumbprint": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Thumbprint of configure ldaps certificate."
                        },
                        "certificateNotAfter": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "NotAfter DateTime of configure ldaps certificate."
                        },
                        "externalAccess": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ExternalAccess",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "resourceForestSettings": {
                      "description": "Resource Forest Settings",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "array",
                          "items": {
                            "description": "Forest Trust Setting",
                            "type": "object",
                            "properties": {
                              "trustedDomainFqdn": {
                                "type": "string",
                                "description": "Trusted Domain FQDN"
                              },
                              "trustDirection": {
                                "type": "string",
                                "description": "Trust Direction"
                              },
                              "friendlyName": {
                                "type": "string",
                                "description": "Friendly Name"
                              },
                              "remoteDnsIps": {
                                "type": "string",
                                "description": "Remote Dns ips"
                              },
                              "trustPassword": {
                                "type": "string",
                                "description": "Trust Password",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "description": "List of settings for Resource Forest"
                        },
                        "resourceForest": {
                          "type": "string",
                          "description": "Resource Forest"
                        }
                      }
                    },
                    "domainSecuritySettings": {
                      "description": "DomainSecurity Settings",
                      "type": "object",
                      "properties": {
                        "ntlmV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "NtlmV1",
                            "modelAsString": true
                          }
                        },
                        "tlsV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "TlsV1",
                            "modelAsString": true
                          }
                        },
                        "syncNtlmPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncNtlmPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncKerberosPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncKerberosPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncOnPremPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncOnPremPasswords",
                            "modelAsString": true
                          }
                        },
                        "kerberosRc4Encryption": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosRc4Encryption",
                            "modelAsString": true
                          }
                        },
                        "kerberosArmoring": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosArmoring",
                            "modelAsString": true
                          }
                        },
                        "ldapSigning": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "LdapSigning",
                            "modelAsString": true
                          }
                        },
                        "channelBinding": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ChannelBinding",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "domainConfigurationType": {
                      "type": "string",
                      "description": "Domain Configuration Type"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Sku Type"
                    },
                    "filteredSync": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                      "x-ms-enum": {
                        "name": "FilteredSync",
                        "modelAsString": true
                      }
                    },
                    "syncScope": {
                      "type": "string",
                      "enum": [
                        "All",
                        "CloudOnly"
                      ],
                      "default": "All",
                      "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                      "x-ms-enum": {
                        "name": "SyncScope",
                        "modelAsString": true
                      }
                    },
                    "notificationSettings": {
                      "description": "Notification Settings",
                      "type": "object",
                      "properties": {
                        "notifyGlobalAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should global admins be notified",
                          "x-ms-enum": {
                            "name": "notifyGlobalAdmins",
                            "modelAsString": true
                          }
                        },
                        "notifyDcAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should domain controller admins be notified",
                          "x-ms-enum": {
                            "name": "notifyDcAdmins",
                            "modelAsString": true
                          }
                        },
                        "additionalRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Email address for additional recipient"
                          },
                          "description": "The list of additional recipients"
                        }
                      }
                    },
                    "migrationProperties": {
                      "readOnly": true,
                      "description": "Migration Properties",
                      "type": "object",
                      "properties": {
                        "oldSubnetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Subnet Id"
                        },
                        "oldVnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Vnet Site Id"
                        },
                        "migrationProgress": {
                          "readOnly": true,
                          "description": "Migration Progress",
                          "type": "object",
                          "properties": {
                            "completionPercentage": {
                              "type": "number",
                              "format": "double",
                              "description": "Completion Percentage"
                            },
                            "progressMessage": {
                              "type": "string",
                              "description": "Progress Message"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "the current deployment or provisioning state, which only appears in the response."
                    },
                    "configDiagnostics": {
                      "description": "Configuration diagnostics data containing latest execution from client.",
                      "type": "object",
                      "properties": {
                        "lastExecuted": {
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain configuration diagnostics DateTime"
                        },
                        "validatorResults": {
                          "type": "array",
                          "description": "List of Configuration Diagnostics validator results.",
                          "items": {
                            "description": "Config Diagnostics validator result data",
                            "type": "object",
                            "properties": {
                              "validatorId": {
                                "type": "string",
                                "description": "Validator identifier"
                              },
                              "replicaSetSubnetDisplayName": {
                                "type": "string",
                                "description": "Replica set location and subnet name"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Running",
                                  "OK",
                                  "Failure",
                                  "Warning",
                                  "Skipped"
                                ],
                                "default": "None",
                                "description": "Status for individual validator after running diagnostics.",
                                "x-ms-enum": {
                                  "name": "status",
                                  "modelAsString": true
                                }
                              },
                              "issues": {
                                "type": "array",
                                "description": "List of resource config validation issues.",
                                "items": {
                                  "description": "Specific issue for a particular config diagnostics validator",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Validation issue identifier."
                                    },
                                    "descriptionParams": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Single resource property involved in issue description."
                                      },
                                      "description": "List of domain resource property name or values used to compose a rich description."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DomainServices"
        ],
        "operationId": "DomainServices_Delete",
        "summary": "Delete Domain Service (DELETE Resource)",
        "description": "The Delete Domain Service operation deletes an existing Domain Service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "HTTP 204 (Not Content) should be used if the resource does not exist and the request is well formed."
          }
        }
      },
      "patch": {
        "tags": [
          "DomainServices"
        ],
        "operationId": "DomainServices_Update",
        "summary": "Update Domain Service (PATCH Resource)",
        "description": "The Update Domain Service operation can be used to update the existing deployment. The update call only supports the properties listed in the PATCH body.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainService",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Domain service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Domain service properties",
                  "type": "object",
                  "properties": {
                    "version": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Data Model Version"
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory Tenant Id"
                    },
                    "domainName": {
                      "type": "string",
                      "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Deployment Id"
                    },
                    "syncOwner": {
                      "readOnly": true,
                      "type": "string",
                      "description": "SyncOwner ReplicaSet Id"
                    },
                    "syncApplicationId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The unique sync application id of the Azure AD Domain Services deployment."
                    },
                    "replicaSets": {
                      "type": "array",
                      "items": {
                        "description": "ReplicaSet",
                        "type": "object",
                        "properties": {
                          "replicaSetId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ReplicaSet Id"
                          },
                          "location": {
                            "type": "string",
                            "description": "Virtual network location"
                          },
                          "vnetSiteId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Virtual network site id"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                          },
                          "domainControllerIpAddress": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Domain Controller IP Address"
                            },
                            "description": "List of Domain Controller IP Address"
                          },
                          "externalAccessIpAddress": {
                            "readOnly": true,
                            "type": "string",
                            "description": "External access ip address."
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of Domain Service instance"
                          },
                          "healthLastEvaluated": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "description": "Last domain evaluation run DateTime"
                          },
                          "healthMonitors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Monitors",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Name"
                                },
                                "details": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Details"
                                }
                              }
                            },
                            "description": "List of Domain Health Monitors"
                          },
                          "healthAlerts": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Alerts",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Name"
                                },
                                "issue": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Issue"
                                },
                                "severity": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Severity"
                                },
                                "raised": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Raised DateTime"
                                },
                                "lastDetected": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Last Detected DateTime"
                                },
                                "resolutionUri": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert TSG Link"
                                }
                              }
                            },
                            "description": "List of Domain Health Alerts"
                          }
                        }
                      },
                      "description": "List of ReplicaSets"
                    },
                    "ldapsSettings": {
                      "description": "Secure LDAP Settings",
                      "type": "object",
                      "properties": {
                        "ldaps": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "Ldaps",
                            "modelAsString": true
                          }
                        },
                        "pfxCertificate": {
                          "type": "string",
                          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                        },
                        "pfxCertificatePassword": {
                          "type": "string",
                          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                        },
                        "publicCertificate": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Public certificate used to configure secure ldap."
                        },
                        "certificateThumbprint": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Thumbprint of configure ldaps certificate."
                        },
                        "certificateNotAfter": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "NotAfter DateTime of configure ldaps certificate."
                        },
                        "externalAccess": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ExternalAccess",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "resourceForestSettings": {
                      "description": "Resource Forest Settings",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "array",
                          "items": {
                            "description": "Forest Trust Setting",
                            "type": "object",
                            "properties": {
                              "trustedDomainFqdn": {
                                "type": "string",
                                "description": "Trusted Domain FQDN"
                              },
                              "trustDirection": {
                                "type": "string",
                                "description": "Trust Direction"
                              },
                              "friendlyName": {
                                "type": "string",
                                "description": "Friendly Name"
                              },
                              "remoteDnsIps": {
                                "type": "string",
                                "description": "Remote Dns ips"
                              },
                              "trustPassword": {
                                "type": "string",
                                "description": "Trust Password",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "description": "List of settings for Resource Forest"
                        },
                        "resourceForest": {
                          "type": "string",
                          "description": "Resource Forest"
                        }
                      }
                    },
                    "domainSecuritySettings": {
                      "description": "DomainSecurity Settings",
                      "type": "object",
                      "properties": {
                        "ntlmV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "NtlmV1",
                            "modelAsString": true
                          }
                        },
                        "tlsV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "TlsV1",
                            "modelAsString": true
                          }
                        },
                        "syncNtlmPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncNtlmPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncKerberosPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncKerberosPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncOnPremPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncOnPremPasswords",
                            "modelAsString": true
                          }
                        },
                        "kerberosRc4Encryption": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosRc4Encryption",
                            "modelAsString": true
                          }
                        },
                        "kerberosArmoring": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosArmoring",
                            "modelAsString": true
                          }
                        },
                        "ldapSigning": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "LdapSigning",
                            "modelAsString": true
                          }
                        },
                        "channelBinding": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ChannelBinding",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "domainConfigurationType": {
                      "type": "string",
                      "description": "Domain Configuration Type"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Sku Type"
                    },
                    "filteredSync": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                      "x-ms-enum": {
                        "name": "FilteredSync",
                        "modelAsString": true
                      }
                    },
                    "syncScope": {
                      "type": "string",
                      "enum": [
                        "All",
                        "CloudOnly"
                      ],
                      "default": "All",
                      "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                      "x-ms-enum": {
                        "name": "SyncScope",
                        "modelAsString": true
                      }
                    },
                    "notificationSettings": {
                      "description": "Notification Settings",
                      "type": "object",
                      "properties": {
                        "notifyGlobalAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should global admins be notified",
                          "x-ms-enum": {
                            "name": "notifyGlobalAdmins",
                            "modelAsString": true
                          }
                        },
                        "notifyDcAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should domain controller admins be notified",
                          "x-ms-enum": {
                            "name": "notifyDcAdmins",
                            "modelAsString": true
                          }
                        },
                        "additionalRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Email address for additional recipient"
                          },
                          "description": "The list of additional recipients"
                        }
                      }
                    },
                    "migrationProperties": {
                      "readOnly": true,
                      "description": "Migration Properties",
                      "type": "object",
                      "properties": {
                        "oldSubnetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Subnet Id"
                        },
                        "oldVnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Vnet Site Id"
                        },
                        "migrationProgress": {
                          "readOnly": true,
                          "description": "Migration Progress",
                          "type": "object",
                          "properties": {
                            "completionPercentage": {
                              "type": "number",
                              "format": "double",
                              "description": "Completion Percentage"
                            },
                            "progressMessage": {
                              "type": "string",
                              "description": "Progress Message"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "the current deployment or provisioning state, which only appears in the response."
                    },
                    "configDiagnostics": {
                      "description": "Configuration diagnostics data containing latest execution from client.",
                      "type": "object",
                      "properties": {
                        "lastExecuted": {
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain configuration diagnostics DateTime"
                        },
                        "validatorResults": {
                          "type": "array",
                          "description": "List of Configuration Diagnostics validator results.",
                          "items": {
                            "description": "Config Diagnostics validator result data",
                            "type": "object",
                            "properties": {
                              "validatorId": {
                                "type": "string",
                                "description": "Validator identifier"
                              },
                              "replicaSetSubnetDisplayName": {
                                "type": "string",
                                "description": "Replica set location and subnet name"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Running",
                                  "OK",
                                  "Failure",
                                  "Warning",
                                  "Skipped"
                                ],
                                "default": "None",
                                "description": "Status for individual validator after running diagnostics.",
                                "x-ms-enum": {
                                  "name": "status",
                                  "modelAsString": true
                                }
                              },
                              "issues": {
                                "type": "array",
                                "description": "List of resource config validation issues.",
                                "items": {
                                  "description": "Specific issue for a particular config diagnostics validator",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Validation issue identifier."
                                    },
                                    "descriptionParams": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Single resource property involved in issue description."
                                      },
                                      "description": "List of domain resource property name or values used to compose a rich description."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Properties supplied to the Update a Domain Service operation."
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "description": "Domain service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Domain service properties",
                  "type": "object",
                  "properties": {
                    "version": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Data Model Version"
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory Tenant Id"
                    },
                    "domainName": {
                      "type": "string",
                      "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Deployment Id"
                    },
                    "syncOwner": {
                      "readOnly": true,
                      "type": "string",
                      "description": "SyncOwner ReplicaSet Id"
                    },
                    "syncApplicationId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The unique sync application id of the Azure AD Domain Services deployment."
                    },
                    "replicaSets": {
                      "type": "array",
                      "items": {
                        "description": "ReplicaSet",
                        "type": "object",
                        "properties": {
                          "replicaSetId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ReplicaSet Id"
                          },
                          "location": {
                            "type": "string",
                            "description": "Virtual network location"
                          },
                          "vnetSiteId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Virtual network site id"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                          },
                          "domainControllerIpAddress": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Domain Controller IP Address"
                            },
                            "description": "List of Domain Controller IP Address"
                          },
                          "externalAccessIpAddress": {
                            "readOnly": true,
                            "type": "string",
                            "description": "External access ip address."
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of Domain Service instance"
                          },
                          "healthLastEvaluated": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "description": "Last domain evaluation run DateTime"
                          },
                          "healthMonitors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Monitors",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Name"
                                },
                                "details": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Details"
                                }
                              }
                            },
                            "description": "List of Domain Health Monitors"
                          },
                          "healthAlerts": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Alerts",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Name"
                                },
                                "issue": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Issue"
                                },
                                "severity": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Severity"
                                },
                                "raised": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Raised DateTime"
                                },
                                "lastDetected": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Last Detected DateTime"
                                },
                                "resolutionUri": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert TSG Link"
                                }
                              }
                            },
                            "description": "List of Domain Health Alerts"
                          }
                        }
                      },
                      "description": "List of ReplicaSets"
                    },
                    "ldapsSettings": {
                      "description": "Secure LDAP Settings",
                      "type": "object",
                      "properties": {
                        "ldaps": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "Ldaps",
                            "modelAsString": true
                          }
                        },
                        "pfxCertificate": {
                          "type": "string",
                          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                        },
                        "pfxCertificatePassword": {
                          "type": "string",
                          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                        },
                        "publicCertificate": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Public certificate used to configure secure ldap."
                        },
                        "certificateThumbprint": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Thumbprint of configure ldaps certificate."
                        },
                        "certificateNotAfter": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "NotAfter DateTime of configure ldaps certificate."
                        },
                        "externalAccess": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ExternalAccess",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "resourceForestSettings": {
                      "description": "Resource Forest Settings",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "array",
                          "items": {
                            "description": "Forest Trust Setting",
                            "type": "object",
                            "properties": {
                              "trustedDomainFqdn": {
                                "type": "string",
                                "description": "Trusted Domain FQDN"
                              },
                              "trustDirection": {
                                "type": "string",
                                "description": "Trust Direction"
                              },
                              "friendlyName": {
                                "type": "string",
                                "description": "Friendly Name"
                              },
                              "remoteDnsIps": {
                                "type": "string",
                                "description": "Remote Dns ips"
                              },
                              "trustPassword": {
                                "type": "string",
                                "description": "Trust Password",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "description": "List of settings for Resource Forest"
                        },
                        "resourceForest": {
                          "type": "string",
                          "description": "Resource Forest"
                        }
                      }
                    },
                    "domainSecuritySettings": {
                      "description": "DomainSecurity Settings",
                      "type": "object",
                      "properties": {
                        "ntlmV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "NtlmV1",
                            "modelAsString": true
                          }
                        },
                        "tlsV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "TlsV1",
                            "modelAsString": true
                          }
                        },
                        "syncNtlmPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncNtlmPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncKerberosPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncKerberosPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncOnPremPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncOnPremPasswords",
                            "modelAsString": true
                          }
                        },
                        "kerberosRc4Encryption": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosRc4Encryption",
                            "modelAsString": true
                          }
                        },
                        "kerberosArmoring": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosArmoring",
                            "modelAsString": true
                          }
                        },
                        "ldapSigning": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "LdapSigning",
                            "modelAsString": true
                          }
                        },
                        "channelBinding": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ChannelBinding",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "domainConfigurationType": {
                      "type": "string",
                      "description": "Domain Configuration Type"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Sku Type"
                    },
                    "filteredSync": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                      "x-ms-enum": {
                        "name": "FilteredSync",
                        "modelAsString": true
                      }
                    },
                    "syncScope": {
                      "type": "string",
                      "enum": [
                        "All",
                        "CloudOnly"
                      ],
                      "default": "All",
                      "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                      "x-ms-enum": {
                        "name": "SyncScope",
                        "modelAsString": true
                      }
                    },
                    "notificationSettings": {
                      "description": "Notification Settings",
                      "type": "object",
                      "properties": {
                        "notifyGlobalAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should global admins be notified",
                          "x-ms-enum": {
                            "name": "notifyGlobalAdmins",
                            "modelAsString": true
                          }
                        },
                        "notifyDcAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should domain controller admins be notified",
                          "x-ms-enum": {
                            "name": "notifyDcAdmins",
                            "modelAsString": true
                          }
                        },
                        "additionalRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Email address for additional recipient"
                          },
                          "description": "The list of additional recipients"
                        }
                      }
                    },
                    "migrationProperties": {
                      "readOnly": true,
                      "description": "Migration Properties",
                      "type": "object",
                      "properties": {
                        "oldSubnetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Subnet Id"
                        },
                        "oldVnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Vnet Site Id"
                        },
                        "migrationProgress": {
                          "readOnly": true,
                          "description": "Migration Progress",
                          "type": "object",
                          "properties": {
                            "completionPercentage": {
                              "type": "number",
                              "format": "double",
                              "description": "Completion Percentage"
                            },
                            "progressMessage": {
                              "type": "string",
                              "description": "Progress Message"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "the current deployment or provisioning state, which only appears in the response."
                    },
                    "configDiagnostics": {
                      "description": "Configuration diagnostics data containing latest execution from client.",
                      "type": "object",
                      "properties": {
                        "lastExecuted": {
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain configuration diagnostics DateTime"
                        },
                        "validatorResults": {
                          "type": "array",
                          "description": "List of Configuration Diagnostics validator results.",
                          "items": {
                            "description": "Config Diagnostics validator result data",
                            "type": "object",
                            "properties": {
                              "validatorId": {
                                "type": "string",
                                "description": "Validator identifier"
                              },
                              "replicaSetSubnetDisplayName": {
                                "type": "string",
                                "description": "Replica set location and subnet name"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Running",
                                  "OK",
                                  "Failure",
                                  "Warning",
                                  "Skipped"
                                ],
                                "default": "None",
                                "description": "Status for individual validator after running diagnostics.",
                                "x-ms-enum": {
                                  "name": "status",
                                  "modelAsString": true
                                }
                              },
                              "issues": {
                                "type": "array",
                                "description": "List of resource config validation issues.",
                                "items": {
                                  "description": "Specific issue for a particular config diagnostics validator",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Validation issue identifier."
                                    },
                                    "descriptionParams": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Single resource property involved in issue description."
                                      },
                                      "description": "List of domain resource property name or values used to compose a rich description."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "description": "Domain service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Domain service properties",
                  "type": "object",
                  "properties": {
                    "version": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "Data Model Version"
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory Tenant Id"
                    },
                    "domainName": {
                      "type": "string",
                      "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Deployment Id"
                    },
                    "syncOwner": {
                      "readOnly": true,
                      "type": "string",
                      "description": "SyncOwner ReplicaSet Id"
                    },
                    "syncApplicationId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The unique sync application id of the Azure AD Domain Services deployment."
                    },
                    "replicaSets": {
                      "type": "array",
                      "items": {
                        "description": "ReplicaSet",
                        "type": "object",
                        "properties": {
                          "replicaSetId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "ReplicaSet Id"
                          },
                          "location": {
                            "type": "string",
                            "description": "Virtual network location"
                          },
                          "vnetSiteId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Virtual network site id"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                          },
                          "domainControllerIpAddress": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Domain Controller IP Address"
                            },
                            "description": "List of Domain Controller IP Address"
                          },
                          "externalAccessIpAddress": {
                            "readOnly": true,
                            "type": "string",
                            "description": "External access ip address."
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of Domain Service instance"
                          },
                          "healthLastEvaluated": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "description": "Last domain evaluation run DateTime"
                          },
                          "healthMonitors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Monitors",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Name"
                                },
                                "details": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Monitor Details"
                                }
                              }
                            },
                            "description": "List of Domain Health Monitors"
                          },
                          "healthAlerts": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Domain Health Alerts",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Id"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Name"
                                },
                                "issue": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Issue"
                                },
                                "severity": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert Severity"
                                },
                                "raised": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Raised DateTime"
                                },
                                "lastDetected": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Health Alert Last Detected DateTime"
                                },
                                "resolutionUri": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Health Alert TSG Link"
                                }
                              }
                            },
                            "description": "List of Domain Health Alerts"
                          }
                        }
                      },
                      "description": "List of ReplicaSets"
                    },
                    "ldapsSettings": {
                      "description": "Secure LDAP Settings",
                      "type": "object",
                      "properties": {
                        "ldaps": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "Ldaps",
                            "modelAsString": true
                          }
                        },
                        "pfxCertificate": {
                          "type": "string",
                          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                        },
                        "pfxCertificatePassword": {
                          "type": "string",
                          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                        },
                        "publicCertificate": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Public certificate used to configure secure ldap."
                        },
                        "certificateThumbprint": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Thumbprint of configure ldaps certificate."
                        },
                        "certificateNotAfter": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "NotAfter DateTime of configure ldaps certificate."
                        },
                        "externalAccess": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ExternalAccess",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "resourceForestSettings": {
                      "description": "Resource Forest Settings",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "array",
                          "items": {
                            "description": "Forest Trust Setting",
                            "type": "object",
                            "properties": {
                              "trustedDomainFqdn": {
                                "type": "string",
                                "description": "Trusted Domain FQDN"
                              },
                              "trustDirection": {
                                "type": "string",
                                "description": "Trust Direction"
                              },
                              "friendlyName": {
                                "type": "string",
                                "description": "Friendly Name"
                              },
                              "remoteDnsIps": {
                                "type": "string",
                                "description": "Remote Dns ips"
                              },
                              "trustPassword": {
                                "type": "string",
                                "description": "Trust Password",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "description": "List of settings for Resource Forest"
                        },
                        "resourceForest": {
                          "type": "string",
                          "description": "Resource Forest"
                        }
                      }
                    },
                    "domainSecuritySettings": {
                      "description": "DomainSecurity Settings",
                      "type": "object",
                      "properties": {
                        "ntlmV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "NtlmV1",
                            "modelAsString": true
                          }
                        },
                        "tlsV1": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "TlsV1",
                            "modelAsString": true
                          }
                        },
                        "syncNtlmPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncNtlmPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncKerberosPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncKerberosPasswords",
                            "modelAsString": true
                          }
                        },
                        "syncOnPremPasswords": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "SyncOnPremPasswords",
                            "modelAsString": true
                          }
                        },
                        "kerberosRc4Encryption": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Enabled",
                          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosRc4Encryption",
                            "modelAsString": true
                          }
                        },
                        "kerberosArmoring": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "KerberosArmoring",
                            "modelAsString": true
                          }
                        },
                        "ldapSigning": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "LdapSigning",
                            "modelAsString": true
                          }
                        },
                        "channelBinding": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "default": "Disabled",
                          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                          "x-ms-enum": {
                            "name": "ChannelBinding",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "domainConfigurationType": {
                      "type": "string",
                      "description": "Domain Configuration Type"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Sku Type"
                    },
                    "filteredSync": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                      "x-ms-enum": {
                        "name": "FilteredSync",
                        "modelAsString": true
                      }
                    },
                    "syncScope": {
                      "type": "string",
                      "enum": [
                        "All",
                        "CloudOnly"
                      ],
                      "default": "All",
                      "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                      "x-ms-enum": {
                        "name": "SyncScope",
                        "modelAsString": true
                      }
                    },
                    "notificationSettings": {
                      "description": "Notification Settings",
                      "type": "object",
                      "properties": {
                        "notifyGlobalAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should global admins be notified",
                          "x-ms-enum": {
                            "name": "notifyGlobalAdmins",
                            "modelAsString": true
                          }
                        },
                        "notifyDcAdmins": {
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "description": "Should domain controller admins be notified",
                          "x-ms-enum": {
                            "name": "notifyDcAdmins",
                            "modelAsString": true
                          }
                        },
                        "additionalRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Email address for additional recipient"
                          },
                          "description": "The list of additional recipients"
                        }
                      }
                    },
                    "migrationProperties": {
                      "readOnly": true,
                      "description": "Migration Properties",
                      "type": "object",
                      "properties": {
                        "oldSubnetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Subnet Id"
                        },
                        "oldVnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Old Vnet Site Id"
                        },
                        "migrationProgress": {
                          "readOnly": true,
                          "description": "Migration Progress",
                          "type": "object",
                          "properties": {
                            "completionPercentage": {
                              "type": "number",
                              "format": "double",
                              "description": "Completion Percentage"
                            },
                            "progressMessage": {
                              "type": "string",
                              "description": "Progress Message"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "the current deployment or provisioning state, which only appears in the response."
                    },
                    "configDiagnostics": {
                      "description": "Configuration diagnostics data containing latest execution from client.",
                      "type": "object",
                      "properties": {
                        "lastExecuted": {
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain configuration diagnostics DateTime"
                        },
                        "validatorResults": {
                          "type": "array",
                          "description": "List of Configuration Diagnostics validator results.",
                          "items": {
                            "description": "Config Diagnostics validator result data",
                            "type": "object",
                            "properties": {
                              "validatorId": {
                                "type": "string",
                                "description": "Validator identifier"
                              },
                              "replicaSetSubnetDisplayName": {
                                "type": "string",
                                "description": "Replica set location and subnet name"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Running",
                                  "OK",
                                  "Failure",
                                  "Warning",
                                  "Skipped"
                                ],
                                "default": "None",
                                "description": "Status for individual validator after running diagnostics.",
                                "x-ms-enum": {
                                  "name": "status",
                                  "modelAsString": true
                                }
                              },
                              "issues": {
                                "type": "array",
                                "description": "List of resource config validation issues.",
                                "items": {
                                  "description": "Specific issue for a particular config diagnostics validator",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Validation issue identifier."
                                    },
                                    "descriptionParams": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Single resource property involved in issue description."
                                      },
                                      "description": "List of domain resource property name or values used to compose a rich description."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Aad/operations": {
      "get": {
        "tags": [
          "OuContainer"
        ],
        "description": "Lists all the available OuContainer operations.",
        "operationId": "OuContainerOperations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "description": "The list of domain service operation response.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of operations.",
                  "type": "array",
                  "items": {
                    "description": "The operation supported by Domain Services.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}.",
                        "type": "string"
                      },
                      "display": {
                        "description": "The operation supported by Domain Services.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description of the operation.",
                            "type": "string"
                          },
                          "operation": {
                            "description": "The action that users can perform, based on their permission level.",
                            "type": "string"
                          },
                          "provider": {
                            "description": "Service provider: Domain Services.",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource on which the operation is performed.",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "description": "The origin of the operation.",
                        "type": "string"
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The continuation token for the next page of results.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Aad/domainServices/{domainServiceName}/ouContainer": {
      "get": {
        "tags": [
          "OuContainer"
        ],
        "operationId": "OuContainer_List",
        "summary": "List of OuContainers in DomainService instance",
        "description": "The List of OuContainers in DomainService instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Resource for OuContainer.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource Id"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource name"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      },
                      "etag": {
                        "type": "string",
                        "description": "Resource etag"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "OuContainer properties",
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Azure Active Directory tenant id"
                          },
                          "domainName": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The domain name of Domain Services."
                          },
                          "deploymentId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The Deployment id"
                          },
                          "containerId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The OuContainer name"
                          },
                          "accounts": {
                            "type": "array",
                            "items": {
                              "description": "Container Account",
                              "type": "object",
                              "properties": {
                                "accountName": {
                                  "type": "string",
                                  "description": "The account name"
                                },
                                "spn": {
                                  "type": "string",
                                  "description": "The account spn"
                                },
                                "password": {
                                  "type": "string",
                                  "description": "The account password"
                                }
                              }
                            },
                            "description": "The list of container accounts"
                          },
                          "serviceStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of OuContainer instance"
                          },
                          "distinguishedName": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Distinguished Name of OuContainer instance"
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response."
                          }
                        }
                      }
                    }
                  },
                  "description": "The list of OuContainer."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The continuation token for the next page of results.",
                  "readOnly": true
                }
              },
              "description": "The response from the List OuContainer operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Aad/domainServices/{domainServiceName}/ouContainer/{ouContainerName}": {
      "get": {
        "tags": [
          "OuContainer"
        ],
        "operationId": "OuContainer_Get",
        "summary": "Get particular OuContainer in DomainService instance",
        "description": "Get OuContainer in DomainService instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "ouContainerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the OuContainer.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "description": "Resource for OuContainer.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "OuContainer properties",
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory tenant id"
                    },
                    "domainName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The domain name of Domain Services."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The Deployment id"
                    },
                    "containerId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The OuContainer name"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "description": "Container Account",
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The account name"
                          },
                          "spn": {
                            "type": "string",
                            "description": "The account spn"
                          },
                          "password": {
                            "type": "string",
                            "description": "The account password"
                          }
                        }
                      },
                      "description": "The list of container accounts"
                    },
                    "serviceStatus": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of OuContainer instance"
                    },
                    "distinguishedName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Distinguished Name of OuContainer instance"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OuContainer"
        ],
        "operationId": "OuContainer_Create",
        "summary": "Create OuContainer",
        "description": "The Create OuContainer operation creates a new OuContainer under the specified Domain Service instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "ouContainerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the OuContainer.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAccount",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Container Account Description",
              "type": "object",
              "properties": {
                "accountName": {
                  "type": "string",
                  "description": "The account name"
                },
                "spn": {
                  "type": "string",
                  "description": "The account spn"
                },
                "password": {
                  "type": "string",
                  "description": "The account password"
                }
              }
            },
            "description": "Container Account Description."
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "description": "Resource for OuContainer.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "OuContainer properties",
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory tenant id"
                    },
                    "domainName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The domain name of Domain Services."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The Deployment id"
                    },
                    "containerId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The OuContainer name"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "description": "Container Account",
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The account name"
                          },
                          "spn": {
                            "type": "string",
                            "description": "The account spn"
                          },
                          "password": {
                            "type": "string",
                            "description": "The account password"
                          }
                        }
                      },
                      "description": "The list of container accounts"
                    },
                    "serviceStatus": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of OuContainer instance"
                    },
                    "distinguishedName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Distinguished Name of OuContainer instance"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "HTTP 201 (Created) if the operation completed successfully.",
            "schema": {
              "description": "Resource for OuContainer.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "OuContainer properties",
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory tenant id"
                    },
                    "domainName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The domain name of Domain Services."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The Deployment id"
                    },
                    "containerId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The OuContainer name"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "description": "Container Account",
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The account name"
                          },
                          "spn": {
                            "type": "string",
                            "description": "The account spn"
                          },
                          "password": {
                            "type": "string",
                            "description": "The account password"
                          }
                        }
                      },
                      "description": "The list of container accounts"
                    },
                    "serviceStatus": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of OuContainer instance"
                    },
                    "distinguishedName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Distinguished Name of OuContainer instance"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "description": "Resource for OuContainer.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "OuContainer properties",
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory tenant id"
                    },
                    "domainName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The domain name of Domain Services."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The Deployment id"
                    },
                    "containerId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The OuContainer name"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "description": "Container Account",
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The account name"
                          },
                          "spn": {
                            "type": "string",
                            "description": "The account spn"
                          },
                          "password": {
                            "type": "string",
                            "description": "The account password"
                          }
                        }
                      },
                      "description": "The list of container accounts"
                    },
                    "serviceStatus": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of OuContainer instance"
                    },
                    "distinguishedName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Distinguished Name of OuContainer instance"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OuContainer"
        ],
        "operationId": "OuContainer_Delete",
        "summary": "Delete OuContainer",
        "description": "The Delete OuContainer operation deletes specified OuContainer.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "ouContainerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the OuContainer.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful."
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "204": {
            "description": "HTTP 204 (Not Content) should be used if the resource does not exist and the request is well formed."
          }
        }
      },
      "patch": {
        "tags": [
          "OuContainer"
        ],
        "operationId": "OuContainer_Update",
        "summary": "Update OuContainer (PATCH Resource)",
        "description": "The Update OuContainer operation can be used to update the existing OuContainers.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the domain service.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "ouContainerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the OuContainer.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAccount",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Container Account Description",
              "type": "object",
              "properties": {
                "accountName": {
                  "type": "string",
                  "description": "The account name"
                },
                "spn": {
                  "type": "string",
                  "description": "The account spn"
                },
                "password": {
                  "type": "string",
                  "description": "The account password"
                }
              }
            },
            "description": "Container Account Description."
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP 200 (OK) if the operation was successful.",
            "schema": {
              "description": "Resource for OuContainer.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "OuContainer properties",
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory tenant id"
                    },
                    "domainName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The domain name of Domain Services."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The Deployment id"
                    },
                    "containerId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The OuContainer name"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "description": "Container Account",
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The account name"
                          },
                          "spn": {
                            "type": "string",
                            "description": "The account spn"
                          },
                          "password": {
                            "type": "string",
                            "description": "The account password"
                          }
                        }
                      },
                      "description": "The list of container accounts"
                    },
                    "serviceStatus": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of OuContainer instance"
                    },
                    "distinguishedName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Distinguished Name of OuContainer instance"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "description": "Resource for OuContainer.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Id"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource name"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "etag": {
                  "type": "string",
                  "description": "Resource etag"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "OuContainer properties",
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Azure Active Directory tenant id"
                    },
                    "domainName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The domain name of Domain Services."
                    },
                    "deploymentId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The Deployment id"
                    },
                    "containerId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The OuContainer name"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "description": "Container Account",
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The account name"
                          },
                          "spn": {
                            "type": "string",
                            "description": "The account spn"
                          },
                          "password": {
                            "type": "string",
                            "description": "The account password"
                          }
                        }
                      },
                      "description": "The list of container accounts"
                    },
                    "serviceStatus": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of OuContainer instance"
                    },
                    "distinguishedName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Distinguished Name of OuContainer instance"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "The Resource model definition.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "etag": {
          "type": "string",
          "description": "Resource etag"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "DomainService": {
      "description": "Domain service.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "etag": {
          "type": "string",
          "description": "Resource etag"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Domain service properties",
          "type": "object",
          "properties": {
            "version": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "Data Model Version"
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "Azure Active Directory Tenant Id"
            },
            "domainName": {
              "type": "string",
              "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
            },
            "deploymentId": {
              "readOnly": true,
              "type": "string",
              "description": "Deployment Id"
            },
            "syncOwner": {
              "readOnly": true,
              "type": "string",
              "description": "SyncOwner ReplicaSet Id"
            },
            "syncApplicationId": {
              "readOnly": true,
              "type": "string",
              "description": "The unique sync application id of the Azure AD Domain Services deployment."
            },
            "replicaSets": {
              "type": "array",
              "items": {
                "description": "ReplicaSet",
                "type": "object",
                "properties": {
                  "replicaSetId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "ReplicaSet Id"
                  },
                  "location": {
                    "type": "string",
                    "description": "Virtual network location"
                  },
                  "vnetSiteId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Virtual network site id"
                  },
                  "subnetId": {
                    "type": "string",
                    "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                  },
                  "domainControllerIpAddress": {
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Domain Controller IP Address"
                    },
                    "description": "List of Domain Controller IP Address"
                  },
                  "externalAccessIpAddress": {
                    "readOnly": true,
                    "type": "string",
                    "description": "External access ip address."
                  },
                  "serviceStatus": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Status of Domain Service instance"
                  },
                  "healthLastEvaluated": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time-rfc1123",
                    "description": "Last domain evaluation run DateTime"
                  },
                  "healthMonitors": {
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "Domain Health Monitors",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Health Monitor Id"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Health Monitor Name"
                        },
                        "details": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Health Monitor Details"
                        }
                      }
                    },
                    "description": "List of Domain Health Monitors"
                  },
                  "healthAlerts": {
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "Domain Health Alerts",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Health Alert Id"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Health Alert Name"
                        },
                        "issue": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Health Alert Issue"
                        },
                        "severity": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Health Alert Severity"
                        },
                        "raised": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "Health Alert Raised DateTime"
                        },
                        "lastDetected": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "Health Alert Last Detected DateTime"
                        },
                        "resolutionUri": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Health Alert TSG Link"
                        }
                      }
                    },
                    "description": "List of Domain Health Alerts"
                  }
                }
              },
              "description": "List of ReplicaSets"
            },
            "ldapsSettings": {
              "description": "Secure LDAP Settings",
              "type": "object",
              "properties": {
                "ldaps": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Disabled",
                  "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "Ldaps",
                    "modelAsString": true
                  }
                },
                "pfxCertificate": {
                  "type": "string",
                  "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                },
                "pfxCertificatePassword": {
                  "type": "string",
                  "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                },
                "publicCertificate": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Public certificate used to configure secure ldap."
                },
                "certificateThumbprint": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Thumbprint of configure ldaps certificate."
                },
                "certificateNotAfter": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "NotAfter DateTime of configure ldaps certificate."
                },
                "externalAccess": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Disabled",
                  "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "ExternalAccess",
                    "modelAsString": true
                  }
                }
              }
            },
            "resourceForestSettings": {
              "description": "Resource Forest Settings",
              "type": "object",
              "properties": {
                "settings": {
                  "type": "array",
                  "items": {
                    "description": "Forest Trust Setting",
                    "type": "object",
                    "properties": {
                      "trustedDomainFqdn": {
                        "type": "string",
                        "description": "Trusted Domain FQDN"
                      },
                      "trustDirection": {
                        "type": "string",
                        "description": "Trust Direction"
                      },
                      "friendlyName": {
                        "type": "string",
                        "description": "Friendly Name"
                      },
                      "remoteDnsIps": {
                        "type": "string",
                        "description": "Remote Dns ips"
                      },
                      "trustPassword": {
                        "type": "string",
                        "description": "Trust Password",
                        "x-ms-secret": true
                      }
                    }
                  },
                  "description": "List of settings for Resource Forest"
                },
                "resourceForest": {
                  "type": "string",
                  "description": "Resource Forest"
                }
              }
            },
            "domainSecuritySettings": {
              "description": "DomainSecurity Settings",
              "type": "object",
              "properties": {
                "ntlmV1": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Enabled",
                  "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "NtlmV1",
                    "modelAsString": true
                  }
                },
                "tlsV1": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Enabled",
                  "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "TlsV1",
                    "modelAsString": true
                  }
                },
                "syncNtlmPasswords": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Enabled",
                  "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "SyncNtlmPasswords",
                    "modelAsString": true
                  }
                },
                "syncKerberosPasswords": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Enabled",
                  "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "SyncKerberosPasswords",
                    "modelAsString": true
                  }
                },
                "syncOnPremPasswords": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Enabled",
                  "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "SyncOnPremPasswords",
                    "modelAsString": true
                  }
                },
                "kerberosRc4Encryption": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Enabled",
                  "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "KerberosRc4Encryption",
                    "modelAsString": true
                  }
                },
                "kerberosArmoring": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Disabled",
                  "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "KerberosArmoring",
                    "modelAsString": true
                  }
                },
                "ldapSigning": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Disabled",
                  "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "LdapSigning",
                    "modelAsString": true
                  }
                },
                "channelBinding": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "default": "Disabled",
                  "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                  "x-ms-enum": {
                    "name": "ChannelBinding",
                    "modelAsString": true
                  }
                }
              }
            },
            "domainConfigurationType": {
              "type": "string",
              "description": "Domain Configuration Type"
            },
            "sku": {
              "type": "string",
              "description": "Sku Type"
            },
            "filteredSync": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
              "x-ms-enum": {
                "name": "FilteredSync",
                "modelAsString": true
              }
            },
            "syncScope": {
              "type": "string",
              "enum": [
                "All",
                "CloudOnly"
              ],
              "default": "All",
              "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
              "x-ms-enum": {
                "name": "SyncScope",
                "modelAsString": true
              }
            },
            "notificationSettings": {
              "description": "Notification Settings",
              "type": "object",
              "properties": {
                "notifyGlobalAdmins": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "description": "Should global admins be notified",
                  "x-ms-enum": {
                    "name": "notifyGlobalAdmins",
                    "modelAsString": true
                  }
                },
                "notifyDcAdmins": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "description": "Should domain controller admins be notified",
                  "x-ms-enum": {
                    "name": "notifyDcAdmins",
                    "modelAsString": true
                  }
                },
                "additionalRecipients": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Email address for additional recipient"
                  },
                  "description": "The list of additional recipients"
                }
              }
            },
            "migrationProperties": {
              "readOnly": true,
              "description": "Migration Properties",
              "type": "object",
              "properties": {
                "oldSubnetId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Old Subnet Id"
                },
                "oldVnetSiteId": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Old Vnet Site Id"
                },
                "migrationProgress": {
                  "readOnly": true,
                  "description": "Migration Progress",
                  "type": "object",
                  "properties": {
                    "completionPercentage": {
                      "type": "number",
                      "format": "double",
                      "description": "Completion Percentage"
                    },
                    "progressMessage": {
                      "type": "string",
                      "description": "Progress Message"
                    }
                  }
                }
              }
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "the current deployment or provisioning state, which only appears in the response."
            },
            "configDiagnostics": {
              "description": "Configuration diagnostics data containing latest execution from client.",
              "type": "object",
              "properties": {
                "lastExecuted": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "Last domain configuration diagnostics DateTime"
                },
                "validatorResults": {
                  "type": "array",
                  "description": "List of Configuration Diagnostics validator results.",
                  "items": {
                    "description": "Config Diagnostics validator result data",
                    "type": "object",
                    "properties": {
                      "validatorId": {
                        "type": "string",
                        "description": "Validator identifier"
                      },
                      "replicaSetSubnetDisplayName": {
                        "type": "string",
                        "description": "Replica set location and subnet name"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "None",
                          "Running",
                          "OK",
                          "Failure",
                          "Warning",
                          "Skipped"
                        ],
                        "default": "None",
                        "description": "Status for individual validator after running diagnostics.",
                        "x-ms-enum": {
                          "name": "status",
                          "modelAsString": true
                        }
                      },
                      "issues": {
                        "type": "array",
                        "description": "List of resource config validation issues.",
                        "items": {
                          "description": "Specific issue for a particular config diagnostics validator",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Validation issue identifier."
                            },
                            "descriptionParams": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Single resource property involved in issue description."
                              },
                              "description": "List of domain resource property name or values used to compose a rich description."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "DomainServiceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Domain service.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource Id"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type"
              },
              "location": {
                "type": "string",
                "description": "Resource location",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags"
              },
              "etag": {
                "type": "string",
                "description": "Resource etag"
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Domain service properties",
                "type": "object",
                "properties": {
                  "version": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32",
                    "description": "Data Model Version"
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Azure Active Directory Tenant Id"
                  },
                  "domainName": {
                    "type": "string",
                    "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
                  },
                  "deploymentId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Deployment Id"
                  },
                  "syncOwner": {
                    "readOnly": true,
                    "type": "string",
                    "description": "SyncOwner ReplicaSet Id"
                  },
                  "syncApplicationId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The unique sync application id of the Azure AD Domain Services deployment."
                  },
                  "replicaSets": {
                    "type": "array",
                    "items": {
                      "description": "ReplicaSet",
                      "type": "object",
                      "properties": {
                        "replicaSetId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "ReplicaSet Id"
                        },
                        "location": {
                          "type": "string",
                          "description": "Virtual network location"
                        },
                        "vnetSiteId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Virtual network site id"
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
                        },
                        "domainControllerIpAddress": {
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Domain Controller IP Address"
                          },
                          "description": "List of Domain Controller IP Address"
                        },
                        "externalAccessIpAddress": {
                          "readOnly": true,
                          "type": "string",
                          "description": "External access ip address."
                        },
                        "serviceStatus": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Status of Domain Service instance"
                        },
                        "healthLastEvaluated": {
                          "readOnly": true,
                          "type": "string",
                          "format": "date-time-rfc1123",
                          "description": "Last domain evaluation run DateTime"
                        },
                        "healthMonitors": {
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "description": "Domain Health Monitors",
                            "type": "object",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Health Monitor Id"
                              },
                              "name": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Health Monitor Name"
                              },
                              "details": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Health Monitor Details"
                              }
                            }
                          },
                          "description": "List of Domain Health Monitors"
                        },
                        "healthAlerts": {
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "description": "Domain Health Alerts",
                            "type": "object",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Health Alert Id"
                              },
                              "name": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Health Alert Name"
                              },
                              "issue": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Health Alert Issue"
                              },
                              "severity": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Health Alert Severity"
                              },
                              "raised": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "Health Alert Raised DateTime"
                              },
                              "lastDetected": {
                                "readOnly": true,
                                "type": "string",
                                "format": "date-time",
                                "description": "Health Alert Last Detected DateTime"
                              },
                              "resolutionUri": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Health Alert TSG Link"
                              }
                            }
                          },
                          "description": "List of Domain Health Alerts"
                        }
                      }
                    },
                    "description": "List of ReplicaSets"
                  },
                  "ldapsSettings": {
                    "description": "Secure LDAP Settings",
                    "type": "object",
                    "properties": {
                      "ldaps": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Disabled",
                        "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "Ldaps",
                          "modelAsString": true
                        }
                      },
                      "pfxCertificate": {
                        "type": "string",
                        "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
                      },
                      "pfxCertificatePassword": {
                        "type": "string",
                        "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
                      },
                      "publicCertificate": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Public certificate used to configure secure ldap."
                      },
                      "certificateThumbprint": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Thumbprint of configure ldaps certificate."
                      },
                      "certificateNotAfter": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "NotAfter DateTime of configure ldaps certificate."
                      },
                      "externalAccess": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Disabled",
                        "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "ExternalAccess",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "resourceForestSettings": {
                    "description": "Resource Forest Settings",
                    "type": "object",
                    "properties": {
                      "settings": {
                        "type": "array",
                        "items": {
                          "description": "Forest Trust Setting",
                          "type": "object",
                          "properties": {
                            "trustedDomainFqdn": {
                              "type": "string",
                              "description": "Trusted Domain FQDN"
                            },
                            "trustDirection": {
                              "type": "string",
                              "description": "Trust Direction"
                            },
                            "friendlyName": {
                              "type": "string",
                              "description": "Friendly Name"
                            },
                            "remoteDnsIps": {
                              "type": "string",
                              "description": "Remote Dns ips"
                            },
                            "trustPassword": {
                              "type": "string",
                              "description": "Trust Password",
                              "x-ms-secret": true
                            }
                          }
                        },
                        "description": "List of settings for Resource Forest"
                      },
                      "resourceForest": {
                        "type": "string",
                        "description": "Resource Forest"
                      }
                    }
                  },
                  "domainSecuritySettings": {
                    "description": "DomainSecurity Settings",
                    "type": "object",
                    "properties": {
                      "ntlmV1": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Enabled",
                        "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "NtlmV1",
                          "modelAsString": true
                        }
                      },
                      "tlsV1": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Enabled",
                        "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "TlsV1",
                          "modelAsString": true
                        }
                      },
                      "syncNtlmPasswords": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Enabled",
                        "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "SyncNtlmPasswords",
                          "modelAsString": true
                        }
                      },
                      "syncKerberosPasswords": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Enabled",
                        "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "SyncKerberosPasswords",
                          "modelAsString": true
                        }
                      },
                      "syncOnPremPasswords": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Enabled",
                        "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "SyncOnPremPasswords",
                          "modelAsString": true
                        }
                      },
                      "kerberosRc4Encryption": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Enabled",
                        "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "KerberosRc4Encryption",
                          "modelAsString": true
                        }
                      },
                      "kerberosArmoring": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Disabled",
                        "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "KerberosArmoring",
                          "modelAsString": true
                        }
                      },
                      "ldapSigning": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Disabled",
                        "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "LdapSigning",
                          "modelAsString": true
                        }
                      },
                      "channelBinding": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Disabled",
                        "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
                        "x-ms-enum": {
                          "name": "ChannelBinding",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "domainConfigurationType": {
                    "type": "string",
                    "description": "Domain Configuration Type"
                  },
                  "sku": {
                    "type": "string",
                    "description": "Sku Type"
                  },
                  "filteredSync": {
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
                    "x-ms-enum": {
                      "name": "FilteredSync",
                      "modelAsString": true
                    }
                  },
                  "syncScope": {
                    "type": "string",
                    "enum": [
                      "All",
                      "CloudOnly"
                    ],
                    "default": "All",
                    "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
                    "x-ms-enum": {
                      "name": "SyncScope",
                      "modelAsString": true
                    }
                  },
                  "notificationSettings": {
                    "description": "Notification Settings",
                    "type": "object",
                    "properties": {
                      "notifyGlobalAdmins": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "description": "Should global admins be notified",
                        "x-ms-enum": {
                          "name": "notifyGlobalAdmins",
                          "modelAsString": true
                        }
                      },
                      "notifyDcAdmins": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "description": "Should domain controller admins be notified",
                        "x-ms-enum": {
                          "name": "notifyDcAdmins",
                          "modelAsString": true
                        }
                      },
                      "additionalRecipients": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Email address for additional recipient"
                        },
                        "description": "The list of additional recipients"
                      }
                    }
                  },
                  "migrationProperties": {
                    "readOnly": true,
                    "description": "Migration Properties",
                    "type": "object",
                    "properties": {
                      "oldSubnetId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Old Subnet Id"
                      },
                      "oldVnetSiteId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Old Vnet Site Id"
                      },
                      "migrationProgress": {
                        "readOnly": true,
                        "description": "Migration Progress",
                        "type": "object",
                        "properties": {
                          "completionPercentage": {
                            "type": "number",
                            "format": "double",
                            "description": "Completion Percentage"
                          },
                          "progressMessage": {
                            "type": "string",
                            "description": "Progress Message"
                          }
                        }
                      }
                    }
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "the current deployment or provisioning state, which only appears in the response."
                  },
                  "configDiagnostics": {
                    "description": "Configuration diagnostics data containing latest execution from client.",
                    "type": "object",
                    "properties": {
                      "lastExecuted": {
                        "type": "string",
                        "format": "date-time-rfc1123",
                        "description": "Last domain configuration diagnostics DateTime"
                      },
                      "validatorResults": {
                        "type": "array",
                        "description": "List of Configuration Diagnostics validator results.",
                        "items": {
                          "description": "Config Diagnostics validator result data",
                          "type": "object",
                          "properties": {
                            "validatorId": {
                              "type": "string",
                              "description": "Validator identifier"
                            },
                            "replicaSetSubnetDisplayName": {
                              "type": "string",
                              "description": "Replica set location and subnet name"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "None",
                                "Running",
                                "OK",
                                "Failure",
                                "Warning",
                                "Skipped"
                              ],
                              "default": "None",
                              "description": "Status for individual validator after running diagnostics.",
                              "x-ms-enum": {
                                "name": "status",
                                "modelAsString": true
                              }
                            },
                            "issues": {
                              "type": "array",
                              "description": "List of resource config validation issues.",
                              "items": {
                                "description": "Specific issue for a particular config diagnostics validator",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Validation issue identifier."
                                  },
                                  "descriptionParams": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "Single resource property involved in issue description."
                                    },
                                    "description": "List of domain resource property name or values used to compose a rich description."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "the list of domain services."
        },
        "nextLink": {
          "type": "string",
          "description": "The continuation token for the next page of results.",
          "readOnly": true
        }
      },
      "description": "The response from the List Domain Services operation."
    },
    "DomainServiceProperties": {
      "description": "Properties of the Domain Service.",
      "type": "object",
      "properties": {
        "version": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Data Model Version"
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "Azure Active Directory Tenant Id"
        },
        "domainName": {
          "type": "string",
          "description": "The name of the Azure domain that the user would like to deploy Domain Services to."
        },
        "deploymentId": {
          "readOnly": true,
          "type": "string",
          "description": "Deployment Id"
        },
        "syncOwner": {
          "readOnly": true,
          "type": "string",
          "description": "SyncOwner ReplicaSet Id"
        },
        "syncApplicationId": {
          "readOnly": true,
          "type": "string",
          "description": "The unique sync application id of the Azure AD Domain Services deployment."
        },
        "replicaSets": {
          "type": "array",
          "items": {
            "description": "ReplicaSet",
            "type": "object",
            "properties": {
              "replicaSetId": {
                "readOnly": true,
                "type": "string",
                "description": "ReplicaSet Id"
              },
              "location": {
                "type": "string",
                "description": "Virtual network location"
              },
              "vnetSiteId": {
                "readOnly": true,
                "type": "string",
                "description": "Virtual network site id"
              },
              "subnetId": {
                "type": "string",
                "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
              },
              "domainControllerIpAddress": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Domain Controller IP Address"
                },
                "description": "List of Domain Controller IP Address"
              },
              "externalAccessIpAddress": {
                "readOnly": true,
                "type": "string",
                "description": "External access ip address."
              },
              "serviceStatus": {
                "readOnly": true,
                "type": "string",
                "description": "Status of Domain Service instance"
              },
              "healthLastEvaluated": {
                "readOnly": true,
                "type": "string",
                "format": "date-time-rfc1123",
                "description": "Last domain evaluation run DateTime"
              },
              "healthMonitors": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "description": "Domain Health Monitors",
                  "type": "object",
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Health Monitor Id"
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Health Monitor Name"
                    },
                    "details": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Health Monitor Details"
                    }
                  }
                },
                "description": "List of Domain Health Monitors"
              },
              "healthAlerts": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "description": "Domain Health Alerts",
                  "type": "object",
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Health Alert Id"
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Health Alert Name"
                    },
                    "issue": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Health Alert Issue"
                    },
                    "severity": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Health Alert Severity"
                    },
                    "raised": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Health Alert Raised DateTime"
                    },
                    "lastDetected": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Health Alert Last Detected DateTime"
                    },
                    "resolutionUri": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Health Alert TSG Link"
                    }
                  }
                },
                "description": "List of Domain Health Alerts"
              }
            }
          },
          "description": "List of ReplicaSets"
        },
        "ldapsSettings": {
          "description": "Secure LDAP Settings",
          "type": "object",
          "properties": {
            "ldaps": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Disabled",
              "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
              "x-ms-enum": {
                "name": "Ldaps",
                "modelAsString": true
              }
            },
            "pfxCertificate": {
              "type": "string",
              "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
            },
            "pfxCertificatePassword": {
              "type": "string",
              "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
            },
            "publicCertificate": {
              "readOnly": true,
              "type": "string",
              "description": "Public certificate used to configure secure ldap."
            },
            "certificateThumbprint": {
              "readOnly": true,
              "type": "string",
              "description": "Thumbprint of configure ldaps certificate."
            },
            "certificateNotAfter": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "NotAfter DateTime of configure ldaps certificate."
            },
            "externalAccess": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Disabled",
              "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
              "x-ms-enum": {
                "name": "ExternalAccess",
                "modelAsString": true
              }
            }
          }
        },
        "resourceForestSettings": {
          "description": "Resource Forest Settings",
          "type": "object",
          "properties": {
            "settings": {
              "type": "array",
              "items": {
                "description": "Forest Trust Setting",
                "type": "object",
                "properties": {
                  "trustedDomainFqdn": {
                    "type": "string",
                    "description": "Trusted Domain FQDN"
                  },
                  "trustDirection": {
                    "type": "string",
                    "description": "Trust Direction"
                  },
                  "friendlyName": {
                    "type": "string",
                    "description": "Friendly Name"
                  },
                  "remoteDnsIps": {
                    "type": "string",
                    "description": "Remote Dns ips"
                  },
                  "trustPassword": {
                    "type": "string",
                    "description": "Trust Password",
                    "x-ms-secret": true
                  }
                }
              },
              "description": "List of settings for Resource Forest"
            },
            "resourceForest": {
              "type": "string",
              "description": "Resource Forest"
            }
          }
        },
        "domainSecuritySettings": {
          "description": "DomainSecurity Settings",
          "type": "object",
          "properties": {
            "ntlmV1": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Enabled",
              "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
              "x-ms-enum": {
                "name": "NtlmV1",
                "modelAsString": true
              }
            },
            "tlsV1": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Enabled",
              "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
              "x-ms-enum": {
                "name": "TlsV1",
                "modelAsString": true
              }
            },
            "syncNtlmPasswords": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Enabled",
              "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
              "x-ms-enum": {
                "name": "SyncNtlmPasswords",
                "modelAsString": true
              }
            },
            "syncKerberosPasswords": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Enabled",
              "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
              "x-ms-enum": {
                "name": "SyncKerberosPasswords",
                "modelAsString": true
              }
            },
            "syncOnPremPasswords": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Enabled",
              "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
              "x-ms-enum": {
                "name": "SyncOnPremPasswords",
                "modelAsString": true
              }
            },
            "kerberosRc4Encryption": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Enabled",
              "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
              "x-ms-enum": {
                "name": "KerberosRc4Encryption",
                "modelAsString": true
              }
            },
            "kerberosArmoring": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Disabled",
              "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
              "x-ms-enum": {
                "name": "KerberosArmoring",
                "modelAsString": true
              }
            },
            "ldapSigning": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Disabled",
              "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
              "x-ms-enum": {
                "name": "LdapSigning",
                "modelAsString": true
              }
            },
            "channelBinding": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "default": "Disabled",
              "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
              "x-ms-enum": {
                "name": "ChannelBinding",
                "modelAsString": true
              }
            }
          }
        },
        "domainConfigurationType": {
          "type": "string",
          "description": "Domain Configuration Type"
        },
        "sku": {
          "type": "string",
          "description": "Sku Type"
        },
        "filteredSync": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
          "x-ms-enum": {
            "name": "FilteredSync",
            "modelAsString": true
          }
        },
        "syncScope": {
          "type": "string",
          "enum": [
            "All",
            "CloudOnly"
          ],
          "default": "All",
          "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
          "x-ms-enum": {
            "name": "SyncScope",
            "modelAsString": true
          }
        },
        "notificationSettings": {
          "description": "Notification Settings",
          "type": "object",
          "properties": {
            "notifyGlobalAdmins": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "description": "Should global admins be notified",
              "x-ms-enum": {
                "name": "notifyGlobalAdmins",
                "modelAsString": true
              }
            },
            "notifyDcAdmins": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "description": "Should domain controller admins be notified",
              "x-ms-enum": {
                "name": "notifyDcAdmins",
                "modelAsString": true
              }
            },
            "additionalRecipients": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Email address for additional recipient"
              },
              "description": "The list of additional recipients"
            }
          }
        },
        "migrationProperties": {
          "readOnly": true,
          "description": "Migration Properties",
          "type": "object",
          "properties": {
            "oldSubnetId": {
              "readOnly": true,
              "type": "string",
              "description": "Old Subnet Id"
            },
            "oldVnetSiteId": {
              "readOnly": true,
              "type": "string",
              "description": "Old Vnet Site Id"
            },
            "migrationProgress": {
              "readOnly": true,
              "description": "Migration Progress",
              "type": "object",
              "properties": {
                "completionPercentage": {
                  "type": "number",
                  "format": "double",
                  "description": "Completion Percentage"
                },
                "progressMessage": {
                  "type": "string",
                  "description": "Progress Message"
                }
              }
            }
          }
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "the current deployment or provisioning state, which only appears in the response."
        },
        "configDiagnostics": {
          "description": "Configuration diagnostics data containing latest execution from client.",
          "type": "object",
          "properties": {
            "lastExecuted": {
              "type": "string",
              "format": "date-time-rfc1123",
              "description": "Last domain configuration diagnostics DateTime"
            },
            "validatorResults": {
              "type": "array",
              "description": "List of Configuration Diagnostics validator results.",
              "items": {
                "description": "Config Diagnostics validator result data",
                "type": "object",
                "properties": {
                  "validatorId": {
                    "type": "string",
                    "description": "Validator identifier"
                  },
                  "replicaSetSubnetDisplayName": {
                    "type": "string",
                    "description": "Replica set location and subnet name"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "None",
                      "Running",
                      "OK",
                      "Failure",
                      "Warning",
                      "Skipped"
                    ],
                    "default": "None",
                    "description": "Status for individual validator after running diagnostics.",
                    "x-ms-enum": {
                      "name": "status",
                      "modelAsString": true
                    }
                  },
                  "issues": {
                    "type": "array",
                    "description": "List of resource config validation issues.",
                    "items": {
                      "description": "Specific issue for a particular config diagnostics validator",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Validation issue identifier."
                        },
                        "descriptionParams": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Single resource property involved in issue description."
                          },
                          "description": "List of domain resource property name or values used to compose a rich description."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ReplicaSet": {
      "description": "Replica Set Definition",
      "type": "object",
      "properties": {
        "replicaSetId": {
          "readOnly": true,
          "type": "string",
          "description": "ReplicaSet Id"
        },
        "location": {
          "type": "string",
          "description": "Virtual network location"
        },
        "vnetSiteId": {
          "readOnly": true,
          "type": "string",
          "description": "Virtual network site id"
        },
        "subnetId": {
          "type": "string",
          "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
        },
        "domainControllerIpAddress": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string",
            "description": "Domain Controller IP Address"
          },
          "description": "List of Domain Controller IP Address"
        },
        "externalAccessIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "External access ip address."
        },
        "serviceStatus": {
          "readOnly": true,
          "type": "string",
          "description": "Status of Domain Service instance"
        },
        "healthLastEvaluated": {
          "readOnly": true,
          "type": "string",
          "format": "date-time-rfc1123",
          "description": "Last domain evaluation run DateTime"
        },
        "healthMonitors": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Domain Health Monitors",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Health Monitor Id"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Health Monitor Name"
              },
              "details": {
                "readOnly": true,
                "type": "string",
                "description": "Health Monitor Details"
              }
            }
          },
          "description": "List of Domain Health Monitors"
        },
        "healthAlerts": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Domain Health Alerts",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Health Alert Id"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Health Alert Name"
              },
              "issue": {
                "readOnly": true,
                "type": "string",
                "description": "Health Alert Issue"
              },
              "severity": {
                "readOnly": true,
                "type": "string",
                "description": "Health Alert Severity"
              },
              "raised": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "Health Alert Raised DateTime"
              },
              "lastDetected": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "Health Alert Last Detected DateTime"
              },
              "resolutionUri": {
                "readOnly": true,
                "type": "string",
                "description": "Health Alert TSG Link"
              }
            }
          },
          "description": "List of Domain Health Alerts"
        }
      }
    },
    "LdapsSettings": {
      "description": "Secure LDAP Settings",
      "type": "object",
      "properties": {
        "ldaps": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Disabled",
          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
          "x-ms-enum": {
            "name": "Ldaps",
            "modelAsString": true
          }
        },
        "pfxCertificate": {
          "type": "string",
          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
        },
        "pfxCertificatePassword": {
          "type": "string",
          "description": "The password to decrypt the provided Secure LDAP certificate pfx file."
        },
        "publicCertificate": {
          "readOnly": true,
          "type": "string",
          "description": "Public certificate used to configure secure ldap."
        },
        "certificateThumbprint": {
          "readOnly": true,
          "type": "string",
          "description": "Thumbprint of configure ldaps certificate."
        },
        "certificateNotAfter": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "NotAfter DateTime of configure ldaps certificate."
        },
        "externalAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Disabled",
          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
          "x-ms-enum": {
            "name": "ExternalAccess",
            "modelAsString": true
          }
        }
      }
    },
    "HealthMonitor": {
      "description": "Health Monitor Description",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Health Monitor Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Health Monitor Name"
        },
        "details": {
          "readOnly": true,
          "type": "string",
          "description": "Health Monitor Details"
        }
      }
    },
    "HealthAlert": {
      "description": "Health Alert Description",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Health Alert Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Health Alert Name"
        },
        "issue": {
          "readOnly": true,
          "type": "string",
          "description": "Health Alert Issue"
        },
        "severity": {
          "readOnly": true,
          "type": "string",
          "description": "Health Alert Severity"
        },
        "raised": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Health Alert Raised DateTime"
        },
        "lastDetected": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Health Alert Last Detected DateTime"
        },
        "resolutionUri": {
          "readOnly": true,
          "type": "string",
          "description": "Health Alert TSG Link"
        }
      }
    },
    "NotificationSettings": {
      "description": "Settings for notification",
      "type": "object",
      "properties": {
        "notifyGlobalAdmins": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "description": "Should global admins be notified",
          "x-ms-enum": {
            "name": "notifyGlobalAdmins",
            "modelAsString": true
          }
        },
        "notifyDcAdmins": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "description": "Should domain controller admins be notified",
          "x-ms-enum": {
            "name": "notifyDcAdmins",
            "modelAsString": true
          }
        },
        "additionalRecipients": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Email address for additional recipient"
          },
          "description": "The list of additional recipients"
        }
      }
    },
    "ResourceForestSettings": {
      "description": "Settings for Resource Forest",
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "description": "Forest Trust Setting",
            "type": "object",
            "properties": {
              "trustedDomainFqdn": {
                "type": "string",
                "description": "Trusted Domain FQDN"
              },
              "trustDirection": {
                "type": "string",
                "description": "Trust Direction"
              },
              "friendlyName": {
                "type": "string",
                "description": "Friendly Name"
              },
              "remoteDnsIps": {
                "type": "string",
                "description": "Remote Dns ips"
              },
              "trustPassword": {
                "type": "string",
                "description": "Trust Password",
                "x-ms-secret": true
              }
            }
          },
          "description": "List of settings for Resource Forest"
        },
        "resourceForest": {
          "type": "string",
          "description": "Resource Forest"
        }
      }
    },
    "ForestTrust": {
      "description": "Forest Trust Setting",
      "type": "object",
      "properties": {
        "trustedDomainFqdn": {
          "type": "string",
          "description": "Trusted Domain FQDN"
        },
        "trustDirection": {
          "type": "string",
          "description": "Trust Direction"
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly Name"
        },
        "remoteDnsIps": {
          "type": "string",
          "description": "Remote Dns ips"
        },
        "trustPassword": {
          "type": "string",
          "description": "Trust Password",
          "x-ms-secret": true
        }
      }
    },
    "MigrationProperties": {
      "description": "Migration Properties",
      "type": "object",
      "properties": {
        "oldSubnetId": {
          "readOnly": true,
          "type": "string",
          "description": "Old Subnet Id"
        },
        "oldVnetSiteId": {
          "readOnly": true,
          "type": "string",
          "description": "Old Vnet Site Id"
        },
        "migrationProgress": {
          "readOnly": true,
          "description": "Migration Progress",
          "type": "object",
          "properties": {
            "completionPercentage": {
              "type": "number",
              "format": "double",
              "description": "Completion Percentage"
            },
            "progressMessage": {
              "type": "string",
              "description": "Progress Message"
            }
          }
        }
      }
    },
    "MigrationProgress": {
      "description": "Migration Progress",
      "type": "object",
      "properties": {
        "completionPercentage": {
          "type": "number",
          "format": "double",
          "description": "Completion Percentage"
        },
        "progressMessage": {
          "type": "string",
          "description": "Progress Message"
        }
      }
    },
    "DomainSecuritySettings": {
      "description": "Domain Security Settings",
      "type": "object",
      "properties": {
        "ntlmV1": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
          "x-ms-enum": {
            "name": "NtlmV1",
            "modelAsString": true
          }
        },
        "tlsV1": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
          "x-ms-enum": {
            "name": "TlsV1",
            "modelAsString": true
          }
        },
        "syncNtlmPasswords": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
          "x-ms-enum": {
            "name": "SyncNtlmPasswords",
            "modelAsString": true
          }
        },
        "syncKerberosPasswords": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
          "x-ms-enum": {
            "name": "SyncKerberosPasswords",
            "modelAsString": true
          }
        },
        "syncOnPremPasswords": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
          "x-ms-enum": {
            "name": "SyncOnPremPasswords",
            "modelAsString": true
          }
        },
        "kerberosRc4Encryption": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
          "x-ms-enum": {
            "name": "KerberosRc4Encryption",
            "modelAsString": true
          }
        },
        "kerberosArmoring": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Disabled",
          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
          "x-ms-enum": {
            "name": "KerberosArmoring",
            "modelAsString": true
          }
        },
        "ldapSigning": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Disabled",
          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
          "x-ms-enum": {
            "name": "LdapSigning",
            "modelAsString": true
          }
        },
        "channelBinding": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Disabled",
          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
          "x-ms-enum": {
            "name": "ChannelBinding",
            "modelAsString": true
          }
        }
      }
    },
    "ConfigDiagnostics": {
      "description": "Configuration Diagnostics",
      "type": "object",
      "properties": {
        "lastExecuted": {
          "type": "string",
          "format": "date-time-rfc1123",
          "description": "Last domain configuration diagnostics DateTime"
        },
        "validatorResults": {
          "type": "array",
          "description": "List of Configuration Diagnostics validator results.",
          "items": {
            "description": "Config Diagnostics validator result data",
            "type": "object",
            "properties": {
              "validatorId": {
                "type": "string",
                "description": "Validator identifier"
              },
              "replicaSetSubnetDisplayName": {
                "type": "string",
                "description": "Replica set location and subnet name"
              },
              "status": {
                "type": "string",
                "enum": [
                  "None",
                  "Running",
                  "OK",
                  "Failure",
                  "Warning",
                  "Skipped"
                ],
                "default": "None",
                "description": "Status for individual validator after running diagnostics.",
                "x-ms-enum": {
                  "name": "status",
                  "modelAsString": true
                }
              },
              "issues": {
                "type": "array",
                "description": "List of resource config validation issues.",
                "items": {
                  "description": "Specific issue for a particular config diagnostics validator",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Validation issue identifier."
                    },
                    "descriptionParams": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Single resource property involved in issue description."
                      },
                      "description": "List of domain resource property name or values used to compose a rich description."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigDiagnosticsValidatorResult": {
      "description": "Config Diagnostics validator result data",
      "type": "object",
      "properties": {
        "validatorId": {
          "type": "string",
          "description": "Validator identifier"
        },
        "replicaSetSubnetDisplayName": {
          "type": "string",
          "description": "Replica set location and subnet name"
        },
        "status": {
          "type": "string",
          "enum": [
            "None",
            "Running",
            "OK",
            "Failure",
            "Warning",
            "Skipped"
          ],
          "default": "None",
          "description": "Status for individual validator after running diagnostics.",
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        },
        "issues": {
          "type": "array",
          "description": "List of resource config validation issues.",
          "items": {
            "description": "Specific issue for a particular config diagnostics validator",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Validation issue identifier."
              },
              "descriptionParams": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Single resource property involved in issue description."
                },
                "description": "List of domain resource property name or values used to compose a rich description."
              }
            }
          }
        }
      }
    },
    "ConfigDiagnosticsValidatorResultIssue": {
      "description": "Specific issue for a particular config diagnostics validator",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Validation issue identifier."
        },
        "descriptionParams": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Single resource property involved in issue description."
          },
          "description": "List of domain resource property name or values used to compose a rich description."
        }
      }
    },
    "CloudError": {
      "type": "object",
      "x-ms-external": true,
      "properties": {
        "error": {
          "description": "An error response from the Domain Services.",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "description": "An error response from the Domain Services."
    },
    "CloudErrorBody": {
      "type": "object",
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the Domain Services."
    },
    "OperationEntityListResult": {
      "description": "The list of domain service operation response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of operations.",
          "type": "array",
          "items": {
            "description": "The operation supported by Domain Services.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Operation name: {provider}/{resource}/{operation}.",
                "type": "string"
              },
              "display": {
                "description": "The operation supported by Domain Services.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description of the operation.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "The action that users can perform, based on their permission level.",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Service provider: Domain Services.",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Resource on which the operation is performed.",
                    "type": "string"
                  }
                }
              },
              "origin": {
                "description": "The origin of the operation.",
                "type": "string"
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The continuation token for the next page of results.",
          "readOnly": true
        }
      }
    },
    "OperationEntity": {
      "description": "The operation supported by Domain Services.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "description": "The operation supported by Domain Services.",
          "type": "object",
          "properties": {
            "description": {
              "description": "The description of the operation.",
              "type": "string"
            },
            "operation": {
              "description": "The action that users can perform, based on their permission level.",
              "type": "string"
            },
            "provider": {
              "description": "Service provider: Domain Services.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed.",
              "type": "string"
            }
          }
        },
        "origin": {
          "description": "The origin of the operation.",
          "type": "string"
        }
      }
    },
    "OperationDisplayInfo": {
      "description": "The operation supported by Domain Services.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the operation.",
          "type": "string"
        },
        "operation": {
          "description": "The action that users can perform, based on their permission level.",
          "type": "string"
        },
        "provider": {
          "description": "Service provider: Domain Services.",
          "type": "string"
        },
        "resource": {
          "description": "Resource on which the operation is performed.",
          "type": "string"
        }
      }
    },
    "OuContainerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Resource for OuContainer.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Resource Id"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Resource name"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Resource type"
              },
              "location": {
                "type": "string",
                "description": "Resource location",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags"
              },
              "etag": {
                "type": "string",
                "description": "Resource etag"
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "OuContainer properties",
                "type": "object",
                "properties": {
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Azure Active Directory tenant id"
                  },
                  "domainName": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The domain name of Domain Services."
                  },
                  "deploymentId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The Deployment id"
                  },
                  "containerId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The OuContainer name"
                  },
                  "accounts": {
                    "type": "array",
                    "items": {
                      "description": "Container Account",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "type": "string",
                          "description": "The account name"
                        },
                        "spn": {
                          "type": "string",
                          "description": "The account spn"
                        },
                        "password": {
                          "type": "string",
                          "description": "The account password"
                        }
                      }
                    },
                    "description": "The list of container accounts"
                  },
                  "serviceStatus": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Status of OuContainer instance"
                  },
                  "distinguishedName": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Distinguished Name of OuContainer instance"
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The current deployment or provisioning state, which only appears in the response."
                  }
                }
              }
            }
          },
          "description": "The list of OuContainer."
        },
        "nextLink": {
          "type": "string",
          "description": "The continuation token for the next page of results.",
          "readOnly": true
        }
      },
      "description": "The response from the List OuContainer operation."
    },
    "OuContainer": {
      "description": "Resource for OuContainer.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "etag": {
          "type": "string",
          "description": "Resource etag"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "OuContainer properties",
          "type": "object",
          "properties": {
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "Azure Active Directory tenant id"
            },
            "domainName": {
              "readOnly": true,
              "type": "string",
              "description": "The domain name of Domain Services."
            },
            "deploymentId": {
              "readOnly": true,
              "type": "string",
              "description": "The Deployment id"
            },
            "containerId": {
              "readOnly": true,
              "type": "string",
              "description": "The OuContainer name"
            },
            "accounts": {
              "type": "array",
              "items": {
                "description": "Container Account",
                "type": "object",
                "properties": {
                  "accountName": {
                    "type": "string",
                    "description": "The account name"
                  },
                  "spn": {
                    "type": "string",
                    "description": "The account spn"
                  },
                  "password": {
                    "type": "string",
                    "description": "The account password"
                  }
                }
              },
              "description": "The list of container accounts"
            },
            "serviceStatus": {
              "readOnly": true,
              "type": "string",
              "description": "Status of OuContainer instance"
            },
            "distinguishedName": {
              "readOnly": true,
              "type": "string",
              "description": "Distinguished Name of OuContainer instance"
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The current deployment or provisioning state, which only appears in the response."
            }
          }
        }
      }
    },
    "OuContainerProperties": {
      "description": "Properties of the OuContainer.",
      "type": "object",
      "properties": {
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "Azure Active Directory tenant id"
        },
        "domainName": {
          "readOnly": true,
          "type": "string",
          "description": "The domain name of Domain Services."
        },
        "deploymentId": {
          "readOnly": true,
          "type": "string",
          "description": "The Deployment id"
        },
        "containerId": {
          "readOnly": true,
          "type": "string",
          "description": "The OuContainer name"
        },
        "accounts": {
          "type": "array",
          "items": {
            "description": "Container Account",
            "type": "object",
            "properties": {
              "accountName": {
                "type": "string",
                "description": "The account name"
              },
              "spn": {
                "type": "string",
                "description": "The account spn"
              },
              "password": {
                "type": "string",
                "description": "The account password"
              }
            }
          },
          "description": "The list of container accounts"
        },
        "serviceStatus": {
          "readOnly": true,
          "type": "string",
          "description": "Status of OuContainer instance"
        },
        "distinguishedName": {
          "readOnly": true,
          "type": "string",
          "description": "Distinguished Name of OuContainer instance"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response."
        }
      }
    },
    "ContainerAccount": {
      "description": "Container Account Description",
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The account name"
        },
        "spn": {
          "type": "string",
          "description": "The account spn"
        },
        "password": {
          "type": "string",
          "description": "The account password"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "DomainServiceNameParameter": {
      "name": "domainServiceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the domain service.",
      "x-ms-parameter-location": "method"
    },
    "OuContainerNameParameter": {
      "name": "ouContainerName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the OuContainer.",
      "x-ms-parameter-location": "method"
    }
  }
}