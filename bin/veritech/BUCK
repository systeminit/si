load(
    "@prelude-si//:macros.bzl",
    "docker_image",
    "export_file",
    "nix_omnibus_pkg",
    "rust_binary",
    "shellcheck",
    "shfmt_check",
    "test_suite",
)

test_suite(
    name = "check-lint",
    tests = [
        ":check-lint-rust-bin",
        ":check-lint-rust-unit",
        ":check-lint-shell",
    ],
)

test_suite(
    name = "check-format",
    tests = [
        ":check-format-rust",
        ":check-format-shell",
    ],
)

rust_binary(
    name = "veritech",
    edition = "2021",
    deps = [
        "//lib/si-std:si-std",
        "//lib/si-service:si-service",
        "//lib/telemetry-application-rs:telemetry-application",
        "//lib/tokio-watchdog:tokio-watchdog",
        "//lib/veritech-server:veritech-server",
        "//third-party/rust:clap",
        "//third-party/rust:color-eyre",
        "//third-party/rust:tokio",
        "//third-party/rust:tokio-util",
    ],
    srcs = glob(["src/**/*.rs"]),
    env = {"CARGO_BIN_NAME": "veritech"},
    resources = {
        "cyclone": "//bin/cyclone:cyclone",
        "dev.decryption.key": "//lib/veritech-server:dev.decryption.key",
        "lang-js": "//bin/lang-js:bin",
        "firecracker-setup.sh": "//lib/si-firecracker:firecracker-setup.sh",
        "prepare_jailer.sh": "//lib/si-firecracker:prepare_jailer.sh",
    },
    visibility = ["PUBLIC"],
)

export_file(
    name = "docker-entrypoint.sh",
)

shfmt_check(
    name = "check-format-shell",
    srcs = [":docker-entrypoint.sh"],
)

shellcheck(
    name = "check-lint-shell",
    srcs = [":docker-entrypoint.sh"],
)

docker_image(
    name = "image",
    image_name = "veritech",
    flake_lock = "//:flake.lock",
    build_deps = [
        "//bin/veritech:veritech",
        "//bin/veritech:docker-entrypoint.sh",
        "//bin/cyclone:cyclone",
        "//bin/lang-js:bin",
    ],
)

nix_omnibus_pkg(
    name = "omnibus",
    pkg_name = "veritech",
    build_dep = "//bin/veritech:veritech",
)
