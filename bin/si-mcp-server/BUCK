load(
    "@prelude-si//:macros.bzl",
    "alias",
    "docker_image",
    "export_file",
)
load(
    "@prelude-si//:deno.bzl",
    "deno_compile",
    "deno_format",
    "deno_test",
)

export_file(
    name = "deno.json",
)

filegroup(
    name = "srcs",
    srcs = glob([
        "**/*",
    ]),
    visibility = ["PUBLIC"],
)

deno_compile(
    name = "build",
    main = "main.ts",
    out = "si-mcp-server",
    srcs = glob([
        "src/**/*.ts",
        "main.ts",
    ]),
    permissions = [
        "allow-all",
    ],
    visibility = ["PUBLIC"],
)

deno_format(
    name = "fix-format",
    srcs = glob(["**/*.ts"]),
    ignore = ["node_modules"],
)

deno_format(
    name = "check-format",
    srcs = glob(["**/*.ts"]),
    check = True,
)

deno_test(
    name = "test-unit",
    srcs = glob(["src/**/*_test.ts"]),
    ignore = ["node_modules"],
    permissions = [
        "allow-all",
    ],
    env = [
        "SI_API_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3b3Jrc3BhY2VJZCI6InRlc3Qtd29ya3NwYWNlLWlkIiwidXNlcklkIjoidGVzdC11c2VyLWlkIn0.fakesignature",
        "SI_WORKSPACE_ID=test-workspace-id"
    ],
)

docker_image(
    name = "image",
    image_name = "si-mcp-server",
    flake_lock = "//:flake.lock",
    build_deps = [
        "//bin/si-mcp-server:build",
    ],
)
