---
# configures the system to use the loki docker driver
# see https://grafana.com/docs/loki/latest/send-data/docker-driver/
x-loki-logged-service: &loki-logged-service
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-batch-size: "400"
        loki-retries: "1"
        max-file: "2"
        max-size: "10m"

services:
  db:
    # uncomment below to get these logs in grafana
    #<<: *loki-logged-service
    image: systeminit/postgres:stable
    environment:
      - "POSTGRES_PASSWORD=bugbear"
      - "PGPASSWORD=bugbear"
      - "POSTGRES_USER=si"
      - "POSTGRES_DB=si"
      - "POSTGRES_MULTIPLE_DBS=si_layer_db,si_auth,si_module_index"
    ports:
      - "7432:5432"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /tmp/ready ]"]
      interval: 5s
      timeout: 10s
      retries: 5

  promtail:
    #<<: *loki-logged-service
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /tmp:/logs
      - ./promtail-config/config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml    

  loki:
    #<<: *loki-logged-service
    image: grafana/loki
    container_name: loki
    volumes:
      - ./loki-config/config.yml:/etc/loki/config.yml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yml

  db-test:
    #<<: *loki-logged-service
    image: systeminit/postgres:stable
    environment:
      - "POSTGRES_PASSWORD=bugbear"
      - "PGPASSWORD=bugbear"
      - "POSTGRES_USER=si_test"
      - "POSTGRES_DB=si_test"
      - "POSTGRES_MULTIPLE_DBS=si_test_dal,si_test_sdf_server,si_test_layer_db"
    command:
      - "-c"
      - "fsync=off"
      - "-c"
      - "full_page_writes=off"
    ports:
      - "8432:5432"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /tmp/ready ]"]
      interval: 5s
      timeout: 10s
      retries: 5

  postgres:
    #<<: *loki-logged-service
    image: systeminit/pgbouncer:stable
    environment:
      - "DB_USER=si"
      - "DB_PASSWORD=bugbear"
      - "DB_HOST=db"
      - "ADMIN_USERS=postgres,dbuser,si"
      - "AUTH_TYPE=scram-sha-256"
      - "MAX_CLIENT_CONN=100000"
      - "MAX_PREPARED_STATEMENTS=10000"
      - "DEFAULT_POOL_SIZE=250"
      - "MIN_POOL_SIZE=200"
      - "POOL_MODE=transaction"
    ports:
      - "5432:5432"
    depends_on:
      - db

  postgres-test:
    #<<: *loki-logged-service
    image: systeminit/pgbouncer:stable
    environment:
      - "DB_USER=si_test"
      - "DB_PASSWORD=bugbear"
      - "DB_HOST=db-test"
      - "ADMIN_USERS=postgres,dbuser,si_test"
      - "AUTH_TYPE=scram-sha-256"
      - "MAX_CLIENT_CONN=100000"
      - "DEFAULT_POOL_SIZE=10"
      - "SERVER_IDLE_TIMEOUT=10"
      - "POOL_MODE=transaction"
      - "MAX_PREPARED_STATEMENTS=10000"
    ports:
      - "6432:5432"
    depends_on:
      - db-test

  nats:
    #<<: *loki-logged-service
    image: systeminit/nats:stable
    command:
      - "--config"
      - "nats-server.conf"
    ports:
      - "4222:4222"
      - "8222:8222"
    # We can't have the docker-compose finish before postgres is ready, this is
    # a workaround to allow the rest of the tilt file continue to create sdf etc
    # so that the start doesn't fail as the databases don't exist
    depends_on:
      - postgres

  jaeger:
    #<<: *loki-logged-service
    image: systeminit/jaeger:stable
    ports:
      - "5317:4317"
      - "16686:16686"

  grafana:
    #<<: *loki-logged-service
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./datasources:/etc/grafana/provisioning/datasources
    environment:
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
      - "GF_AUTH_DISABLE_LOGIN_FORM=true"

  otelcol:
    #<<: *loki-logged-service
    image: systeminit/otelcol:stable
    # If you'd like to ship to honeycomb from your local machine, you need these two variables in the otelcol
    #environment:
    #  - "SI_OTEL_COL__HONEYCOMB_API_KEY=<insert key>"
    #  - "SI_OTEL_COL__CONFIG_PATH=/etc/otelcol/honeycomb-config.yaml"
    ports:
      - "4317:4317"
      - "55679:55679"
    depends_on:
      - jaeger

  localstack:
    #<<: *loki-logged-service
    image: localstack/localstack
    ports:
      - "4566:4566"
