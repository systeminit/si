load(
    "@prelude-si//:macros.bzl",
    "alias",
    "test_suite",
    "tilt_docker_compose_pull",
    "tilt_docker_compose_stop",
    "tilt_down",
    "tilt_up",
    "yapf_check",
)

python_bootstrap_binary(
    name = "healthcheck",
    main = "healthcheck.py",
    visibility = ["PUBLIC"],
)

alias(
    name = "dev",
    actual = ":up",
)

# Bring up the full set of services for development (defaults to release build optimizations)
tilt_up(
    name = "up",
)

# Bring up the full set of services for development with standard build optimizations
tilt_up(
    name = "up-standard",
    args = [
        "--standard-rustc-build-mode",
    ],
)

# Bring up the full set of services for development with debug build optimizations
tilt_up(
    name = "up-debug-all",
    args = [
        "--debug-rustc-build-mode",
    ],
)

# Bring up the full set of services for development with debug build optimizations, except for
# rebaser
tilt_up(
    name = "up-debug",
    args = [
        "--debug-no-rebaser-rustc-build-mode",
    ],
)

# Bring up only platform services such as PostgreSQL, NATS, etc.
tilt_up(
    name = "platform",
    args = [
        "platform",
        "testing",
    ],
)

# Pull for new Docker images
tilt_docker_compose_pull(
    name = "pull",
    docker_compose_file = "docker-compose.platform.yml",
)

# Stop any remaining/running services while attempting to preserve persistent state
tilt_docker_compose_stop(
    name = "stop",
    docker_compose_file = "docker-compose.platform.yml",
)

# Bring down any remaining/running services
tilt_down(
    name = "down",
)

yapf_check(
    name = "check-format-python",
    srcs = glob(["**/*.py"]),
)

test_suite(
    name = "check-format",
    tests = [
        ":check-format-python",
    ],
)

export_file(
    name = "minica.pem",
    visibility = ["PUBLIC"],
)
