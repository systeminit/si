name: Cypress E2E Tests

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: "where to test"
      test_dir:
        type: string
        required: true
        description: "which test directory to execute"
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: "where to test"
        default: "tools"
        options:
          - tools
          - production
          - perf
          - ec2-node
      test_dir:
        type: string
        required: true
        description: "which test directory to execute"
        default: "cypress/e2e"

jobs:
  define-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v4
      - id: tests
        working-directory: app/web/${{ inputs.test_dir }}
        run: |
          test_dirs=$(find . -mindepth 1 -maxdepth 1 -type d  | sed 's|^\./||')
          test_array="[]"
          for d in $test_dirs; do
            test_array=$(echo "$test_array" | jq --arg d "$d" '. += [$d]')
          done
          test_array=$(echo "$test_array" | jq -c '.')
          echo "$test_array"
          echo "tests=$test_array" >> "$GITHUB_OUTPUT"

  launch-ec2-node:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    if: ${{ inputs.environment == 'ec2-node' }}
    outputs:
      remote-ip: ${{ steps.get-ip.outputs.remote_ip }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete any lingering nodes
        working-directory: .ci/
        run: |
          export SI_API_TOKEN="${{ secrets.SI_API_TOKEN }}"
          export SI_WORKSPACE_ID="${{ vars.MANAGEMENT_WORKSPACE_ID }}"
          python3 ./delete-stacks.py

      - name: Deploy EC2 node
        working-directory: .ci/
        run: |
          export SI_API_TOKEN="${{ secrets.SI_API_TOKEN }}"
          export SI_WORKSPACE_ID="${{ vars.MANAGEMENT_WORKSPACE_ID }}"
          python3 ./deploy-stack.py

      - name: Save IP
        id: get-ip
        working-directory: .ci/
        run: |
          remote_ip=$(grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' "./ip")
          echo "Remote IP set to ${remote_ip}"
          echo "remote_ip=$remote_ip" >> "$GITHUB_OUTPUT"
          echo "remote_ip=$remote_ip" >> "$GITHUB_ENV"

  cypress-tests:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [define-test-matrix, launch-ec2-node]
    if: always() && (needs.define-test-matrix.result == 'success') && (inputs.environment != 'ec2-node' || needs.launch-ec2-node.result == 'success')
    strategy:
      fail-fast: true
      matrix:
        tests: ${{ fromJSON(needs.define-test-matrix.outputs.tests) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  cleanup:
    name: Cleanup EC2 Nodes
    runs-on: ubuntu-latest
    needs: cypress-tests
    environment: ${{ inputs.environment }}
    if: inputs.environment == 'ec2-node' && always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete EC2 nodes
        working-directory: .ci/
        run: |
          export SI_API_TOKEN="${{ secrets.SI_API_TOKEN }}"
          export SI_WORKSPACE_ID="${{ vars.MANAGEMENT_WORKSPACE_ID }}"
          python3 ./delete-stacks.py
