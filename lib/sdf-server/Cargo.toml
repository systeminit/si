[package]
name = "sdf-server"
version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
edition.workspace = true
rust-version.workspace = true
publish.workspace = true

[dependencies]
async-openai = { workspace = true }
async-trait = { workspace = true }
audit-database = { path = "../../lib/audit-database" }
auth-api-client = { path = "../../lib/auth-api-client" }
axum = { workspace = true }
base64 = { workspace = true }
buck2-resources = { path = "../../lib/buck2-resources" }
chrono = { workspace = true }
clap = { workspace = true }
convert_case = { workspace = true }
dal = { path = "../../lib/dal" }
dal-materialized-views = { path = "../../lib/dal-materialized-views" }
derive_builder = { workspace = true }
derive_more = { workspace = true }
edda-client = { path = "../../lib/edda-client" }
edda-core = { path = "../../lib/edda-core" }
frigg = { path = "../../lib/frigg" }
futures = { workspace = true }
futures-lite = { workspace = true }
hyper = { workspace = true }
innit-client = { path = "../../lib/innit-client" }
itertools = { workspace = true }
jsonptr = { workspace = true }
module-index-client = { path = "../../lib/module-index-client" }
names = { workspace = true }
nats-multiplexer = { path = "../../lib/nats-multiplexer" }
nats-multiplexer-client = { path = "../../lib/nats-multiplexer-client" }
nats-subscriber = { path = "../../lib/nats-subscriber" }
nix = { workspace = true }
once_cell = { workspace = true }
pathdiff = { workspace = true }
permissions = { path = "../../lib/permissions" }
rand = { workspace = true }
rebaser-client = { path = "../../lib/rebaser-client" }
regex = { workspace = true }
remain = { workspace = true }
reqwest = { workspace = true }
sdf-core = { path = "../../lib/sdf-core" }
sdf-extract = { path = "../../lib/sdf-extract" }
sdf-v1-routes-actions = { path = "../../lib/sdf-v1-routes-actions" }
sdf-v1-routes-attribute = { path = "../../lib/sdf-v1-routes-attribute" }
sdf-v1-routes-change-sets = { path = "../../lib/sdf-v1-routes-change-sets" }
sdf-v1-routes-component = { path = "../../lib/sdf-v1-routes-component" }
sdf-v1-routes-diagram = { path = "../../lib/sdf-v1-routes-diagram" }
sdf-v1-routes-module = { path = "../../lib/sdf-v1-routes-module" }
sdf-v1-routes-qualification = { path = "../../lib/sdf-v1-routes-qualification" }
sdf-v1-routes-secret = { path = "../../lib/sdf-v1-routes-secret" }
sdf-v1-routes-session = { path = "../../lib/sdf-v1-routes-session" }
sdf-v1-routes-variant = { path = "../../lib/sdf-v1-routes-variant" }
sdf-v1-routes-ws = { path = "../../lib/sdf-v1-routes-ws" }
serde = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }
si-crypto = { path = "../../lib/si-crypto" }
si-data-nats = { path = "../../lib/si-data-nats" }
si-data-pg = { path = "../../lib/si-data-pg" }
si-data-spicedb = { path = "../../lib/si-data-spicedb" }
si-db = { path = "../../lib/si-db" }
si-events = { path = "../../lib/si-events-rs" }
si-frontend-mv-types = { path = "../../lib/si-frontend-mv-types-rs" }
si-frontend-types = { path = "../../lib/si-frontend-types-rs" }
si-id = { path = "../../lib/si-id" }
si-jwt-public-key = { path = "../../lib/si-jwt-public-key" }
si-layer-cache = { path = "../../lib/si-layer-cache" }
si-pkg = { path = "../../lib/si-pkg" }
si-posthog = { path = "../../lib/si-posthog-rs" }
si-settings = { path = "../../lib/si-settings" }
si-std = { path = "../../lib/si-std" }
si-tls = { path = "../../lib/si-tls" }
sodiumoxide = { workspace = true }
strum = { workspace = true }
telemetry = { path = "../../lib/telemetry-rs" }
telemetry-http = { path = "../../lib/telemetry-http-rs" }
thiserror = { workspace = true }
tokio = { workspace = true }
tokio-stream = { workspace = true }
tokio-tungstenite = { workspace = true }
tokio-util = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }
tracing-tunnel = { workspace = true }
ulid = { workspace = true }
url = { workspace = true }
veritech-client = { path = "../../lib/veritech-client" }
y-sync = { workspace = true }

[dev-dependencies]
dal-test = { path = "../../lib/dal-test" }
indoc = { workspace = true }
pretty_assertions_sorted = { workspace = true }
sdf-test = { path = "../../lib/sdf-test" }
yrs = { workspace = true }
